import * as $protobuf from "protobufjs";
import {Long} from "protobufjs";
/** Namespace IRIS. */
export namespace IRIS {

    /** Properties of a DealsApiRequest. */
    interface IDealsApiRequest {

        /** DealsApiRequest serialNum */
        serialNum?: (number|Long|null);

        /** DealsApiRequest countRequest */
        countRequest?: (IRIS.IDealsCountRequest|null);

        /** DealsApiRequest dealsRequest */
        dealsRequest?: (IRIS.IDealsRequest|null);

        /** DealsApiRequest exportRequest */
        exportRequest?: (IRIS.IDealsExportRequest|null);
    }

    /** Represents a DealsApiRequest. */
    class DealsApiRequest implements IDealsApiRequest {

        /**
         * Constructs a new DealsApiRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IDealsApiRequest);

        /** DealsApiRequest serialNum. */
        public serialNum: (number|Long);

        /** DealsApiRequest countRequest. */
        public countRequest?: (IRIS.IDealsCountRequest|null);

        /** DealsApiRequest dealsRequest. */
        public dealsRequest?: (IRIS.IDealsRequest|null);

        /** DealsApiRequest exportRequest. */
        public exportRequest?: (IRIS.IDealsExportRequest|null);

        /** DealsApiRequest request. */
        public request?: ("countRequest"|"dealsRequest"|"exportRequest");

        /**
         * Creates a new DealsApiRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DealsApiRequest instance
         */
        public static create(properties?: IRIS.IDealsApiRequest): IRIS.DealsApiRequest;

        /**
         * Encodes the specified DealsApiRequest message. Does not implicitly {@link IRIS.DealsApiRequest.verify|verify} messages.
         * @param message DealsApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IDealsApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DealsApiRequest message, length delimited. Does not implicitly {@link IRIS.DealsApiRequest.verify|verify} messages.
         * @param message DealsApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IDealsApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DealsApiRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DealsApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.DealsApiRequest;

        /**
         * Decodes a DealsApiRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DealsApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.DealsApiRequest;

        /**
         * Verifies a DealsApiRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DealsApiRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DealsApiRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.DealsApiRequest;

        /**
         * Creates a plain object from a DealsApiRequest message. Also converts values to other types if specified.
         * @param message DealsApiRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.DealsApiRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DealsApiRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DealsApiReply. */
    interface IDealsApiReply {

        /** DealsApiReply serialNum */
        serialNum?: (number|Long|null);

        /** DealsApiReply errorMessage */
        errorMessage?: (IRIS.IErrorMessage|null);

        /** DealsApiReply dealsCountReply */
        dealsCountReply?: (IRIS.IDealsCountReply|null);

        /** DealsApiReply dealsReply */
        dealsReply?: (IRIS.IDealsReply|null);

        /** DealsApiReply exportReply */
        exportReply?: (IRIS.IDealsExportReply|null);
    }

    /**
     * Ответ &API; по сделкам с ценными бумагами.
     * Сообщения deals_count_reply, deals_reply, export_reply и error_message взаимоисключаются.
     * Для получения данного сообщения необходимо подписаться на топик: "jms.topic.iris.Deals.client" (см. <xref linkend="section_using_deals"/>).
     */
    class DealsApiReply implements IDealsApiReply {

        /**
         * Constructs a new DealsApiReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IDealsApiReply);

        /** DealsApiReply serialNum. */
        public serialNum: (number|Long);

        /** DealsApiReply errorMessage. */
        public errorMessage?: (IRIS.IErrorMessage|null);

        /** DealsApiReply dealsCountReply. */
        public dealsCountReply?: (IRIS.IDealsCountReply|null);

        /** DealsApiReply dealsReply. */
        public dealsReply?: (IRIS.IDealsReply|null);

        /** DealsApiReply exportReply. */
        public exportReply?: (IRIS.IDealsExportReply|null);

        /** DealsApiReply replay. */
        public replay?: ("errorMessage"|"dealsCountReply"|"dealsReply"|"exportReply");

        /**
         * Creates a new DealsApiReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DealsApiReply instance
         */
        public static create(properties?: IRIS.IDealsApiReply): IRIS.DealsApiReply;

        /**
         * Encodes the specified DealsApiReply message. Does not implicitly {@link IRIS.DealsApiReply.verify|verify} messages.
         * @param message DealsApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IDealsApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DealsApiReply message, length delimited. Does not implicitly {@link IRIS.DealsApiReply.verify|verify} messages.
         * @param message DealsApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IDealsApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DealsApiReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DealsApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.DealsApiReply;

        /**
         * Decodes a DealsApiReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DealsApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.DealsApiReply;

        /**
         * Verifies a DealsApiReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DealsApiReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DealsApiReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.DealsApiReply;

        /**
         * Creates a plain object from a DealsApiReply message. Also converts values to other types if specified.
         * @param message DealsApiReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.DealsApiReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DealsApiReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OrdersApiRequest. */
    interface IOrdersApiRequest {

        /** OrdersApiRequest serialNum */
        serialNum?: (number|Long|null);

        /** OrdersApiRequest countRequest */
        countRequest?: (IRIS.IOrdersCountRequest|null);

        /** OrdersApiRequest ordersRequest */
        ordersRequest?: (IRIS.IOrdersRequest|null);

        /** OrdersApiRequest exportRequest */
        exportRequest?: (IRIS.IOrdersExportRequest|null);
    }

    /** Represents an OrdersApiRequest. */
    class OrdersApiRequest implements IOrdersApiRequest {

        /**
         * Constructs a new OrdersApiRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IOrdersApiRequest);

        /** OrdersApiRequest serialNum. */
        public serialNum: (number|Long);

        /** OrdersApiRequest countRequest. */
        public countRequest?: (IRIS.IOrdersCountRequest|null);

        /** OrdersApiRequest ordersRequest. */
        public ordersRequest?: (IRIS.IOrdersRequest|null);

        /** OrdersApiRequest exportRequest. */
        public exportRequest?: (IRIS.IOrdersExportRequest|null);

        /** OrdersApiRequest request. */
        public request?: ("countRequest"|"ordersRequest"|"exportRequest");

        /**
         * Creates a new OrdersApiRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OrdersApiRequest instance
         */
        public static create(properties?: IRIS.IOrdersApiRequest): IRIS.OrdersApiRequest;

        /**
         * Encodes the specified OrdersApiRequest message. Does not implicitly {@link IRIS.OrdersApiRequest.verify|verify} messages.
         * @param message OrdersApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IOrdersApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OrdersApiRequest message, length delimited. Does not implicitly {@link IRIS.OrdersApiRequest.verify|verify} messages.
         * @param message OrdersApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IOrdersApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OrdersApiRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OrdersApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.OrdersApiRequest;

        /**
         * Decodes an OrdersApiRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OrdersApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.OrdersApiRequest;

        /**
         * Verifies an OrdersApiRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OrdersApiRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OrdersApiRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.OrdersApiRequest;

        /**
         * Creates a plain object from an OrdersApiRequest message. Also converts values to other types if specified.
         * @param message OrdersApiRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.OrdersApiRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OrdersApiRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OrdersApiReply. */
    interface IOrdersApiReply {

        /** OrdersApiReply serialNum */
        serialNum?: (number|Long|null);

        /** OrdersApiReply errorMessage */
        errorMessage?: (IRIS.IErrorMessage|null);

        /** OrdersApiReply ordersCountReply */
        ordersCountReply?: (IRIS.IOrdersCountReply|null);

        /** OrdersApiReply ordersReply */
        ordersReply?: (IRIS.IOrdersReply|null);

        /** OrdersApiReply exportReply */
        exportReply?: (IRIS.IOrdersExportReply|null);
    }

    /**
     * Ответ &API; по заявкам на рынке ценных бумаг.
     * Сообщения orders_count_reply, orders_reply, export_reply и error_message взаимоисключаются.
     * Для получения данного сообщения необходимо подписаться на топик: "jms.topic.iris.Orders.client" (см. <xref linkend="section_using_orders"/>).
     */
    class OrdersApiReply implements IOrdersApiReply {

        /**
         * Constructs a new OrdersApiReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IOrdersApiReply);

        /** OrdersApiReply serialNum. */
        public serialNum: (number|Long);

        /** OrdersApiReply errorMessage. */
        public errorMessage?: (IRIS.IErrorMessage|null);

        /** OrdersApiReply ordersCountReply. */
        public ordersCountReply?: (IRIS.IOrdersCountReply|null);

        /** OrdersApiReply ordersReply. */
        public ordersReply?: (IRIS.IOrdersReply|null);

        /** OrdersApiReply exportReply. */
        public exportReply?: (IRIS.IOrdersExportReply|null);

        /** OrdersApiReply replay. */
        public replay?: ("errorMessage"|"ordersCountReply"|"ordersReply"|"exportReply");

        /**
         * Creates a new OrdersApiReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OrdersApiReply instance
         */
        public static create(properties?: IRIS.IOrdersApiReply): IRIS.OrdersApiReply;

        /**
         * Encodes the specified OrdersApiReply message. Does not implicitly {@link IRIS.OrdersApiReply.verify|verify} messages.
         * @param message OrdersApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IOrdersApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OrdersApiReply message, length delimited. Does not implicitly {@link IRIS.OrdersApiReply.verify|verify} messages.
         * @param message OrdersApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IOrdersApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OrdersApiReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OrdersApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.OrdersApiReply;

        /**
         * Decodes an OrdersApiReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OrdersApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.OrdersApiReply;

        /**
         * Verifies an OrdersApiReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OrdersApiReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OrdersApiReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.OrdersApiReply;

        /**
         * Creates a plain object from an OrdersApiReply message. Also converts values to other types if specified.
         * @param message OrdersApiReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.OrdersApiReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OrdersApiReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurDealsApiRequest. */
    interface ICurDealsApiRequest {

        /** CurDealsApiRequest serialNum */
        serialNum?: (number|Long|null);

        /** CurDealsApiRequest countRequest */
        countRequest?: (IRIS.ICurDealsCountRequest|null);

        /** CurDealsApiRequest dealsRequest */
        dealsRequest?: (IRIS.ICurDealsRequest|null);

        /** CurDealsApiRequest exportRequest */
        exportRequest?: (IRIS.ICurDealsExportRequest|null);
    }

    /** Represents a CurDealsApiRequest. */
    class CurDealsApiRequest implements ICurDealsApiRequest {

        /**
         * Constructs a new CurDealsApiRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurDealsApiRequest);

        /** CurDealsApiRequest serialNum. */
        public serialNum: (number|Long);

        /** CurDealsApiRequest countRequest. */
        public countRequest?: (IRIS.ICurDealsCountRequest|null);

        /** CurDealsApiRequest dealsRequest. */
        public dealsRequest?: (IRIS.ICurDealsRequest|null);

        /** CurDealsApiRequest exportRequest. */
        public exportRequest?: (IRIS.ICurDealsExportRequest|null);

        /** CurDealsApiRequest request. */
        public request?: ("countRequest"|"dealsRequest"|"exportRequest");

        /**
         * Creates a new CurDealsApiRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurDealsApiRequest instance
         */
        public static create(properties?: IRIS.ICurDealsApiRequest): IRIS.CurDealsApiRequest;

        /**
         * Encodes the specified CurDealsApiRequest message. Does not implicitly {@link IRIS.CurDealsApiRequest.verify|verify} messages.
         * @param message CurDealsApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurDealsApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurDealsApiRequest message, length delimited. Does not implicitly {@link IRIS.CurDealsApiRequest.verify|verify} messages.
         * @param message CurDealsApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurDealsApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurDealsApiRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurDealsApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurDealsApiRequest;

        /**
         * Decodes a CurDealsApiRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurDealsApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurDealsApiRequest;

        /**
         * Verifies a CurDealsApiRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurDealsApiRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurDealsApiRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurDealsApiRequest;

        /**
         * Creates a plain object from a CurDealsApiRequest message. Also converts values to other types if specified.
         * @param message CurDealsApiRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurDealsApiRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurDealsApiRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurDealsApiReply. */
    interface ICurDealsApiReply {

        /** CurDealsApiReply serialNum */
        serialNum?: (number|Long|null);

        /** CurDealsApiReply errorMessage */
        errorMessage?: (IRIS.IErrorMessage|null);

        /** CurDealsApiReply dealsCountReply */
        dealsCountReply?: (IRIS.ICurDealsCountReply|null);

        /** CurDealsApiReply dealsReply */
        dealsReply?: (IRIS.ICurDealsReply|null);

        /** CurDealsApiReply exportReply */
        exportReply?: (IRIS.ICurDealsExportReply|null);
    }

    /**
     * Ответ &API; по сделкам на валютном рынке.
     * Сообщения deals_count_reply, deals_reply и error_message взаимоисключаются.
     * Для получения данного сообщения необходимо подписаться на топик: "jms.topic.iris.CurDeals.client" (см. <xref linkend="section_using_curdeals"/>).
     */
    class CurDealsApiReply implements ICurDealsApiReply {

        /**
         * Constructs a new CurDealsApiReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurDealsApiReply);

        /** CurDealsApiReply serialNum. */
        public serialNum: (number|Long);

        /** CurDealsApiReply errorMessage. */
        public errorMessage?: (IRIS.IErrorMessage|null);

        /** CurDealsApiReply dealsCountReply. */
        public dealsCountReply?: (IRIS.ICurDealsCountReply|null);

        /** CurDealsApiReply dealsReply. */
        public dealsReply?: (IRIS.ICurDealsReply|null);

        /** CurDealsApiReply exportReply. */
        public exportReply?: (IRIS.ICurDealsExportReply|null);

        /** CurDealsApiReply replay. */
        public replay?: ("errorMessage"|"dealsCountReply"|"dealsReply"|"exportReply");

        /**
         * Creates a new CurDealsApiReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurDealsApiReply instance
         */
        public static create(properties?: IRIS.ICurDealsApiReply): IRIS.CurDealsApiReply;

        /**
         * Encodes the specified CurDealsApiReply message. Does not implicitly {@link IRIS.CurDealsApiReply.verify|verify} messages.
         * @param message CurDealsApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurDealsApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurDealsApiReply message, length delimited. Does not implicitly {@link IRIS.CurDealsApiReply.verify|verify} messages.
         * @param message CurDealsApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurDealsApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurDealsApiReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurDealsApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurDealsApiReply;

        /**
         * Decodes a CurDealsApiReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurDealsApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurDealsApiReply;

        /**
         * Verifies a CurDealsApiReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurDealsApiReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurDealsApiReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurDealsApiReply;

        /**
         * Creates a plain object from a CurDealsApiReply message. Also converts values to other types if specified.
         * @param message CurDealsApiReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurDealsApiReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurDealsApiReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurOrdersApiRequest. */
    interface ICurOrdersApiRequest {

        /** CurOrdersApiRequest serialNum */
        serialNum?: (number|Long|null);

        /** CurOrdersApiRequest countRequest */
        countRequest?: (IRIS.ICurOrdersCountRequest|null);

        /** CurOrdersApiRequest ordersRequest */
        ordersRequest?: (IRIS.ICurOrdersRequest|null);

        /** CurOrdersApiRequest exportRequest */
        exportRequest?: (IRIS.ICurOrdersExportRequest|null);
    }

    /**
     * Запрос &API; в отношении заявок на валютном рынке.
     * Сообщения count_request, orders_request и export_request взаимоисключаются.
     * Отправляется в очередь: "jms.queue.iris.CurOrders" (см. <xref linkend="section_using_curorders"/>).
     */
    class CurOrdersApiRequest implements ICurOrdersApiRequest {

        /**
         * Constructs a new CurOrdersApiRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurOrdersApiRequest);

        /** CurOrdersApiRequest serialNum. */
        public serialNum: (number|Long);

        /** CurOrdersApiRequest countRequest. */
        public countRequest?: (IRIS.ICurOrdersCountRequest|null);

        /** CurOrdersApiRequest ordersRequest. */
        public ordersRequest?: (IRIS.ICurOrdersRequest|null);

        /** CurOrdersApiRequest exportRequest. */
        public exportRequest?: (IRIS.ICurOrdersExportRequest|null);

        /** CurOrdersApiRequest request. */
        public request?: ("countRequest"|"ordersRequest"|"exportRequest");

        /**
         * Creates a new CurOrdersApiRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurOrdersApiRequest instance
         */
        public static create(properties?: IRIS.ICurOrdersApiRequest): IRIS.CurOrdersApiRequest;

        /**
         * Encodes the specified CurOrdersApiRequest message. Does not implicitly {@link IRIS.CurOrdersApiRequest.verify|verify} messages.
         * @param message CurOrdersApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurOrdersApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurOrdersApiRequest message, length delimited. Does not implicitly {@link IRIS.CurOrdersApiRequest.verify|verify} messages.
         * @param message CurOrdersApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurOrdersApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurOrdersApiRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurOrdersApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurOrdersApiRequest;

        /**
         * Decodes a CurOrdersApiRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurOrdersApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurOrdersApiRequest;

        /**
         * Verifies a CurOrdersApiRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurOrdersApiRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurOrdersApiRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurOrdersApiRequest;

        /**
         * Creates a plain object from a CurOrdersApiRequest message. Also converts values to other types if specified.
         * @param message CurOrdersApiRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurOrdersApiRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurOrdersApiRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurOrdersApiReply. */
    interface ICurOrdersApiReply {

        /** CurOrdersApiReply serialNum */
        serialNum?: (number|Long|null);

        /** CurOrdersApiReply errorMessage */
        errorMessage?: (IRIS.IErrorMessage|null);

        /** CurOrdersApiReply ordersCountReply */
        ordersCountReply?: (IRIS.ICurOrdersCountReply|null);

        /** CurOrdersApiReply ordersReply */
        ordersReply?: (IRIS.ICurOrdersReply|null);

        /** CurOrdersApiReply exportReply */
        exportReply?: (IRIS.ICurOrdersExportReply|null);
    }

    /**
     * Ответ &API; по заявкам на валютном рынке.
     * Сообщения orders_count_reply, orders_reply, export_reply и error_message взаимоисключаются.
     * Для получения данного сообщения необходимо подписаться на топик: "jms.topic.iris.CurOrders.client" (см. <xref linkend="section_using_curorders"/>).
     */
    class CurOrdersApiReply implements ICurOrdersApiReply {

        /**
         * Constructs a new CurOrdersApiReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurOrdersApiReply);

        /** CurOrdersApiReply serialNum. */
        public serialNum: (number|Long);

        /** CurOrdersApiReply errorMessage. */
        public errorMessage?: (IRIS.IErrorMessage|null);

        /** CurOrdersApiReply ordersCountReply. */
        public ordersCountReply?: (IRIS.ICurOrdersCountReply|null);

        /** CurOrdersApiReply ordersReply. */
        public ordersReply?: (IRIS.ICurOrdersReply|null);

        /** CurOrdersApiReply exportReply. */
        public exportReply?: (IRIS.ICurOrdersExportReply|null);

        /** CurOrdersApiReply replay. */
        public replay?: ("errorMessage"|"ordersCountReply"|"ordersReply"|"exportReply");

        /**
         * Creates a new CurOrdersApiReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurOrdersApiReply instance
         */
        public static create(properties?: IRIS.ICurOrdersApiReply): IRIS.CurOrdersApiReply;

        /**
         * Encodes the specified CurOrdersApiReply message. Does not implicitly {@link IRIS.CurOrdersApiReply.verify|verify} messages.
         * @param message CurOrdersApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurOrdersApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurOrdersApiReply message, length delimited. Does not implicitly {@link IRIS.CurOrdersApiReply.verify|verify} messages.
         * @param message CurOrdersApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurOrdersApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurOrdersApiReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurOrdersApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurOrdersApiReply;

        /**
         * Decodes a CurOrdersApiReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurOrdersApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurOrdersApiReply;

        /**
         * Verifies a CurOrdersApiReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurOrdersApiReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurOrdersApiReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurOrdersApiReply;

        /**
         * Creates a plain object from a CurOrdersApiReply message. Also converts values to other types if specified.
         * @param message CurOrdersApiReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurOrdersApiReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurOrdersApiReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TotalsApiRequest. */
    interface ITotalsApiRequest {

        /** TotalsApiRequest serialNum */
        serialNum?: (number|Long|null);

        /** TotalsApiRequest countRequest */
        countRequest?: (IRIS.ITotalsCountRequest|null);

        /** TotalsApiRequest totalsRequest */
        totalsRequest?: (IRIS.ITotalsRequest|null);

        /** TotalsApiRequest quotationsRequest */
        quotationsRequest?: (IRIS.IQuotationsRequest|null);

        /** TotalsApiRequest risersFallersRequest */
        risersFallersRequest?: (IRIS.IRisersFallersRequest|null);
    }

    /** Represents a TotalsApiRequest. */
    class TotalsApiRequest implements ITotalsApiRequest {

        /**
         * Constructs a new TotalsApiRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ITotalsApiRequest);

        /** TotalsApiRequest serialNum. */
        public serialNum: (number|Long);

        /** TotalsApiRequest countRequest. */
        public countRequest?: (IRIS.ITotalsCountRequest|null);

        /** TotalsApiRequest totalsRequest. */
        public totalsRequest?: (IRIS.ITotalsRequest|null);

        /** TotalsApiRequest quotationsRequest. */
        public quotationsRequest?: (IRIS.IQuotationsRequest|null);

        /** TotalsApiRequest risersFallersRequest. */
        public risersFallersRequest?: (IRIS.IRisersFallersRequest|null);

        /** TotalsApiRequest request. */
        public request?: ("countRequest"|"totalsRequest"|"quotationsRequest"|"risersFallersRequest");

        /**
         * Creates a new TotalsApiRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TotalsApiRequest instance
         */
        public static create(properties?: IRIS.ITotalsApiRequest): IRIS.TotalsApiRequest;

        /**
         * Encodes the specified TotalsApiRequest message. Does not implicitly {@link IRIS.TotalsApiRequest.verify|verify} messages.
         * @param message TotalsApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ITotalsApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TotalsApiRequest message, length delimited. Does not implicitly {@link IRIS.TotalsApiRequest.verify|verify} messages.
         * @param message TotalsApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ITotalsApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TotalsApiRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TotalsApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.TotalsApiRequest;

        /**
         * Decodes a TotalsApiRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TotalsApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.TotalsApiRequest;

        /**
         * Verifies a TotalsApiRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TotalsApiRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TotalsApiRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.TotalsApiRequest;

        /**
         * Creates a plain object from a TotalsApiRequest message. Also converts values to other types if specified.
         * @param message TotalsApiRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.TotalsApiRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TotalsApiRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TotalsApiReply. */
    interface ITotalsApiReply {

        /** TotalsApiReply serialNum */
        serialNum?: (number|Long|null);

        /** TotalsApiReply errorMessage */
        errorMessage?: (IRIS.IErrorMessage|null);

        /** TotalsApiReply totalsCountReply */
        totalsCountReply?: (IRIS.ITotalsCountReply|null);

        /** TotalsApiReply totalsReply */
        totalsReply?: (IRIS.ITotalsReply|null);

        /** TotalsApiReply quotationsReply */
        quotationsReply?: (IRIS.IQuotationsReply|null);

        /** TotalsApiReply risersFallersReply */
        risersFallersReply?: (IRIS.IRisersFallersReply|null);
    }

    /**
     * Ответ &API; с информацией о торгах на рынке ценных бумаг, сгруппированной за период.
     * Сообщения totals_count_reply, totals_reply, quotations_reply, risers_fallers_reply и error_message взаимоисключаются.
     * Для получения данного сообщения необходимо подписаться на топик: "jms.topic.iris.Totals.client" (см. <xref linkend="section_using_totals"/>).
     */
    class TotalsApiReply implements ITotalsApiReply {

        /**
         * Constructs a new TotalsApiReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ITotalsApiReply);

        /** TotalsApiReply serialNum. */
        public serialNum: (number|Long);

        /** TotalsApiReply errorMessage. */
        public errorMessage?: (IRIS.IErrorMessage|null);

        /** TotalsApiReply totalsCountReply. */
        public totalsCountReply?: (IRIS.ITotalsCountReply|null);

        /** TotalsApiReply totalsReply. */
        public totalsReply?: (IRIS.ITotalsReply|null);

        /** TotalsApiReply quotationsReply. */
        public quotationsReply?: (IRIS.IQuotationsReply|null);

        /** TotalsApiReply risersFallersReply. */
        public risersFallersReply?: (IRIS.IRisersFallersReply|null);

        /** TotalsApiReply replay. */
        public replay?: ("errorMessage"|"totalsCountReply"|"totalsReply"|"quotationsReply"|"risersFallersReply");

        /**
         * Creates a new TotalsApiReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TotalsApiReply instance
         */
        public static create(properties?: IRIS.ITotalsApiReply): IRIS.TotalsApiReply;

        /**
         * Encodes the specified TotalsApiReply message. Does not implicitly {@link IRIS.TotalsApiReply.verify|verify} messages.
         * @param message TotalsApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ITotalsApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TotalsApiReply message, length delimited. Does not implicitly {@link IRIS.TotalsApiReply.verify|verify} messages.
         * @param message TotalsApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ITotalsApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TotalsApiReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TotalsApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.TotalsApiReply;

        /**
         * Decodes a TotalsApiReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TotalsApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.TotalsApiReply;

        /**
         * Verifies a TotalsApiReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TotalsApiReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TotalsApiReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.TotalsApiReply;

        /**
         * Creates a plain object from a TotalsApiReply message. Also converts values to other types if specified.
         * @param message TotalsApiReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.TotalsApiReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TotalsApiReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurTotalsApiRequest. */
    interface ICurTotalsApiRequest {

        /** CurTotalsApiRequest serialNum */
        serialNum?: (number|Long|null);

        /** CurTotalsApiRequest countRequest */
        countRequest?: (IRIS.ICurTotalsCountRequest|null);

        /** CurTotalsApiRequest totalsRequest */
        totalsRequest?: (IRIS.ICurTotalsRequest|null);

        /** CurTotalsApiRequest quotationsRequest */
        quotationsRequest?: (IRIS.ICurQuotationsRequest|null);
    }

    /** Represents a CurTotalsApiRequest. */
    class CurTotalsApiRequest implements ICurTotalsApiRequest {

        /**
         * Constructs a new CurTotalsApiRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurTotalsApiRequest);

        /** CurTotalsApiRequest serialNum. */
        public serialNum: (number|Long);

        /** CurTotalsApiRequest countRequest. */
        public countRequest?: (IRIS.ICurTotalsCountRequest|null);

        /** CurTotalsApiRequest totalsRequest. */
        public totalsRequest?: (IRIS.ICurTotalsRequest|null);

        /** CurTotalsApiRequest quotationsRequest. */
        public quotationsRequest?: (IRIS.ICurQuotationsRequest|null);

        /** CurTotalsApiRequest request. */
        public request?: ("countRequest"|"totalsRequest"|"quotationsRequest");

        /**
         * Creates a new CurTotalsApiRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurTotalsApiRequest instance
         */
        public static create(properties?: IRIS.ICurTotalsApiRequest): IRIS.CurTotalsApiRequest;

        /**
         * Encodes the specified CurTotalsApiRequest message. Does not implicitly {@link IRIS.CurTotalsApiRequest.verify|verify} messages.
         * @param message CurTotalsApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurTotalsApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurTotalsApiRequest message, length delimited. Does not implicitly {@link IRIS.CurTotalsApiRequest.verify|verify} messages.
         * @param message CurTotalsApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurTotalsApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurTotalsApiRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurTotalsApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurTotalsApiRequest;

        /**
         * Decodes a CurTotalsApiRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurTotalsApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurTotalsApiRequest;

        /**
         * Verifies a CurTotalsApiRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurTotalsApiRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurTotalsApiRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurTotalsApiRequest;

        /**
         * Creates a plain object from a CurTotalsApiRequest message. Also converts values to other types if specified.
         * @param message CurTotalsApiRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurTotalsApiRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurTotalsApiRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurTotalsApiReply. */
    interface ICurTotalsApiReply {

        /** CurTotalsApiReply serialNum */
        serialNum?: (number|Long|null);

        /** CurTotalsApiReply errorMessage */
        errorMessage?: (IRIS.IErrorMessage|null);

        /** CurTotalsApiReply totalsCountReply */
        totalsCountReply?: (IRIS.ICurTotalsCountReply|null);

        /** CurTotalsApiReply totalsReply */
        totalsReply?: (IRIS.ICurTotalsReply|null);

        /** CurTotalsApiReply quotationsReply */
        quotationsReply?: (IRIS.ICurQuotationsReply|null);
    }

    /**
     * Ответ &API; с информацией о торгах на валютном рынке, сгруппированной за период.
     * Сообщения totals_count_reply, totals_reply, quotations_reply и error_message взаимоисключаются.
     * Для получения данного сообщения необходимо подписаться на топик: "jms.topic.iris.CurTotals.client" (см. <xref linkend="section_using_curtotals"/>).
     */
    class CurTotalsApiReply implements ICurTotalsApiReply {

        /**
         * Constructs a new CurTotalsApiReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurTotalsApiReply);

        /** CurTotalsApiReply serialNum. */
        public serialNum: (number|Long);

        /** CurTotalsApiReply errorMessage. */
        public errorMessage?: (IRIS.IErrorMessage|null);

        /** CurTotalsApiReply totalsCountReply. */
        public totalsCountReply?: (IRIS.ICurTotalsCountReply|null);

        /** CurTotalsApiReply totalsReply. */
        public totalsReply?: (IRIS.ICurTotalsReply|null);

        /** CurTotalsApiReply quotationsReply. */
        public quotationsReply?: (IRIS.ICurQuotationsReply|null);

        /** CurTotalsApiReply replay. */
        public replay?: ("errorMessage"|"totalsCountReply"|"totalsReply"|"quotationsReply");

        /**
         * Creates a new CurTotalsApiReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurTotalsApiReply instance
         */
        public static create(properties?: IRIS.ICurTotalsApiReply): IRIS.CurTotalsApiReply;

        /**
         * Encodes the specified CurTotalsApiReply message. Does not implicitly {@link IRIS.CurTotalsApiReply.verify|verify} messages.
         * @param message CurTotalsApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurTotalsApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurTotalsApiReply message, length delimited. Does not implicitly {@link IRIS.CurTotalsApiReply.verify|verify} messages.
         * @param message CurTotalsApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurTotalsApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurTotalsApiReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurTotalsApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurTotalsApiReply;

        /**
         * Decodes a CurTotalsApiReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurTotalsApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurTotalsApiReply;

        /**
         * Verifies a CurTotalsApiReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurTotalsApiReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurTotalsApiReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurTotalsApiReply;

        /**
         * Creates a plain object from a CurTotalsApiReply message. Also converts values to other types if specified.
         * @param message CurTotalsApiReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurTotalsApiReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurTotalsApiReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OrderbookApiRequest. */
    interface IOrderbookApiRequest {

        /** OrderbookApiRequest serialNum */
        serialNum?: (number|Long|null);

        /** OrderbookApiRequest request */
        request?: (IRIS.IOrderbookRequest|null);
    }

    /** Represents an OrderbookApiRequest. */
    class OrderbookApiRequest implements IOrderbookApiRequest {

        /**
         * Constructs a new OrderbookApiRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IOrderbookApiRequest);

        /** OrderbookApiRequest serialNum. */
        public serialNum: (number|Long);

        /** OrderbookApiRequest request. */
        public request?: (IRIS.IOrderbookRequest|null);

        /**
         * Creates a new OrderbookApiRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OrderbookApiRequest instance
         */
        public static create(properties?: IRIS.IOrderbookApiRequest): IRIS.OrderbookApiRequest;

        /**
         * Encodes the specified OrderbookApiRequest message. Does not implicitly {@link IRIS.OrderbookApiRequest.verify|verify} messages.
         * @param message OrderbookApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IOrderbookApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OrderbookApiRequest message, length delimited. Does not implicitly {@link IRIS.OrderbookApiRequest.verify|verify} messages.
         * @param message OrderbookApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IOrderbookApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OrderbookApiRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OrderbookApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.OrderbookApiRequest;

        /**
         * Decodes an OrderbookApiRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OrderbookApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.OrderbookApiRequest;

        /**
         * Verifies an OrderbookApiRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OrderbookApiRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OrderbookApiRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.OrderbookApiRequest;

        /**
         * Creates a plain object from an OrderbookApiRequest message. Also converts values to other types if specified.
         * @param message OrderbookApiRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.OrderbookApiRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OrderbookApiRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OrderbookApiReply. */
    interface IOrderbookApiReply {

        /** OrderbookApiReply serialNum */
        serialNum?: (number|Long|null);

        /** OrderbookApiReply errorMessage */
        errorMessage?: (IRIS.IErrorMessage|null);

        /** OrderbookApiReply orderbookReply */
        orderbookReply?: (IRIS.IOrderbookReply|null);
    }

    /**
     * Ответ &API; по стакану на фондовом рынке.
     * Сообщения orderbook_reply и error_message взаимоисключаются.
     * Для получения данного сообщения необходимо подписаться на топик: <quote>jms.topic.iris.Orderbook.client</quote> (см. <xref linkend="section_using_orderbook"/>).
     */
    class OrderbookApiReply implements IOrderbookApiReply {

        /**
         * Constructs a new OrderbookApiReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IOrderbookApiReply);

        /** OrderbookApiReply serialNum. */
        public serialNum: (number|Long);

        /** OrderbookApiReply errorMessage. */
        public errorMessage?: (IRIS.IErrorMessage|null);

        /** OrderbookApiReply orderbookReply. */
        public orderbookReply?: (IRIS.IOrderbookReply|null);

        /** OrderbookApiReply replay. */
        public replay?: ("errorMessage"|"orderbookReply");

        /**
         * Creates a new OrderbookApiReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OrderbookApiReply instance
         */
        public static create(properties?: IRIS.IOrderbookApiReply): IRIS.OrderbookApiReply;

        /**
         * Encodes the specified OrderbookApiReply message. Does not implicitly {@link IRIS.OrderbookApiReply.verify|verify} messages.
         * @param message OrderbookApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IOrderbookApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OrderbookApiReply message, length delimited. Does not implicitly {@link IRIS.OrderbookApiReply.verify|verify} messages.
         * @param message OrderbookApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IOrderbookApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OrderbookApiReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OrderbookApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.OrderbookApiReply;

        /**
         * Decodes an OrderbookApiReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OrderbookApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.OrderbookApiReply;

        /**
         * Verifies an OrderbookApiReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OrderbookApiReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OrderbookApiReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.OrderbookApiReply;

        /**
         * Creates a plain object from an OrderbookApiReply message. Also converts values to other types if specified.
         * @param message OrderbookApiReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.OrderbookApiReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OrderbookApiReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurOrderbookApiRequest. */
    interface ICurOrderbookApiRequest {

        /** CurOrderbookApiRequest serialNum */
        serialNum?: (number|Long|null);

        /** CurOrderbookApiRequest request */
        request?: (IRIS.ICurOrderbookRequest|null);
    }

    /** Represents a CurOrderbookApiRequest. */
    class CurOrderbookApiRequest implements ICurOrderbookApiRequest {

        /**
         * Constructs a new CurOrderbookApiRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurOrderbookApiRequest);

        /** CurOrderbookApiRequest serialNum. */
        public serialNum: (number|Long);

        /** CurOrderbookApiRequest request. */
        public request?: (IRIS.ICurOrderbookRequest|null);

        /**
         * Creates a new CurOrderbookApiRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurOrderbookApiRequest instance
         */
        public static create(properties?: IRIS.ICurOrderbookApiRequest): IRIS.CurOrderbookApiRequest;

        /**
         * Encodes the specified CurOrderbookApiRequest message. Does not implicitly {@link IRIS.CurOrderbookApiRequest.verify|verify} messages.
         * @param message CurOrderbookApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurOrderbookApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurOrderbookApiRequest message, length delimited. Does not implicitly {@link IRIS.CurOrderbookApiRequest.verify|verify} messages.
         * @param message CurOrderbookApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurOrderbookApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurOrderbookApiRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurOrderbookApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurOrderbookApiRequest;

        /**
         * Decodes a CurOrderbookApiRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurOrderbookApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurOrderbookApiRequest;

        /**
         * Verifies a CurOrderbookApiRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurOrderbookApiRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurOrderbookApiRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurOrderbookApiRequest;

        /**
         * Creates a plain object from a CurOrderbookApiRequest message. Also converts values to other types if specified.
         * @param message CurOrderbookApiRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurOrderbookApiRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurOrderbookApiRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurOrderbookApiReply. */
    interface ICurOrderbookApiReply {

        /** CurOrderbookApiReply serialNum */
        serialNum?: (number|Long|null);

        /** CurOrderbookApiReply errorMessage */
        errorMessage?: (IRIS.IErrorMessage|null);

        /** CurOrderbookApiReply orderbookReply */
        orderbookReply?: (IRIS.ICurOrderbookReply|null);
    }

    /**
     * Ответ &API; по стакану на валютном рынке.
     * Сообщения orderbook_reply и error_message взаимоисключаются.
     * Для получения данного сообщения необходимо подписаться на топик: <quote>jms.topic.iris.CurOrderbook.client</quote> (см. <xref linkend="section_using_curorderbook"/>).
     */
    class CurOrderbookApiReply implements ICurOrderbookApiReply {

        /**
         * Constructs a new CurOrderbookApiReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurOrderbookApiReply);

        /** CurOrderbookApiReply serialNum. */
        public serialNum: (number|Long);

        /** CurOrderbookApiReply errorMessage. */
        public errorMessage?: (IRIS.IErrorMessage|null);

        /** CurOrderbookApiReply orderbookReply. */
        public orderbookReply?: (IRIS.ICurOrderbookReply|null);

        /** CurOrderbookApiReply replay. */
        public replay?: ("errorMessage"|"orderbookReply");

        /**
         * Creates a new CurOrderbookApiReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurOrderbookApiReply instance
         */
        public static create(properties?: IRIS.ICurOrderbookApiReply): IRIS.CurOrderbookApiReply;

        /**
         * Encodes the specified CurOrderbookApiReply message. Does not implicitly {@link IRIS.CurOrderbookApiReply.verify|verify} messages.
         * @param message CurOrderbookApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurOrderbookApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurOrderbookApiReply message, length delimited. Does not implicitly {@link IRIS.CurOrderbookApiReply.verify|verify} messages.
         * @param message CurOrderbookApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurOrderbookApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurOrderbookApiReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurOrderbookApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurOrderbookApiReply;

        /**
         * Decodes a CurOrderbookApiReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurOrderbookApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurOrderbookApiReply;

        /**
         * Verifies a CurOrderbookApiReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurOrderbookApiReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurOrderbookApiReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurOrderbookApiReply;

        /**
         * Creates a plain object from a CurOrderbookApiReply message. Also converts values to other types if specified.
         * @param message CurOrderbookApiReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurOrderbookApiReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurOrderbookApiReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SecsApiRequest. */
    interface ISecsApiRequest {

        /** SecsApiRequest serialNum */
        serialNum?: (number|Long|null);

        /** SecsApiRequest instrumentRequest */
        instrumentRequest?: (IRIS.IInstrumentsRequest|null);

        /** SecsApiRequest instrAttrsRequest */
        instrAttrsRequest?: (IRIS.IInstrAttrsRequest|null);

        /** SecsApiRequest searchRequest */
        searchRequest?: (IRIS.ISearchInstrumentsRequest|null);
    }

    /** Represents a SecsApiRequest. */
    class SecsApiRequest implements ISecsApiRequest {

        /**
         * Constructs a new SecsApiRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ISecsApiRequest);

        /** SecsApiRequest serialNum. */
        public serialNum: (number|Long);

        /** SecsApiRequest instrumentRequest. */
        public instrumentRequest?: (IRIS.IInstrumentsRequest|null);

        /** SecsApiRequest instrAttrsRequest. */
        public instrAttrsRequest?: (IRIS.IInstrAttrsRequest|null);

        /** SecsApiRequest searchRequest. */
        public searchRequest?: (IRIS.ISearchInstrumentsRequest|null);

        /** SecsApiRequest request. */
        public request?: ("instrumentRequest"|"instrAttrsRequest"|"searchRequest");

        /**
         * Creates a new SecsApiRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SecsApiRequest instance
         */
        public static create(properties?: IRIS.ISecsApiRequest): IRIS.SecsApiRequest;

        /**
         * Encodes the specified SecsApiRequest message. Does not implicitly {@link IRIS.SecsApiRequest.verify|verify} messages.
         * @param message SecsApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ISecsApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SecsApiRequest message, length delimited. Does not implicitly {@link IRIS.SecsApiRequest.verify|verify} messages.
         * @param message SecsApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ISecsApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SecsApiRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SecsApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.SecsApiRequest;

        /**
         * Decodes a SecsApiRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SecsApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.SecsApiRequest;

        /**
         * Verifies a SecsApiRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SecsApiRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SecsApiRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.SecsApiRequest;

        /**
         * Creates a plain object from a SecsApiRequest message. Also converts values to other types if specified.
         * @param message SecsApiRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.SecsApiRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SecsApiRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SecsApiReply. */
    interface ISecsApiReply {

        /** SecsApiReply serialNum */
        serialNum?: (number|Long|null);

        /** SecsApiReply errorMessage */
        errorMessage?: (IRIS.IErrorMessage|null);

        /** SecsApiReply instrumentReply */
        instrumentReply?: (IRIS.IInstrumentsReply|null);

        /** SecsApiReply instrAttrsReply */
        instrAttrsReply?: (IRIS.IInstrAttrsReply|null);

        /** SecsApiReply searchReply */
        searchReply?: (IRIS.ISearchInstrumentsReply|null);
    }

    /** Represents a SecsApiReply. */
    class SecsApiReply implements ISecsApiReply {

        /**
         * Constructs a new SecsApiReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ISecsApiReply);

        /** SecsApiReply serialNum. */
        public serialNum: (number|Long);

        /** SecsApiReply errorMessage. */
        public errorMessage?: (IRIS.IErrorMessage|null);

        /** SecsApiReply instrumentReply. */
        public instrumentReply?: (IRIS.IInstrumentsReply|null);

        /** SecsApiReply instrAttrsReply. */
        public instrAttrsReply?: (IRIS.IInstrAttrsReply|null);

        /** SecsApiReply searchReply. */
        public searchReply?: (IRIS.ISearchInstrumentsReply|null);

        /** SecsApiReply replay. */
        public replay?: ("errorMessage"|"instrumentReply"|"instrAttrsReply"|"searchReply");

        /**
         * Creates a new SecsApiReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SecsApiReply instance
         */
        public static create(properties?: IRIS.ISecsApiReply): IRIS.SecsApiReply;

        /**
         * Encodes the specified SecsApiReply message. Does not implicitly {@link IRIS.SecsApiReply.verify|verify} messages.
         * @param message SecsApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ISecsApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SecsApiReply message, length delimited. Does not implicitly {@link IRIS.SecsApiReply.verify|verify} messages.
         * @param message SecsApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ISecsApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SecsApiReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SecsApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.SecsApiReply;

        /**
         * Decodes a SecsApiReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SecsApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.SecsApiReply;

        /**
         * Verifies a SecsApiReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SecsApiReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SecsApiReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.SecsApiReply;

        /**
         * Creates a plain object from a SecsApiReply message. Also converts values to other types if specified.
         * @param message SecsApiReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.SecsApiReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SecsApiReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an IssuersApiRequest. */
    interface IIssuersApiRequest {

        /** IssuersApiRequest serialNum */
        serialNum?: (number|Long|null);

        /** IssuersApiRequest issuersRequest */
        issuersRequest?: (IRIS.IIssuersRequest|null);

        /** IssuersApiRequest issuerAttrsRequest */
        issuerAttrsRequest?: (IRIS.IIssuerAttrsRequest|null);
    }

    /** Represents an IssuersApiRequest. */
    class IssuersApiRequest implements IIssuersApiRequest {

        /**
         * Constructs a new IssuersApiRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IIssuersApiRequest);

        /** IssuersApiRequest serialNum. */
        public serialNum: (number|Long);

        /** IssuersApiRequest issuersRequest. */
        public issuersRequest?: (IRIS.IIssuersRequest|null);

        /** IssuersApiRequest issuerAttrsRequest. */
        public issuerAttrsRequest?: (IRIS.IIssuerAttrsRequest|null);

        /** IssuersApiRequest request. */
        public request?: ("issuersRequest"|"issuerAttrsRequest");

        /**
         * Creates a new IssuersApiRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IssuersApiRequest instance
         */
        public static create(properties?: IRIS.IIssuersApiRequest): IRIS.IssuersApiRequest;

        /**
         * Encodes the specified IssuersApiRequest message. Does not implicitly {@link IRIS.IssuersApiRequest.verify|verify} messages.
         * @param message IssuersApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IIssuersApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IssuersApiRequest message, length delimited. Does not implicitly {@link IRIS.IssuersApiRequest.verify|verify} messages.
         * @param message IssuersApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IIssuersApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IssuersApiRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IssuersApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.IssuersApiRequest;

        /**
         * Decodes an IssuersApiRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IssuersApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.IssuersApiRequest;

        /**
         * Verifies an IssuersApiRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IssuersApiRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IssuersApiRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.IssuersApiRequest;

        /**
         * Creates a plain object from an IssuersApiRequest message. Also converts values to other types if specified.
         * @param message IssuersApiRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.IssuersApiRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IssuersApiRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an IssuersApiReply. */
    interface IIssuersApiReply {

        /** IssuersApiReply serialNum */
        serialNum?: (number|Long|null);

        /** IssuersApiReply errorMessage */
        errorMessage?: (IRIS.IErrorMessage|null);

        /** IssuersApiReply issuersReply */
        issuersReply?: (IRIS.IIssuersReply|null);

        /** IssuersApiReply issuerAttrsReply */
        issuerAttrsReply?: (IRIS.IIssuerAttrsReply|null);
    }

    /** Represents an IssuersApiReply. */
    class IssuersApiReply implements IIssuersApiReply {

        /**
         * Constructs a new IssuersApiReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IIssuersApiReply);

        /** IssuersApiReply serialNum. */
        public serialNum: (number|Long);

        /** IssuersApiReply errorMessage. */
        public errorMessage?: (IRIS.IErrorMessage|null);

        /** IssuersApiReply issuersReply. */
        public issuersReply?: (IRIS.IIssuersReply|null);

        /** IssuersApiReply issuerAttrsReply. */
        public issuerAttrsReply?: (IRIS.IIssuerAttrsReply|null);

        /** IssuersApiReply replay. */
        public replay?: ("errorMessage"|"issuersReply"|"issuerAttrsReply");

        /**
         * Creates a new IssuersApiReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IssuersApiReply instance
         */
        public static create(properties?: IRIS.IIssuersApiReply): IRIS.IssuersApiReply;

        /**
         * Encodes the specified IssuersApiReply message. Does not implicitly {@link IRIS.IssuersApiReply.verify|verify} messages.
         * @param message IssuersApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IIssuersApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IssuersApiReply message, length delimited. Does not implicitly {@link IRIS.IssuersApiReply.verify|verify} messages.
         * @param message IssuersApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IIssuersApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IssuersApiReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IssuersApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.IssuersApiReply;

        /**
         * Decodes an IssuersApiReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IssuersApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.IssuersApiReply;

        /**
         * Verifies an IssuersApiReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IssuersApiReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IssuersApiReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.IssuersApiReply;

        /**
         * Creates a plain object from an IssuersApiReply message. Also converts values to other types if specified.
         * @param message IssuersApiReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.IssuersApiReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IssuersApiReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a NewsApiRequest. */
    interface INewsApiRequest {

        /** NewsApiRequest serialNum */
        serialNum?: (number|Long|null);

        /** NewsApiRequest countRequest */
        countRequest?: (IRIS.INewsCountRequest|null);

        /** NewsApiRequest newsRequest */
        newsRequest?: (IRIS.INewsRequest|null);

        /** NewsApiRequest bodyRequest */
        bodyRequest?: (IRIS.INewsBodyRequest|null);

        /** NewsApiRequest refsRequest */
        refsRequest?: (IRIS.INewsRefsRequest|null);

        /** NewsApiRequest filesRequest */
        filesRequest?: (IRIS.IFilesRequest|null);

        /** NewsApiRequest fileBodyRequest */
        fileBodyRequest?: (IRIS.IFileBodyRequest|null);

        /** NewsApiRequest fullInfoRequest */
        fullInfoRequest?: (IRIS.IFullNewsInfoRequest|null);

        /** NewsApiRequest newsusersAddRequest */
        newsusersAddRequest?: (IRIS.INewsUsersAddRequest|null);

        /** NewsApiRequest newsusersDeleteRequest */
        newsusersDeleteRequest?: (IRIS.INewsUsersDeleteRequest|null);
    }

    /** Represents a NewsApiRequest. */
    class NewsApiRequest implements INewsApiRequest {

        /**
         * Constructs a new NewsApiRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.INewsApiRequest);

        /** NewsApiRequest serialNum. */
        public serialNum: (number|Long);

        /** NewsApiRequest countRequest. */
        public countRequest?: (IRIS.INewsCountRequest|null);

        /** NewsApiRequest newsRequest. */
        public newsRequest?: (IRIS.INewsRequest|null);

        /** NewsApiRequest bodyRequest. */
        public bodyRequest?: (IRIS.INewsBodyRequest|null);

        /** NewsApiRequest refsRequest. */
        public refsRequest?: (IRIS.INewsRefsRequest|null);

        /** NewsApiRequest filesRequest. */
        public filesRequest?: (IRIS.IFilesRequest|null);

        /** NewsApiRequest fileBodyRequest. */
        public fileBodyRequest?: (IRIS.IFileBodyRequest|null);

        /** NewsApiRequest fullInfoRequest. */
        public fullInfoRequest?: (IRIS.IFullNewsInfoRequest|null);

        /** NewsApiRequest newsusersAddRequest. */
        public newsusersAddRequest?: (IRIS.INewsUsersAddRequest|null);

        /** NewsApiRequest newsusersDeleteRequest. */
        public newsusersDeleteRequest?: (IRIS.INewsUsersDeleteRequest|null);

        /** NewsApiRequest request. */
        public request?: ("countRequest"|"newsRequest"|"bodyRequest"|"refsRequest"|"filesRequest"|"fileBodyRequest"|"fullInfoRequest"|"newsusersAddRequest"|"newsusersDeleteRequest");

        /**
         * Creates a new NewsApiRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NewsApiRequest instance
         */
        public static create(properties?: IRIS.INewsApiRequest): IRIS.NewsApiRequest;

        /**
         * Encodes the specified NewsApiRequest message. Does not implicitly {@link IRIS.NewsApiRequest.verify|verify} messages.
         * @param message NewsApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.INewsApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NewsApiRequest message, length delimited. Does not implicitly {@link IRIS.NewsApiRequest.verify|verify} messages.
         * @param message NewsApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.INewsApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NewsApiRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NewsApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.NewsApiRequest;

        /**
         * Decodes a NewsApiRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NewsApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.NewsApiRequest;

        /**
         * Verifies a NewsApiRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NewsApiRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NewsApiRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.NewsApiRequest;

        /**
         * Creates a plain object from a NewsApiRequest message. Also converts values to other types if specified.
         * @param message NewsApiRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.NewsApiRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NewsApiRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a NewsApiReply. */
    interface INewsApiReply {

        /** NewsApiReply serialNum */
        serialNum?: (number|Long|null);

        /** NewsApiReply errorMessage */
        errorMessage?: (IRIS.IErrorMessage|null);

        /** NewsApiReply newsCountReply */
        newsCountReply?: (IRIS.INewsCountReply|null);

        /** NewsApiReply newsReply */
        newsReply?: (IRIS.INewsReply|null);

        /** NewsApiReply bodyReply */
        bodyReply?: (IRIS.INewsBodyReply|null);

        /** NewsApiReply refsReply */
        refsReply?: (IRIS.INewsRefsReply|null);

        /** NewsApiReply filesReply */
        filesReply?: (IRIS.IFilesReply|null);

        /** NewsApiReply fileBodyReply */
        fileBodyReply?: (IRIS.IFileBodyReply|null);

        /** NewsApiReply fullInfoReply */
        fullInfoReply?: (IRIS.IFullNewsInfoReply|null);

        /** NewsApiReply newsusersAddReply */
        newsusersAddReply?: (IRIS.INewsUsersAddReply|null);

        /** NewsApiReply newsusersDeleteReply */
        newsusersDeleteReply?: (IRIS.INewsUsersDeleteReply|null);
    }

    /**
     * Ответ &API; c информацией о новостных сообщениях.
     * Для получения данного сообщения необходимо подписаться на топик: "jms.topic.iris.News.client" (см. <xref linkend="section_using_news"/>).
     * Сообщения error_message, news_count_reply, news_reply, body_reply, refs_reply, files_reply, file_body_reply и full_info_reply взаимоисключаются.
     */
    class NewsApiReply implements INewsApiReply {

        /**
         * Constructs a new NewsApiReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.INewsApiReply);

        /** NewsApiReply serialNum. */
        public serialNum: (number|Long);

        /** NewsApiReply errorMessage. */
        public errorMessage?: (IRIS.IErrorMessage|null);

        /** NewsApiReply newsCountReply. */
        public newsCountReply?: (IRIS.INewsCountReply|null);

        /** NewsApiReply newsReply. */
        public newsReply?: (IRIS.INewsReply|null);

        /** NewsApiReply bodyReply. */
        public bodyReply?: (IRIS.INewsBodyReply|null);

        /** NewsApiReply refsReply. */
        public refsReply?: (IRIS.INewsRefsReply|null);

        /** NewsApiReply filesReply. */
        public filesReply?: (IRIS.IFilesReply|null);

        /** NewsApiReply fileBodyReply. */
        public fileBodyReply?: (IRIS.IFileBodyReply|null);

        /** NewsApiReply fullInfoReply. */
        public fullInfoReply?: (IRIS.IFullNewsInfoReply|null);

        /** NewsApiReply newsusersAddReply. */
        public newsusersAddReply?: (IRIS.INewsUsersAddReply|null);

        /** NewsApiReply newsusersDeleteReply. */
        public newsusersDeleteReply?: (IRIS.INewsUsersDeleteReply|null);

        /** NewsApiReply replay. */
        public replay?: ("errorMessage"|"newsCountReply"|"newsReply"|"bodyReply"|"refsReply"|"filesReply"|"fileBodyReply"|"fullInfoReply"|"newsusersAddReply"|"newsusersDeleteReply");

        /**
         * Creates a new NewsApiReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NewsApiReply instance
         */
        public static create(properties?: IRIS.INewsApiReply): IRIS.NewsApiReply;

        /**
         * Encodes the specified NewsApiReply message. Does not implicitly {@link IRIS.NewsApiReply.verify|verify} messages.
         * @param message NewsApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.INewsApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NewsApiReply message, length delimited. Does not implicitly {@link IRIS.NewsApiReply.verify|verify} messages.
         * @param message NewsApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.INewsApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NewsApiReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NewsApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.NewsApiReply;

        /**
         * Decodes a NewsApiReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NewsApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.NewsApiReply;

        /**
         * Verifies a NewsApiReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NewsApiReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NewsApiReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.NewsApiReply;

        /**
         * Creates a plain object from a NewsApiReply message. Also converts values to other types if specified.
         * @param message NewsApiReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.NewsApiReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NewsApiReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GraphApiRequest. */
    interface IGraphApiRequest {

        /** GraphApiRequest serialNum */
        serialNum?: (number|Long|null);

        /** GraphApiRequest graphRequest */
        graphRequest?: (IRIS.IGraphRequest|null);

        /** GraphApiRequest heatmapRequest */
        heatmapRequest?: (IRIS.IHeatmapRequest|null);
    }

    /** Represents a GraphApiRequest. */
    class GraphApiRequest implements IGraphApiRequest {

        /**
         * Constructs a new GraphApiRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IGraphApiRequest);

        /** GraphApiRequest serialNum. */
        public serialNum: (number|Long);

        /** GraphApiRequest graphRequest. */
        public graphRequest?: (IRIS.IGraphRequest|null);

        /** GraphApiRequest heatmapRequest. */
        public heatmapRequest?: (IRIS.IHeatmapRequest|null);

        /** GraphApiRequest request. */
        public request?: ("graphRequest"|"heatmapRequest");

        /**
         * Creates a new GraphApiRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GraphApiRequest instance
         */
        public static create(properties?: IRIS.IGraphApiRequest): IRIS.GraphApiRequest;

        /**
         * Encodes the specified GraphApiRequest message. Does not implicitly {@link IRIS.GraphApiRequest.verify|verify} messages.
         * @param message GraphApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IGraphApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GraphApiRequest message, length delimited. Does not implicitly {@link IRIS.GraphApiRequest.verify|verify} messages.
         * @param message GraphApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IGraphApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GraphApiRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GraphApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.GraphApiRequest;

        /**
         * Decodes a GraphApiRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GraphApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.GraphApiRequest;

        /**
         * Verifies a GraphApiRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GraphApiRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GraphApiRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.GraphApiRequest;

        /**
         * Creates a plain object from a GraphApiRequest message. Also converts values to other types if specified.
         * @param message GraphApiRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.GraphApiRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GraphApiRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GraphApiReply. */
    interface IGraphApiReply {

        /** GraphApiReply serialNum */
        serialNum?: (number|Long|null);

        /** GraphApiReply errorMessage */
        errorMessage?: (IRIS.IErrorMessage|null);

        /** GraphApiReply graphReply */
        graphReply?: (IRIS.IGraphReply|null);

        /** GraphApiReply heatmapReply */
        heatmapReply?: (IRIS.IHeatmapReply|null);
    }

    /**
     * Ответ &API; с информацией для построения графиков на фондовом рынке.
     * Для получения данного сообщения необходимо подписаться на топик: "jms.topic.iris.Graph.client" (см. <xref linkend="section_using_graph"/>).
     * Сообщения error_message, graph_reply и heatmap_reply взаимоисключаются.
     */
    class GraphApiReply implements IGraphApiReply {

        /**
         * Constructs a new GraphApiReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IGraphApiReply);

        /** GraphApiReply serialNum. */
        public serialNum: (number|Long);

        /** GraphApiReply errorMessage. */
        public errorMessage?: (IRIS.IErrorMessage|null);

        /** GraphApiReply graphReply. */
        public graphReply?: (IRIS.IGraphReply|null);

        /** GraphApiReply heatmapReply. */
        public heatmapReply?: (IRIS.IHeatmapReply|null);

        /** GraphApiReply replay. */
        public replay?: ("errorMessage"|"graphReply"|"heatmapReply");

        /**
         * Creates a new GraphApiReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GraphApiReply instance
         */
        public static create(properties?: IRIS.IGraphApiReply): IRIS.GraphApiReply;

        /**
         * Encodes the specified GraphApiReply message. Does not implicitly {@link IRIS.GraphApiReply.verify|verify} messages.
         * @param message GraphApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IGraphApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GraphApiReply message, length delimited. Does not implicitly {@link IRIS.GraphApiReply.verify|verify} messages.
         * @param message GraphApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IGraphApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GraphApiReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GraphApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.GraphApiReply;

        /**
         * Decodes a GraphApiReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GraphApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.GraphApiReply;

        /**
         * Verifies a GraphApiReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GraphApiReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GraphApiReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.GraphApiReply;

        /**
         * Creates a plain object from a GraphApiReply message. Also converts values to other types if specified.
         * @param message GraphApiReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.GraphApiReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GraphApiReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurGraphApiRequest. */
    interface ICurGraphApiRequest {

        /** CurGraphApiRequest serialNum */
        serialNum?: (number|Long|null);

        /** CurGraphApiRequest request */
        request?: (IRIS.ICurGraphRequest|null);
    }

    /** Represents a CurGraphApiRequest. */
    class CurGraphApiRequest implements ICurGraphApiRequest {

        /**
         * Constructs a new CurGraphApiRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurGraphApiRequest);

        /** CurGraphApiRequest serialNum. */
        public serialNum: (number|Long);

        /** CurGraphApiRequest request. */
        public request?: (IRIS.ICurGraphRequest|null);

        /**
         * Creates a new CurGraphApiRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurGraphApiRequest instance
         */
        public static create(properties?: IRIS.ICurGraphApiRequest): IRIS.CurGraphApiRequest;

        /**
         * Encodes the specified CurGraphApiRequest message. Does not implicitly {@link IRIS.CurGraphApiRequest.verify|verify} messages.
         * @param message CurGraphApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurGraphApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurGraphApiRequest message, length delimited. Does not implicitly {@link IRIS.CurGraphApiRequest.verify|verify} messages.
         * @param message CurGraphApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurGraphApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurGraphApiRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurGraphApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurGraphApiRequest;

        /**
         * Decodes a CurGraphApiRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurGraphApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurGraphApiRequest;

        /**
         * Verifies a CurGraphApiRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurGraphApiRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurGraphApiRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurGraphApiRequest;

        /**
         * Creates a plain object from a CurGraphApiRequest message. Also converts values to other types if specified.
         * @param message CurGraphApiRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurGraphApiRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurGraphApiRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurGraphApiReply. */
    interface ICurGraphApiReply {

        /** CurGraphApiReply serialNum */
        serialNum?: (number|Long|null);

        /** CurGraphApiReply errorMessage */
        errorMessage?: (IRIS.IErrorMessage|null);

        /** CurGraphApiReply graphReply */
        graphReply?: (IRIS.ICurGraphReply|null);
    }

    /**
     * Ответ &API; с информацией для построения графиков на валютном рынке.
     * Для получения данного сообщения необходимо подписаться на топик: "jms.topic.iris.CurGraph.client" (см. <xref linkend="section_using_curgraph"/>).
     */
    class CurGraphApiReply implements ICurGraphApiReply {

        /**
         * Constructs a new CurGraphApiReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurGraphApiReply);

        /** CurGraphApiReply serialNum. */
        public serialNum: (number|Long);

        /** CurGraphApiReply errorMessage. */
        public errorMessage?: (IRIS.IErrorMessage|null);

        /** CurGraphApiReply graphReply. */
        public graphReply?: (IRIS.ICurGraphReply|null);

        /** CurGraphApiReply replay. */
        public replay?: ("errorMessage"|"graphReply");

        /**
         * Creates a new CurGraphApiReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurGraphApiReply instance
         */
        public static create(properties?: IRIS.ICurGraphApiReply): IRIS.CurGraphApiReply;

        /**
         * Encodes the specified CurGraphApiReply message. Does not implicitly {@link IRIS.CurGraphApiReply.verify|verify} messages.
         * @param message CurGraphApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurGraphApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurGraphApiReply message, length delimited. Does not implicitly {@link IRIS.CurGraphApiReply.verify|verify} messages.
         * @param message CurGraphApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurGraphApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurGraphApiReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurGraphApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurGraphApiReply;

        /**
         * Decodes a CurGraphApiReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurGraphApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurGraphApiReply;

        /**
         * Verifies a CurGraphApiReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurGraphApiReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurGraphApiReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurGraphApiReply;

        /**
         * Creates a plain object from a CurGraphApiReply message. Also converts values to other types if specified.
         * @param message CurGraphApiReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurGraphApiReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurGraphApiReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RepoApiRequest. */
    interface IRepoApiRequest {

        /** RepoApiRequest serialNum */
        serialNum?: (number|Long|null);

        /** RepoApiRequest countRequest */
        countRequest?: (IRIS.IRepoCountRequest|null);

        /** RepoApiRequest repoRequest */
        repoRequest?: (IRIS.IRepoRequest|null);

        /** RepoApiRequest exportRequest */
        exportRequest?: (IRIS.IRepoExportRequest|null);
    }

    /** Represents a RepoApiRequest. */
    class RepoApiRequest implements IRepoApiRequest {

        /**
         * Constructs a new RepoApiRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IRepoApiRequest);

        /** RepoApiRequest serialNum. */
        public serialNum: (number|Long);

        /** RepoApiRequest countRequest. */
        public countRequest?: (IRIS.IRepoCountRequest|null);

        /** RepoApiRequest repoRequest. */
        public repoRequest?: (IRIS.IRepoRequest|null);

        /** RepoApiRequest exportRequest. */
        public exportRequest?: (IRIS.IRepoExportRequest|null);

        /** RepoApiRequest request. */
        public request?: ("countRequest"|"repoRequest"|"exportRequest");

        /**
         * Creates a new RepoApiRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RepoApiRequest instance
         */
        public static create(properties?: IRIS.IRepoApiRequest): IRIS.RepoApiRequest;

        /**
         * Encodes the specified RepoApiRequest message. Does not implicitly {@link IRIS.RepoApiRequest.verify|verify} messages.
         * @param message RepoApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IRepoApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RepoApiRequest message, length delimited. Does not implicitly {@link IRIS.RepoApiRequest.verify|verify} messages.
         * @param message RepoApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IRepoApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RepoApiRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RepoApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.RepoApiRequest;

        /**
         * Decodes a RepoApiRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RepoApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.RepoApiRequest;

        /**
         * Verifies a RepoApiRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RepoApiRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RepoApiRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.RepoApiRequest;

        /**
         * Creates a plain object from a RepoApiRequest message. Also converts values to other types if specified.
         * @param message RepoApiRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.RepoApiRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RepoApiRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RepoApiReply. */
    interface IRepoApiReply {

        /** RepoApiReply serialNum */
        serialNum?: (number|Long|null);

        /** RepoApiReply errorMessage */
        errorMessage?: (IRIS.IErrorMessage|null);

        /** RepoApiReply repoCountReply */
        repoCountReply?: (IRIS.IRepoCountReply|null);

        /** RepoApiReply repoReply */
        repoReply?: (IRIS.IRepoReply|null);

        /** RepoApiReply exportReply */
        exportReply?: (IRIS.IRepoExportReply|null);
    }

    /**
     * Ответ &API; по сделкам на рынке операций репо.
     * Сообщения repo_count_reply, repo_reply, export_reply и error_message взаимоисключаются.
     * Для получения данного сообщения необходимо подписаться на топик: "jms.topic.iris.Repo.client" (см. <xref linkend="section_using_repo"/>).
     */
    class RepoApiReply implements IRepoApiReply {

        /**
         * Constructs a new RepoApiReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IRepoApiReply);

        /** RepoApiReply serialNum. */
        public serialNum: (number|Long);

        /** RepoApiReply errorMessage. */
        public errorMessage?: (IRIS.IErrorMessage|null);

        /** RepoApiReply repoCountReply. */
        public repoCountReply?: (IRIS.IRepoCountReply|null);

        /** RepoApiReply repoReply. */
        public repoReply?: (IRIS.IRepoReply|null);

        /** RepoApiReply exportReply. */
        public exportReply?: (IRIS.IRepoExportReply|null);

        /** RepoApiReply replay. */
        public replay?: ("errorMessage"|"repoCountReply"|"repoReply"|"exportReply");

        /**
         * Creates a new RepoApiReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RepoApiReply instance
         */
        public static create(properties?: IRIS.IRepoApiReply): IRIS.RepoApiReply;

        /**
         * Encodes the specified RepoApiReply message. Does not implicitly {@link IRIS.RepoApiReply.verify|verify} messages.
         * @param message RepoApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IRepoApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RepoApiReply message, length delimited. Does not implicitly {@link IRIS.RepoApiReply.verify|verify} messages.
         * @param message RepoApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IRepoApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RepoApiReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RepoApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.RepoApiReply;

        /**
         * Decodes a RepoApiReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RepoApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.RepoApiReply;

        /**
         * Verifies a RepoApiReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RepoApiReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RepoApiReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.RepoApiReply;

        /**
         * Creates a plain object from a RepoApiReply message. Also converts values to other types if specified.
         * @param message RepoApiReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.RepoApiReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RepoApiReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RepoOrdersApiRequest. */
    interface IRepoOrdersApiRequest {

        /** RepoOrdersApiRequest serialNum */
        serialNum?: (number|Long|null);

        /** RepoOrdersApiRequest repoCountRequest */
        repoCountRequest?: (IRIS.IRepoOrdersCountRequest|null);

        /** RepoOrdersApiRequest repoOrdersRequest */
        repoOrdersRequest?: (IRIS.IRepoOrdersRequest|null);

        /** RepoOrdersApiRequest exportRequest */
        exportRequest?: (IRIS.IRepoOrdersExportRequest|null);
    }

    /** Represents a RepoOrdersApiRequest. */
    class RepoOrdersApiRequest implements IRepoOrdersApiRequest {

        /**
         * Constructs a new RepoOrdersApiRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IRepoOrdersApiRequest);

        /** RepoOrdersApiRequest serialNum. */
        public serialNum: (number|Long);

        /** RepoOrdersApiRequest repoCountRequest. */
        public repoCountRequest?: (IRIS.IRepoOrdersCountRequest|null);

        /** RepoOrdersApiRequest repoOrdersRequest. */
        public repoOrdersRequest?: (IRIS.IRepoOrdersRequest|null);

        /** RepoOrdersApiRequest exportRequest. */
        public exportRequest?: (IRIS.IRepoOrdersExportRequest|null);

        /** RepoOrdersApiRequest request. */
        public request?: ("repoCountRequest"|"repoOrdersRequest"|"exportRequest");

        /**
         * Creates a new RepoOrdersApiRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RepoOrdersApiRequest instance
         */
        public static create(properties?: IRIS.IRepoOrdersApiRequest): IRIS.RepoOrdersApiRequest;

        /**
         * Encodes the specified RepoOrdersApiRequest message. Does not implicitly {@link IRIS.RepoOrdersApiRequest.verify|verify} messages.
         * @param message RepoOrdersApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IRepoOrdersApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RepoOrdersApiRequest message, length delimited. Does not implicitly {@link IRIS.RepoOrdersApiRequest.verify|verify} messages.
         * @param message RepoOrdersApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IRepoOrdersApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RepoOrdersApiRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RepoOrdersApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.RepoOrdersApiRequest;

        /**
         * Decodes a RepoOrdersApiRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RepoOrdersApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.RepoOrdersApiRequest;

        /**
         * Verifies a RepoOrdersApiRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RepoOrdersApiRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RepoOrdersApiRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.RepoOrdersApiRequest;

        /**
         * Creates a plain object from a RepoOrdersApiRequest message. Also converts values to other types if specified.
         * @param message RepoOrdersApiRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.RepoOrdersApiRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RepoOrdersApiRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RepoOrdersApiReply. */
    interface IRepoOrdersApiReply {

        /** RepoOrdersApiReply serialNum */
        serialNum?: (number|Long|null);

        /** RepoOrdersApiReply errorMessage */
        errorMessage?: (IRIS.IErrorMessage|null);

        /** RepoOrdersApiReply repoOrdersCountReply */
        repoOrdersCountReply?: (IRIS.IRepoOrdersCountReply|null);

        /** RepoOrdersApiReply repoOrdersReply */
        repoOrdersReply?: (IRIS.IRepoOrdersReply|null);

        /** RepoOrdersApiReply exportReply */
        exportReply?: (IRIS.IRepoOrdersExportReply|null);
    }

    /**
     * Ответ &API; по заявкам репо.
     * Сообщения repo_orders_count_reply, repo_orders_reply и error_message взаимоисключаются.
     * Для получения данного сообщения необходимо подписаться на топик: "jms.topic.iris.RepoOrders.client" (см. <xref linkend="section_using_repoorders"/>).
     */
    class RepoOrdersApiReply implements IRepoOrdersApiReply {

        /**
         * Constructs a new RepoOrdersApiReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IRepoOrdersApiReply);

        /** RepoOrdersApiReply serialNum. */
        public serialNum: (number|Long);

        /** RepoOrdersApiReply errorMessage. */
        public errorMessage?: (IRIS.IErrorMessage|null);

        /** RepoOrdersApiReply repoOrdersCountReply. */
        public repoOrdersCountReply?: (IRIS.IRepoOrdersCountReply|null);

        /** RepoOrdersApiReply repoOrdersReply. */
        public repoOrdersReply?: (IRIS.IRepoOrdersReply|null);

        /** RepoOrdersApiReply exportReply. */
        public exportReply?: (IRIS.IRepoOrdersExportReply|null);

        /** RepoOrdersApiReply replay. */
        public replay?: ("errorMessage"|"repoOrdersCountReply"|"repoOrdersReply"|"exportReply");

        /**
         * Creates a new RepoOrdersApiReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RepoOrdersApiReply instance
         */
        public static create(properties?: IRIS.IRepoOrdersApiReply): IRIS.RepoOrdersApiReply;

        /**
         * Encodes the specified RepoOrdersApiReply message. Does not implicitly {@link IRIS.RepoOrdersApiReply.verify|verify} messages.
         * @param message RepoOrdersApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IRepoOrdersApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RepoOrdersApiReply message, length delimited. Does not implicitly {@link IRIS.RepoOrdersApiReply.verify|verify} messages.
         * @param message RepoOrdersApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IRepoOrdersApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RepoOrdersApiReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RepoOrdersApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.RepoOrdersApiReply;

        /**
         * Decodes a RepoOrdersApiReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RepoOrdersApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.RepoOrdersApiReply;

        /**
         * Verifies a RepoOrdersApiReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RepoOrdersApiReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RepoOrdersApiReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.RepoOrdersApiReply;

        /**
         * Creates a plain object from a RepoOrdersApiReply message. Also converts values to other types if specified.
         * @param message RepoOrdersApiReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.RepoOrdersApiReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RepoOrdersApiReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an IndicatorsApiRequest. */
    interface IIndicatorsApiRequest {

        /** IndicatorsApiRequest serialNum */
        serialNum?: (number|Long|null);

        /** IndicatorsApiRequest countRequest */
        countRequest?: (IRIS.IIndicatorsCountRequest|null);

        /** IndicatorsApiRequest indicatorsRequest */
        indicatorsRequest?: (IRIS.IIndicatorsRequest|null);

        /** IndicatorsApiRequest graphRequest */
        graphRequest?: (IRIS.IIndGraphRequest|null);

        /** IndicatorsApiRequest quotesRequest */
        quotesRequest?: (IRIS.IIndQuotesRequest|null);

        /** IndicatorsApiRequest changeRequest */
        changeRequest?: (IRIS.IIndChangeRequest|null);

        /** IndicatorsApiRequest exportRequest */
        exportRequest?: (IRIS.IIndicatorsExportRequest|null);
    }

    /** Represents an IndicatorsApiRequest. */
    class IndicatorsApiRequest implements IIndicatorsApiRequest {

        /**
         * Constructs a new IndicatorsApiRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IIndicatorsApiRequest);

        /** IndicatorsApiRequest serialNum. */
        public serialNum: (number|Long);

        /** IndicatorsApiRequest countRequest. */
        public countRequest?: (IRIS.IIndicatorsCountRequest|null);

        /** IndicatorsApiRequest indicatorsRequest. */
        public indicatorsRequest?: (IRIS.IIndicatorsRequest|null);

        /** IndicatorsApiRequest graphRequest. */
        public graphRequest?: (IRIS.IIndGraphRequest|null);

        /** IndicatorsApiRequest quotesRequest. */
        public quotesRequest?: (IRIS.IIndQuotesRequest|null);

        /** IndicatorsApiRequest changeRequest. */
        public changeRequest?: (IRIS.IIndChangeRequest|null);

        /** IndicatorsApiRequest exportRequest. */
        public exportRequest?: (IRIS.IIndicatorsExportRequest|null);

        /** IndicatorsApiRequest request. */
        public request?: ("countRequest"|"indicatorsRequest"|"graphRequest"|"quotesRequest"|"changeRequest"|"exportRequest");

        /**
         * Creates a new IndicatorsApiRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IndicatorsApiRequest instance
         */
        public static create(properties?: IRIS.IIndicatorsApiRequest): IRIS.IndicatorsApiRequest;

        /**
         * Encodes the specified IndicatorsApiRequest message. Does not implicitly {@link IRIS.IndicatorsApiRequest.verify|verify} messages.
         * @param message IndicatorsApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IIndicatorsApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IndicatorsApiRequest message, length delimited. Does not implicitly {@link IRIS.IndicatorsApiRequest.verify|verify} messages.
         * @param message IndicatorsApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IIndicatorsApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IndicatorsApiRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IndicatorsApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.IndicatorsApiRequest;

        /**
         * Decodes an IndicatorsApiRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IndicatorsApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.IndicatorsApiRequest;

        /**
         * Verifies an IndicatorsApiRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IndicatorsApiRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IndicatorsApiRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.IndicatorsApiRequest;

        /**
         * Creates a plain object from an IndicatorsApiRequest message. Also converts values to other types if specified.
         * @param message IndicatorsApiRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.IndicatorsApiRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IndicatorsApiRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an IndicatorsApiReply. */
    interface IIndicatorsApiReply {

        /** IndicatorsApiReply serialNum */
        serialNum?: (number|Long|null);

        /** IndicatorsApiReply errorMessage */
        errorMessage?: (IRIS.IErrorMessage|null);

        /** IndicatorsApiReply indicatorsCountReply */
        indicatorsCountReply?: (IRIS.IIndicatorsCountReply|null);

        /** IndicatorsApiReply indicatorsReply */
        indicatorsReply?: (IRIS.IIndicatorsReply|null);

        /** IndicatorsApiReply graphReply */
        graphReply?: (IRIS.IIndGraphReply|null);

        /** IndicatorsApiReply quotesReply */
        quotesReply?: (IRIS.IIndQuotesReply|null);

        /** IndicatorsApiReply changeReply */
        changeReply?: (IRIS.IIndChangeReply|null);

        /** IndicatorsApiReply exportReply */
        exportReply?: (IRIS.IIndicatorsExportReply|null);
    }

    /**
     * Ответ &API; со списком значений индикаторов, подходящих под условие фильтрации.
     * Сообщения indicators_count_reply, indicators_reply, graph_reply, quotes_reply, change_reply, export_reply и error_message взаимоисключаются.
     * Для получения данного сообщения необходимо подписаться на топик: "jms.topic.iris.Indicators.client" (см. <xref linkend="section_using_indicators"/>).
     */
    class IndicatorsApiReply implements IIndicatorsApiReply {

        /**
         * Constructs a new IndicatorsApiReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IIndicatorsApiReply);

        /** IndicatorsApiReply serialNum. */
        public serialNum: (number|Long);

        /** IndicatorsApiReply errorMessage. */
        public errorMessage?: (IRIS.IErrorMessage|null);

        /** IndicatorsApiReply indicatorsCountReply. */
        public indicatorsCountReply?: (IRIS.IIndicatorsCountReply|null);

        /** IndicatorsApiReply indicatorsReply. */
        public indicatorsReply?: (IRIS.IIndicatorsReply|null);

        /** IndicatorsApiReply graphReply. */
        public graphReply?: (IRIS.IIndGraphReply|null);

        /** IndicatorsApiReply quotesReply. */
        public quotesReply?: (IRIS.IIndQuotesReply|null);

        /** IndicatorsApiReply changeReply. */
        public changeReply?: (IRIS.IIndChangeReply|null);

        /** IndicatorsApiReply exportReply. */
        public exportReply?: (IRIS.IIndicatorsExportReply|null);

        /** IndicatorsApiReply replay. */
        public replay?: ("errorMessage"|"indicatorsCountReply"|"indicatorsReply"|"graphReply"|"quotesReply"|"changeReply"|"exportReply");

        /**
         * Creates a new IndicatorsApiReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IndicatorsApiReply instance
         */
        public static create(properties?: IRIS.IIndicatorsApiReply): IRIS.IndicatorsApiReply;

        /**
         * Encodes the specified IndicatorsApiReply message. Does not implicitly {@link IRIS.IndicatorsApiReply.verify|verify} messages.
         * @param message IndicatorsApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IIndicatorsApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IndicatorsApiReply message, length delimited. Does not implicitly {@link IRIS.IndicatorsApiReply.verify|verify} messages.
         * @param message IndicatorsApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IIndicatorsApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IndicatorsApiReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IndicatorsApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.IndicatorsApiReply;

        /**
         * Decodes an IndicatorsApiReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IndicatorsApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.IndicatorsApiReply;

        /**
         * Verifies an IndicatorsApiReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IndicatorsApiReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IndicatorsApiReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.IndicatorsApiReply;

        /**
         * Creates a plain object from an IndicatorsApiReply message. Also converts values to other types if specified.
         * @param message IndicatorsApiReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.IndicatorsApiReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IndicatorsApiReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActualListsApiRequest. */
    interface IActualListsApiRequest {

        /** ActualListsApiRequest serialNum */
        serialNum?: (number|Long|null);
    }

    /** Represents an ActualListsApiRequest. */
    class ActualListsApiRequest implements IActualListsApiRequest {

        /**
         * Constructs a new ActualListsApiRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IActualListsApiRequest);

        /** ActualListsApiRequest serialNum. */
        public serialNum: (number|Long);

        /**
         * Creates a new ActualListsApiRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActualListsApiRequest instance
         */
        public static create(properties?: IRIS.IActualListsApiRequest): IRIS.ActualListsApiRequest;

        /**
         * Encodes the specified ActualListsApiRequest message. Does not implicitly {@link IRIS.ActualListsApiRequest.verify|verify} messages.
         * @param message ActualListsApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IActualListsApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActualListsApiRequest message, length delimited. Does not implicitly {@link IRIS.ActualListsApiRequest.verify|verify} messages.
         * @param message ActualListsApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IActualListsApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActualListsApiRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActualListsApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.ActualListsApiRequest;

        /**
         * Decodes an ActualListsApiRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActualListsApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.ActualListsApiRequest;

        /**
         * Verifies an ActualListsApiRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActualListsApiRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActualListsApiRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.ActualListsApiRequest;

        /**
         * Creates a plain object from an ActualListsApiRequest message. Also converts values to other types if specified.
         * @param message ActualListsApiRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.ActualListsApiRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActualListsApiRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActualListsReply. */
    interface IActualListsReply {

        /** ActualListsReply mainSharesIds */
        mainSharesIds?: (number[]|null);

        /** ActualListsReply mainCurIds */
        mainCurIds?: (number[]|null);

        /** ActualListsReply actualCurIds */
        actualCurIds?: (number[]|null);

        /** ActualListsReply indicatorGroups */
        indicatorGroups?: (IRIS.IIndicatorsGroup[]|null);

        /** ActualListsReply hideEmptySections */
        hideEmptySections?: (boolean|null);
    }

    /**
     * Это сообщение устарело начиная с версии API 2.8.0.
     * Сообщение с информацией об актуальном состоянии списков инструментов и индикаторов, рекомендуемых к отображению конечному пользователю.
     */
    class ActualListsReply implements IActualListsReply {

        /**
         * Constructs a new ActualListsReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IActualListsReply);

        /** ActualListsReply mainSharesIds. */
        public mainSharesIds: number[];

        /** ActualListsReply mainCurIds. */
        public mainCurIds: number[];

        /** ActualListsReply actualCurIds. */
        public actualCurIds: number[];

        /** ActualListsReply indicatorGroups. */
        public indicatorGroups: IRIS.IIndicatorsGroup[];

        /** ActualListsReply hideEmptySections. */
        public hideEmptySections: boolean;

        /**
         * Creates a new ActualListsReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActualListsReply instance
         */
        public static create(properties?: IRIS.IActualListsReply): IRIS.ActualListsReply;

        /**
         * Encodes the specified ActualListsReply message. Does not implicitly {@link IRIS.ActualListsReply.verify|verify} messages.
         * @param message ActualListsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IActualListsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActualListsReply message, length delimited. Does not implicitly {@link IRIS.ActualListsReply.verify|verify} messages.
         * @param message ActualListsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IActualListsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActualListsReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActualListsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.ActualListsReply;

        /**
         * Decodes an ActualListsReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActualListsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.ActualListsReply;

        /**
         * Verifies an ActualListsReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActualListsReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActualListsReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.ActualListsReply;

        /**
         * Creates a plain object from an ActualListsReply message. Also converts values to other types if specified.
         * @param message ActualListsReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.ActualListsReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActualListsReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActualListsApiReply. */
    interface IActualListsApiReply {

        /** ActualListsApiReply serialNum */
        serialNum?: (number|Long|null);

        /** ActualListsApiReply errorMessage */
        errorMessage?: (IRIS.IErrorMessage|null);

        /** ActualListsApiReply actualListsReply */
        actualListsReply?: (IRIS.IActualListsReply|null);
    }

    /**
     * Это сообщение устарело начиная с версии API 2.8.0.
     * Ответ &API; с информацией об актуальном состоянии списков инструментов и индикаторов,
     * рекомендуемых к отображению конечному пользователю.
     * Сообщения actual_lists_reply и error_message взаимоисключаются.
     * Для получения данного сообщения необходимо подписаться на топик: "jms.topic.iris.Info.client" (см. <xref linkend="section_using_info"/>).
     */
    class ActualListsApiReply implements IActualListsApiReply {

        /**
         * Constructs a new ActualListsApiReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IActualListsApiReply);

        /** ActualListsApiReply serialNum. */
        public serialNum: (number|Long);

        /** ActualListsApiReply errorMessage. */
        public errorMessage?: (IRIS.IErrorMessage|null);

        /** ActualListsApiReply actualListsReply. */
        public actualListsReply?: (IRIS.IActualListsReply|null);

        /** ActualListsApiReply replay. */
        public replay?: ("errorMessage"|"actualListsReply");

        /**
         * Creates a new ActualListsApiReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActualListsApiReply instance
         */
        public static create(properties?: IRIS.IActualListsApiReply): IRIS.ActualListsApiReply;

        /**
         * Encodes the specified ActualListsApiReply message. Does not implicitly {@link IRIS.ActualListsApiReply.verify|verify} messages.
         * @param message ActualListsApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IActualListsApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActualListsApiReply message, length delimited. Does not implicitly {@link IRIS.ActualListsApiReply.verify|verify} messages.
         * @param message ActualListsApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IActualListsApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActualListsApiReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActualListsApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.ActualListsApiReply;

        /**
         * Decodes an ActualListsApiReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActualListsApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.ActualListsApiReply;

        /**
         * Verifies an ActualListsApiReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActualListsApiReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActualListsApiReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.ActualListsApiReply;

        /**
         * Creates a plain object from an ActualListsApiReply message. Also converts values to other types if specified.
         * @param message ActualListsApiReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.ActualListsApiReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActualListsApiReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OpenInfoApiRequest. */
    interface IOpenInfoApiRequest {

        /** OpenInfoApiRequest serialNum */
        serialNum?: (number|Long|null);

        /** OpenInfoApiRequest userRegRequest */
        userRegRequest?: (IRIS.IUserRegRequest|null);

        /** OpenInfoApiRequest resetPwdRequest */
        resetPwdRequest?: (IRIS.IResetPwdRequest|null);
    }

    /** Represents an OpenInfoApiRequest. */
    class OpenInfoApiRequest implements IOpenInfoApiRequest {

        /**
         * Constructs a new OpenInfoApiRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IOpenInfoApiRequest);

        /** OpenInfoApiRequest serialNum. */
        public serialNum: (number|Long);

        /** OpenInfoApiRequest userRegRequest. */
        public userRegRequest?: (IRIS.IUserRegRequest|null);

        /** OpenInfoApiRequest resetPwdRequest. */
        public resetPwdRequest?: (IRIS.IResetPwdRequest|null);

        /** OpenInfoApiRequest request. */
        public request?: ("userRegRequest"|"resetPwdRequest");

        /**
         * Creates a new OpenInfoApiRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OpenInfoApiRequest instance
         */
        public static create(properties?: IRIS.IOpenInfoApiRequest): IRIS.OpenInfoApiRequest;

        /**
         * Encodes the specified OpenInfoApiRequest message. Does not implicitly {@link IRIS.OpenInfoApiRequest.verify|verify} messages.
         * @param message OpenInfoApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IOpenInfoApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OpenInfoApiRequest message, length delimited. Does not implicitly {@link IRIS.OpenInfoApiRequest.verify|verify} messages.
         * @param message OpenInfoApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IOpenInfoApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OpenInfoApiRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OpenInfoApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.OpenInfoApiRequest;

        /**
         * Decodes an OpenInfoApiRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OpenInfoApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.OpenInfoApiRequest;

        /**
         * Verifies an OpenInfoApiRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OpenInfoApiRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OpenInfoApiRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.OpenInfoApiRequest;

        /**
         * Creates a plain object from an OpenInfoApiRequest message. Also converts values to other types if specified.
         * @param message OpenInfoApiRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.OpenInfoApiRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OpenInfoApiRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OpenInfoApiReply. */
    interface IOpenInfoApiReply {

        /** OpenInfoApiReply serialNum */
        serialNum?: (number|Long|null);

        /** OpenInfoApiReply errorMessage */
        errorMessage?: (IRIS.IErrorMessage|null);

        /** OpenInfoApiReply userRegReply */
        userRegReply?: (IRIS.IUserRegReply|null);

        /** OpenInfoApiReply resetPwdReply */
        resetPwdReply?: (IRIS.IResetPwdReply|null);
    }

    /** Represents an OpenInfoApiReply. */
    class OpenInfoApiReply implements IOpenInfoApiReply {

        /**
         * Constructs a new OpenInfoApiReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IOpenInfoApiReply);

        /** OpenInfoApiReply serialNum. */
        public serialNum: (number|Long);

        /** OpenInfoApiReply errorMessage. */
        public errorMessage?: (IRIS.IErrorMessage|null);

        /** OpenInfoApiReply userRegReply. */
        public userRegReply?: (IRIS.IUserRegReply|null);

        /** OpenInfoApiReply resetPwdReply. */
        public resetPwdReply?: (IRIS.IResetPwdReply|null);

        /** OpenInfoApiReply replay. */
        public replay?: ("errorMessage"|"userRegReply"|"resetPwdReply");

        /**
         * Creates a new OpenInfoApiReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OpenInfoApiReply instance
         */
        public static create(properties?: IRIS.IOpenInfoApiReply): IRIS.OpenInfoApiReply;

        /**
         * Encodes the specified OpenInfoApiReply message. Does not implicitly {@link IRIS.OpenInfoApiReply.verify|verify} messages.
         * @param message OpenInfoApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IOpenInfoApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OpenInfoApiReply message, length delimited. Does not implicitly {@link IRIS.OpenInfoApiReply.verify|verify} messages.
         * @param message OpenInfoApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IOpenInfoApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OpenInfoApiReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OpenInfoApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.OpenInfoApiReply;

        /**
         * Decodes an OpenInfoApiReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OpenInfoApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.OpenInfoApiReply;

        /**
         * Verifies an OpenInfoApiReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OpenInfoApiReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OpenInfoApiReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.OpenInfoApiReply;

        /**
         * Creates a plain object from an OpenInfoApiReply message. Also converts values to other types if specified.
         * @param message OpenInfoApiReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.OpenInfoApiReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OpenInfoApiReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an InfoApiRequest. */
    interface IInfoApiRequest {

        /** InfoApiRequest serialNum */
        serialNum?: (number|Long|null);

        /** InfoApiRequest actualListsRequest */
        actualListsRequest?: (IRIS.IMainListsRequest|null);

        /** InfoApiRequest poolsListRequest */
        poolsListRequest?: (IRIS.IPoolsListRequest|null);

        /** InfoApiRequest poolQuestionsRequest */
        poolQuestionsRequest?: (IRIS.IPoolQuestionsRequest|null);

        /** InfoApiRequest poolAnswersRequest */
        poolAnswersRequest?: (IRIS.IPoolAnswersRequest|null);

        /** InfoApiRequest changePwdRequest */
        changePwdRequest?: (IRIS.IChangePwdRequest|null);

        /** InfoApiRequest boardsRequest */
        boardsRequest?: (IRIS.IBoardsRequest|null);

        /** InfoApiRequest userInfoRequest */
        userInfoRequest?: (IRIS.IUserInfoRequest|null);

        /** InfoApiRequest userFeedbackRequest */
        userFeedbackRequest?: (IRIS.IUserFeedbackRequest|null);
    }

    /**
     * Запрос &API; на получение общей информации.
     * Сообщения actual_lists_request, pools_list_request, pool_questions_request, pool_answers_request, change_pwd_request, boards_request, user_info_request и user_feedback_request взаимоисключаются.
     * Отправляется в очередь: "jms.queue.iris.Main" (см. <xref linkend="section_using_info"/>).
     */
    class InfoApiRequest implements IInfoApiRequest {

        /**
         * Constructs a new InfoApiRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IInfoApiRequest);

        /** InfoApiRequest serialNum. */
        public serialNum: (number|Long);

        /** InfoApiRequest actualListsRequest. */
        public actualListsRequest?: (IRIS.IMainListsRequest|null);

        /** InfoApiRequest poolsListRequest. */
        public poolsListRequest?: (IRIS.IPoolsListRequest|null);

        /** InfoApiRequest poolQuestionsRequest. */
        public poolQuestionsRequest?: (IRIS.IPoolQuestionsRequest|null);

        /** InfoApiRequest poolAnswersRequest. */
        public poolAnswersRequest?: (IRIS.IPoolAnswersRequest|null);

        /** InfoApiRequest changePwdRequest. */
        public changePwdRequest?: (IRIS.IChangePwdRequest|null);

        /** InfoApiRequest boardsRequest. */
        public boardsRequest?: (IRIS.IBoardsRequest|null);

        /** InfoApiRequest userInfoRequest. */
        public userInfoRequest?: (IRIS.IUserInfoRequest|null);

        /** InfoApiRequest userFeedbackRequest. */
        public userFeedbackRequest?: (IRIS.IUserFeedbackRequest|null);

        /** InfoApiRequest request. */
        public request?: ("actualListsRequest"|"poolsListRequest"|"poolQuestionsRequest"|"poolAnswersRequest"|"changePwdRequest"|"boardsRequest"|"userInfoRequest"|"userFeedbackRequest");

        /**
         * Creates a new InfoApiRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns InfoApiRequest instance
         */
        public static create(properties?: IRIS.IInfoApiRequest): IRIS.InfoApiRequest;

        /**
         * Encodes the specified InfoApiRequest message. Does not implicitly {@link IRIS.InfoApiRequest.verify|verify} messages.
         * @param message InfoApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IInfoApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified InfoApiRequest message, length delimited. Does not implicitly {@link IRIS.InfoApiRequest.verify|verify} messages.
         * @param message InfoApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IInfoApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an InfoApiRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns InfoApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.InfoApiRequest;

        /**
         * Decodes an InfoApiRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns InfoApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.InfoApiRequest;

        /**
         * Verifies an InfoApiRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an InfoApiRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns InfoApiRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.InfoApiRequest;

        /**
         * Creates a plain object from an InfoApiRequest message. Also converts values to other types if specified.
         * @param message InfoApiRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.InfoApiRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this InfoApiRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an InfoApiReply. */
    interface IInfoApiReply {

        /** InfoApiReply serialNum */
        serialNum?: (number|Long|null);

        /** InfoApiReply errorMessage */
        errorMessage?: (IRIS.IErrorMessage|null);

        /** InfoApiReply actualListsReply */
        actualListsReply?: (IRIS.IMainListsReply|null);

        /** InfoApiReply poolsListReply */
        poolsListReply?: (IRIS.IPoolsListReply|null);

        /** InfoApiReply poolQuestionsReply */
        poolQuestionsReply?: (IRIS.IPoolQuestionsReply|null);

        /** InfoApiReply poolAnswersReply */
        poolAnswersReply?: (IRIS.IPoolAnswersReply|null);

        /** InfoApiReply changePwdReply */
        changePwdReply?: (IRIS.IChangePwdReply|null);

        /** InfoApiReply boardsReply */
        boardsReply?: (IRIS.IBoardsReply|null);

        /** InfoApiReply userInfoReply */
        userInfoReply?: (IRIS.IUserInfoReply|null);

        /** InfoApiReply userFeedbackReply */
        userFeedbackReply?: (IRIS.IUserFeedbackReply|null);
    }

    /**
     * Ответ &API; с общей информацией.
     * Сообщения actual_lists_reply, pools_list_reply, pool_questions_reply, pool_answers_reply, change_pwd_reply, error_message, boards_reply, user_info_reply и user_feedback_reply взаимоисключаются.
     * Для получения данного сообщения необходимо подписаться на топик: "jms.topic.iris.Main.client" (см. <xref linkend="section_using_info"/>).
     */
    class InfoApiReply implements IInfoApiReply {

        /**
         * Constructs a new InfoApiReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IInfoApiReply);

        /** InfoApiReply serialNum. */
        public serialNum: (number|Long);

        /** InfoApiReply errorMessage. */
        public errorMessage?: (IRIS.IErrorMessage|null);

        /** InfoApiReply actualListsReply. */
        public actualListsReply?: (IRIS.IMainListsReply|null);

        /** InfoApiReply poolsListReply. */
        public poolsListReply?: (IRIS.IPoolsListReply|null);

        /** InfoApiReply poolQuestionsReply. */
        public poolQuestionsReply?: (IRIS.IPoolQuestionsReply|null);

        /** InfoApiReply poolAnswersReply. */
        public poolAnswersReply?: (IRIS.IPoolAnswersReply|null);

        /** InfoApiReply changePwdReply. */
        public changePwdReply?: (IRIS.IChangePwdReply|null);

        /** InfoApiReply boardsReply. */
        public boardsReply?: (IRIS.IBoardsReply|null);

        /** InfoApiReply userInfoReply. */
        public userInfoReply?: (IRIS.IUserInfoReply|null);

        /** InfoApiReply userFeedbackReply. */
        public userFeedbackReply?: (IRIS.IUserFeedbackReply|null);

        /** InfoApiReply replay. */
        public replay?: ("errorMessage"|"actualListsReply"|"poolsListReply"|"poolQuestionsReply"|"poolAnswersReply"|"changePwdReply"|"boardsReply"|"userInfoReply"|"userFeedbackReply");

        /**
         * Creates a new InfoApiReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns InfoApiReply instance
         */
        public static create(properties?: IRIS.IInfoApiReply): IRIS.InfoApiReply;

        /**
         * Encodes the specified InfoApiReply message. Does not implicitly {@link IRIS.InfoApiReply.verify|verify} messages.
         * @param message InfoApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IInfoApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified InfoApiReply message, length delimited. Does not implicitly {@link IRIS.InfoApiReply.verify|verify} messages.
         * @param message InfoApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IInfoApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an InfoApiReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns InfoApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.InfoApiReply;

        /**
         * Decodes an InfoApiReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns InfoApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.InfoApiReply;

        /**
         * Verifies an InfoApiReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an InfoApiReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns InfoApiReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.InfoApiReply;

        /**
         * Creates a plain object from an InfoApiReply message. Also converts values to other types if specified.
         * @param message InfoApiReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.InfoApiReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this InfoApiReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WatchlistApiRequest. */
    interface IWatchlistApiRequest {

        /** WatchlistApiRequest serialNum */
        serialNum?: (number|Long|null);

        /** WatchlistApiRequest searchRequest */
        searchRequest?: (IRIS.IWatchlistSearchRequest|null);

        /** WatchlistApiRequest addRequest */
        addRequest?: (IRIS.IWatchlistAddRequest|null);

        /** WatchlistApiRequest delRequest */
        delRequest?: (IRIS.IWatchlistDelRequest|null);

        /** WatchlistApiRequest watchlistRequest */
        watchlistRequest?: (IRIS.IWatchlistRequest|null);
    }

    /**
     * Запрос &API; на получение информации о списке наблюдения пользователя (watchlist).
     * Сообщения search_request, add_request, del_request и watchlist_request взаимоисключаются.
     * Отправляется в очередь: "jms.queue.iris.Watchlist" (см. <xref linkend="section_using_watchlist"/>).
     */
    class WatchlistApiRequest implements IWatchlistApiRequest {

        /**
         * Constructs a new WatchlistApiRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IWatchlistApiRequest);

        /** WatchlistApiRequest serialNum. */
        public serialNum: (number|Long);

        /** WatchlistApiRequest searchRequest. */
        public searchRequest?: (IRIS.IWatchlistSearchRequest|null);

        /** WatchlistApiRequest addRequest. */
        public addRequest?: (IRIS.IWatchlistAddRequest|null);

        /** WatchlistApiRequest delRequest. */
        public delRequest?: (IRIS.IWatchlistDelRequest|null);

        /** WatchlistApiRequest watchlistRequest. */
        public watchlistRequest?: (IRIS.IWatchlistRequest|null);

        /** WatchlistApiRequest request. */
        public request?: ("searchRequest"|"addRequest"|"delRequest"|"watchlistRequest");

        /**
         * Creates a new WatchlistApiRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WatchlistApiRequest instance
         */
        public static create(properties?: IRIS.IWatchlistApiRequest): IRIS.WatchlistApiRequest;

        /**
         * Encodes the specified WatchlistApiRequest message. Does not implicitly {@link IRIS.WatchlistApiRequest.verify|verify} messages.
         * @param message WatchlistApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IWatchlistApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified WatchlistApiRequest message, length delimited. Does not implicitly {@link IRIS.WatchlistApiRequest.verify|verify} messages.
         * @param message WatchlistApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IWatchlistApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a WatchlistApiRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WatchlistApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.WatchlistApiRequest;

        /**
         * Decodes a WatchlistApiRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WatchlistApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.WatchlistApiRequest;

        /**
         * Verifies a WatchlistApiRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WatchlistApiRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WatchlistApiRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.WatchlistApiRequest;

        /**
         * Creates a plain object from a WatchlistApiRequest message. Also converts values to other types if specified.
         * @param message WatchlistApiRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.WatchlistApiRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WatchlistApiRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WatchlistApiReply. */
    interface IWatchlistApiReply {

        /** WatchlistApiReply serialNum */
        serialNum?: (number|Long|null);

        /** WatchlistApiReply errorMessage */
        errorMessage?: (IRIS.IErrorMessage|null);

        /** WatchlistApiReply searchReply */
        searchReply?: (IRIS.IWatchlistSearchReply|null);

        /** WatchlistApiReply addReply */
        addReply?: (IRIS.IWatchlistAddReply|null);

        /** WatchlistApiReply delReply */
        delReply?: (IRIS.IWatchlistDelReply|null);

        /** WatchlistApiReply watchlistReply */
        watchlistReply?: (IRIS.IWatchlistReply|null);
    }

    /**
     * Ответ &API; с общей информацией о списке наблюдения пользователя (watchlist).
     * Сообщения search_reply, add_reply, del_reply, watchlist_reply и error_message взаимоисключаются.
     * Для получения данного сообщения необходимо подписаться на топик: "jms.topic.iris.Watchlist.client" (см. <xref linkend="section_using_watchlist"/>).
     */
    class WatchlistApiReply implements IWatchlistApiReply {

        /**
         * Constructs a new WatchlistApiReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IWatchlistApiReply);

        /** WatchlistApiReply serialNum. */
        public serialNum: (number|Long);

        /** WatchlistApiReply errorMessage. */
        public errorMessage?: (IRIS.IErrorMessage|null);

        /** WatchlistApiReply searchReply. */
        public searchReply?: (IRIS.IWatchlistSearchReply|null);

        /** WatchlistApiReply addReply. */
        public addReply?: (IRIS.IWatchlistAddReply|null);

        /** WatchlistApiReply delReply. */
        public delReply?: (IRIS.IWatchlistDelReply|null);

        /** WatchlistApiReply watchlistReply. */
        public watchlistReply?: (IRIS.IWatchlistReply|null);

        /** WatchlistApiReply replay. */
        public replay?: ("errorMessage"|"searchReply"|"addReply"|"delReply"|"watchlistReply");

        /**
         * Creates a new WatchlistApiReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WatchlistApiReply instance
         */
        public static create(properties?: IRIS.IWatchlistApiReply): IRIS.WatchlistApiReply;

        /**
         * Encodes the specified WatchlistApiReply message. Does not implicitly {@link IRIS.WatchlistApiReply.verify|verify} messages.
         * @param message WatchlistApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IWatchlistApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified WatchlistApiReply message, length delimited. Does not implicitly {@link IRIS.WatchlistApiReply.verify|verify} messages.
         * @param message WatchlistApiReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IWatchlistApiReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a WatchlistApiReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WatchlistApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.WatchlistApiReply;

        /**
         * Decodes a WatchlistApiReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WatchlistApiReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.WatchlistApiReply;

        /**
         * Verifies a WatchlistApiReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WatchlistApiReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WatchlistApiReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.WatchlistApiReply;

        /**
         * Creates a plain object from a WatchlistApiReply message. Also converts values to other types if specified.
         * @param message WatchlistApiReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.WatchlistApiReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WatchlistApiReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Date. */
    interface IDate {

        /** Date day */
        day?: (number|null);

        /** Date month */
        month?: (number|null);

        /** Date year */
        year?: (number|null);
    }

    /** Represents a Date. */
    class Date implements IDate {

        /**
         * Constructs a new Date.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IDate);

        /** Date day. */
        public day: number;

        /** Date month. */
        public month: number;

        /** Date year. */
        public year: number;

        /**
         * Creates a new Date instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Date instance
         */
        public static create(properties?: IRIS.IDate): IRIS.Date;

        /**
         * Encodes the specified Date message. Does not implicitly {@link IRIS.Date.verify|verify} messages.
         * @param message Date message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IDate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Date message, length delimited. Does not implicitly {@link IRIS.Date.verify|verify} messages.
         * @param message Date message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IDate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Date message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Date
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.Date;

        /**
         * Decodes a Date message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Date
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.Date;

        /**
         * Verifies a Date message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Date message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Date
         */
        public static fromObject(object: { [k: string]: any }): IRIS.Date;

        /**
         * Creates a plain object from a Date message. Also converts values to other types if specified.
         * @param message Date
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.Date, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Date to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Time. */
    interface ITime {

        /** Time hour */
        hour?: (number|null);

        /** Time min */
        min?: (number|null);

        /** Time sec */
        sec?: (number|null);
    }

    /** Represents a Time. */
    class Time implements ITime {

        /**
         * Constructs a new Time.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ITime);

        /** Time hour. */
        public hour: number;

        /** Time min. */
        public min: number;

        /** Time sec. */
        public sec: number;

        /**
         * Creates a new Time instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Time instance
         */
        public static create(properties?: IRIS.ITime): IRIS.Time;

        /**
         * Encodes the specified Time message. Does not implicitly {@link IRIS.Time.verify|verify} messages.
         * @param message Time message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ITime, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Time message, length delimited. Does not implicitly {@link IRIS.Time.verify|verify} messages.
         * @param message Time message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ITime, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Time message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Time
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.Time;

        /**
         * Decodes a Time message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Time
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.Time;

        /**
         * Verifies a Time message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Time message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Time
         */
        public static fromObject(object: { [k: string]: any }): IRIS.Time;

        /**
         * Creates a plain object from a Time message. Also converts values to other types if specified.
         * @param message Time
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.Time, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Time to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DateTime. */
    interface IDateTime {

        /** DateTime date */
        date?: (IRIS.IDate|null);

        /** DateTime time */
        time?: (IRIS.ITime|null);
    }

    /** Represents a DateTime. */
    class DateTime implements IDateTime {

        /**
         * Constructs a new DateTime.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IDateTime);

        /** DateTime date. */
        public date?: (IRIS.IDate|null);

        /** DateTime time. */
        public time?: (IRIS.ITime|null);

        /**
         * Creates a new DateTime instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DateTime instance
         */
        public static create(properties?: IRIS.IDateTime): IRIS.DateTime;

        /**
         * Encodes the specified DateTime message. Does not implicitly {@link IRIS.DateTime.verify|verify} messages.
         * @param message DateTime message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IDateTime, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DateTime message, length delimited. Does not implicitly {@link IRIS.DateTime.verify|verify} messages.
         * @param message DateTime message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IDateTime, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DateTime message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DateTime
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.DateTime;

        /**
         * Decodes a DateTime message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DateTime
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.DateTime;

        /**
         * Verifies a DateTime message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DateTime message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DateTime
         */
        public static fromObject(object: { [k: string]: any }): IRIS.DateTime;

        /**
         * Creates a plain object from a DateTime message. Also converts values to other types if specified.
         * @param message DateTime
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.DateTime, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DateTime to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DatePeriod. */
    interface IDatePeriod {

        /** DatePeriod begDate */
        begDate?: (IRIS.IDate|null);

        /** DatePeriod endDate */
        endDate?: (IRIS.IDate|null);
    }

    /** Represents a DatePeriod. */
    class DatePeriod implements IDatePeriod {

        /**
         * Constructs a new DatePeriod.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IDatePeriod);

        /** DatePeriod begDate. */
        public begDate?: (IRIS.IDate|null);

        /** DatePeriod endDate. */
        public endDate?: (IRIS.IDate|null);

        /**
         * Creates a new DatePeriod instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DatePeriod instance
         */
        public static create(properties?: IRIS.IDatePeriod): IRIS.DatePeriod;

        /**
         * Encodes the specified DatePeriod message. Does not implicitly {@link IRIS.DatePeriod.verify|verify} messages.
         * @param message DatePeriod message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IDatePeriod, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DatePeriod message, length delimited. Does not implicitly {@link IRIS.DatePeriod.verify|verify} messages.
         * @param message DatePeriod message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IDatePeriod, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DatePeriod message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DatePeriod
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.DatePeriod;

        /**
         * Decodes a DatePeriod message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DatePeriod
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.DatePeriod;

        /**
         * Verifies a DatePeriod message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DatePeriod message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DatePeriod
         */
        public static fromObject(object: { [k: string]: any }): IRIS.DatePeriod;

        /**
         * Creates a plain object from a DatePeriod message. Also converts values to other types if specified.
         * @param message DatePeriod
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.DatePeriod, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DatePeriod to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Week. */
    interface IWeek {

        /** Week week */
        week?: (number|null);

        /** Week year */
        year?: (number|null);
    }

    /** Represents a Week. */
    class Week implements IWeek {

        /**
         * Constructs a new Week.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IWeek);

        /** Week week. */
        public week: number;

        /** Week year. */
        public year: number;

        /**
         * Creates a new Week instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Week instance
         */
        public static create(properties?: IRIS.IWeek): IRIS.Week;

        /**
         * Encodes the specified Week message. Does not implicitly {@link IRIS.Week.verify|verify} messages.
         * @param message Week message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IWeek, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Week message, length delimited. Does not implicitly {@link IRIS.Week.verify|verify} messages.
         * @param message Week message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IWeek, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Week message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Week
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.Week;

        /**
         * Decodes a Week message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Week
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.Week;

        /**
         * Verifies a Week message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Week message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Week
         */
        public static fromObject(object: { [k: string]: any }): IRIS.Week;

        /**
         * Creates a plain object from a Week message. Also converts values to other types if specified.
         * @param message Week
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.Week, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Week to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WeekPeriod. */
    interface IWeekPeriod {

        /** WeekPeriod begWeek */
        begWeek?: (IRIS.IWeek|null);

        /** WeekPeriod endWeek */
        endWeek?: (IRIS.IWeek|null);
    }

    /** Represents a WeekPeriod. */
    class WeekPeriod implements IWeekPeriod {

        /**
         * Constructs a new WeekPeriod.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IWeekPeriod);

        /** WeekPeriod begWeek. */
        public begWeek?: (IRIS.IWeek|null);

        /** WeekPeriod endWeek. */
        public endWeek?: (IRIS.IWeek|null);

        /**
         * Creates a new WeekPeriod instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WeekPeriod instance
         */
        public static create(properties?: IRIS.IWeekPeriod): IRIS.WeekPeriod;

        /**
         * Encodes the specified WeekPeriod message. Does not implicitly {@link IRIS.WeekPeriod.verify|verify} messages.
         * @param message WeekPeriod message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IWeekPeriod, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified WeekPeriod message, length delimited. Does not implicitly {@link IRIS.WeekPeriod.verify|verify} messages.
         * @param message WeekPeriod message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IWeekPeriod, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a WeekPeriod message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WeekPeriod
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.WeekPeriod;

        /**
         * Decodes a WeekPeriod message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WeekPeriod
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.WeekPeriod;

        /**
         * Verifies a WeekPeriod message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WeekPeriod message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WeekPeriod
         */
        public static fromObject(object: { [k: string]: any }): IRIS.WeekPeriod;

        /**
         * Creates a plain object from a WeekPeriod message. Also converts values to other types if specified.
         * @param message WeekPeriod
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.WeekPeriod, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WeekPeriod to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Month. */
    interface IMonth {

        /** Month month */
        month?: (number|null);

        /** Month year */
        year?: (number|null);
    }

    /** Represents a Month. */
    class Month implements IMonth {

        /**
         * Constructs a new Month.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IMonth);

        /** Month month. */
        public month: number;

        /** Month year. */
        public year: number;

        /**
         * Creates a new Month instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Month instance
         */
        public static create(properties?: IRIS.IMonth): IRIS.Month;

        /**
         * Encodes the specified Month message. Does not implicitly {@link IRIS.Month.verify|verify} messages.
         * @param message Month message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IMonth, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Month message, length delimited. Does not implicitly {@link IRIS.Month.verify|verify} messages.
         * @param message Month message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IMonth, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Month message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Month
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.Month;

        /**
         * Decodes a Month message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Month
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.Month;

        /**
         * Verifies a Month message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Month message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Month
         */
        public static fromObject(object: { [k: string]: any }): IRIS.Month;

        /**
         * Creates a plain object from a Month message. Also converts values to other types if specified.
         * @param message Month
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.Month, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Month to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MonthPeriod. */
    interface IMonthPeriod {

        /** MonthPeriod begMonth */
        begMonth?: (IRIS.IMonth|null);

        /** MonthPeriod endMonth */
        endMonth?: (IRIS.IMonth|null);
    }

    /** Represents a MonthPeriod. */
    class MonthPeriod implements IMonthPeriod {

        /**
         * Constructs a new MonthPeriod.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IMonthPeriod);

        /** MonthPeriod begMonth. */
        public begMonth?: (IRIS.IMonth|null);

        /** MonthPeriod endMonth. */
        public endMonth?: (IRIS.IMonth|null);

        /**
         * Creates a new MonthPeriod instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MonthPeriod instance
         */
        public static create(properties?: IRIS.IMonthPeriod): IRIS.MonthPeriod;

        /**
         * Encodes the specified MonthPeriod message. Does not implicitly {@link IRIS.MonthPeriod.verify|verify} messages.
         * @param message MonthPeriod message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IMonthPeriod, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MonthPeriod message, length delimited. Does not implicitly {@link IRIS.MonthPeriod.verify|verify} messages.
         * @param message MonthPeriod message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IMonthPeriod, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MonthPeriod message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MonthPeriod
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.MonthPeriod;

        /**
         * Decodes a MonthPeriod message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MonthPeriod
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.MonthPeriod;

        /**
         * Verifies a MonthPeriod message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MonthPeriod message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MonthPeriod
         */
        public static fromObject(object: { [k: string]: any }): IRIS.MonthPeriod;

        /**
         * Creates a plain object from a MonthPeriod message. Also converts values to other types if specified.
         * @param message MonthPeriod
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.MonthPeriod, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MonthPeriod to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Quarter. */
    interface IQuarter {

        /** Quarter quarter */
        quarter?: (number|null);

        /** Quarter year */
        year?: (number|null);
    }

    /** Represents a Quarter. */
    class Quarter implements IQuarter {

        /**
         * Constructs a new Quarter.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IQuarter);

        /** Quarter quarter. */
        public quarter: number;

        /** Quarter year. */
        public year: number;

        /**
         * Creates a new Quarter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Quarter instance
         */
        public static create(properties?: IRIS.IQuarter): IRIS.Quarter;

        /**
         * Encodes the specified Quarter message. Does not implicitly {@link IRIS.Quarter.verify|verify} messages.
         * @param message Quarter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IQuarter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Quarter message, length delimited. Does not implicitly {@link IRIS.Quarter.verify|verify} messages.
         * @param message Quarter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IQuarter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Quarter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Quarter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.Quarter;

        /**
         * Decodes a Quarter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Quarter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.Quarter;

        /**
         * Verifies a Quarter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Quarter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Quarter
         */
        public static fromObject(object: { [k: string]: any }): IRIS.Quarter;

        /**
         * Creates a plain object from a Quarter message. Also converts values to other types if specified.
         * @param message Quarter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.Quarter, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Quarter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a QuarterPeriod. */
    interface IQuarterPeriod {

        /** QuarterPeriod begQuarter */
        begQuarter?: (IRIS.IQuarter|null);

        /** QuarterPeriod endQuarter */
        endQuarter?: (IRIS.IQuarter|null);
    }

    /** Represents a QuarterPeriod. */
    class QuarterPeriod implements IQuarterPeriod {

        /**
         * Constructs a new QuarterPeriod.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IQuarterPeriod);

        /** QuarterPeriod begQuarter. */
        public begQuarter?: (IRIS.IQuarter|null);

        /** QuarterPeriod endQuarter. */
        public endQuarter?: (IRIS.IQuarter|null);

        /**
         * Creates a new QuarterPeriod instance using the specified properties.
         * @param [properties] Properties to set
         * @returns QuarterPeriod instance
         */
        public static create(properties?: IRIS.IQuarterPeriod): IRIS.QuarterPeriod;

        /**
         * Encodes the specified QuarterPeriod message. Does not implicitly {@link IRIS.QuarterPeriod.verify|verify} messages.
         * @param message QuarterPeriod message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IQuarterPeriod, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified QuarterPeriod message, length delimited. Does not implicitly {@link IRIS.QuarterPeriod.verify|verify} messages.
         * @param message QuarterPeriod message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IQuarterPeriod, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a QuarterPeriod message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns QuarterPeriod
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.QuarterPeriod;

        /**
         * Decodes a QuarterPeriod message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns QuarterPeriod
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.QuarterPeriod;

        /**
         * Verifies a QuarterPeriod message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a QuarterPeriod message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns QuarterPeriod
         */
        public static fromObject(object: { [k: string]: any }): IRIS.QuarterPeriod;

        /**
         * Creates a plain object from a QuarterPeriod message. Also converts values to other types if specified.
         * @param message QuarterPeriod
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.QuarterPeriod, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this QuarterPeriod to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Year. */
    interface IYear {

        /** Year year */
        year?: (number|null);
    }

    /** Represents a Year. */
    class Year implements IYear {

        /**
         * Constructs a new Year.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IYear);

        /** Year year. */
        public year: number;

        /**
         * Creates a new Year instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Year instance
         */
        public static create(properties?: IRIS.IYear): IRIS.Year;

        /**
         * Encodes the specified Year message. Does not implicitly {@link IRIS.Year.verify|verify} messages.
         * @param message Year message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IYear, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Year message, length delimited. Does not implicitly {@link IRIS.Year.verify|verify} messages.
         * @param message Year message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IYear, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Year message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Year
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.Year;

        /**
         * Decodes a Year message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Year
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.Year;

        /**
         * Verifies a Year message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Year message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Year
         */
        public static fromObject(object: { [k: string]: any }): IRIS.Year;

        /**
         * Creates a plain object from a Year message. Also converts values to other types if specified.
         * @param message Year
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.Year, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Year to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a YearPeriod. */
    interface IYearPeriod {

        /** YearPeriod begYear */
        begYear?: (IRIS.IYear|null);

        /** YearPeriod endYear */
        endYear?: (IRIS.IYear|null);
    }

    /** Represents a YearPeriod. */
    class YearPeriod implements IYearPeriod {

        /**
         * Constructs a new YearPeriod.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IYearPeriod);

        /** YearPeriod begYear. */
        public begYear?: (IRIS.IYear|null);

        /** YearPeriod endYear. */
        public endYear?: (IRIS.IYear|null);

        /**
         * Creates a new YearPeriod instance using the specified properties.
         * @param [properties] Properties to set
         * @returns YearPeriod instance
         */
        public static create(properties?: IRIS.IYearPeriod): IRIS.YearPeriod;

        /**
         * Encodes the specified YearPeriod message. Does not implicitly {@link IRIS.YearPeriod.verify|verify} messages.
         * @param message YearPeriod message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IYearPeriod, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified YearPeriod message, length delimited. Does not implicitly {@link IRIS.YearPeriod.verify|verify} messages.
         * @param message YearPeriod message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IYearPeriod, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a YearPeriod message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns YearPeriod
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.YearPeriod;

        /**
         * Decodes a YearPeriod message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns YearPeriod
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.YearPeriod;

        /**
         * Verifies a YearPeriod message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a YearPeriod message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns YearPeriod
         */
        public static fromObject(object: { [k: string]: any }): IRIS.YearPeriod;

        /**
         * Creates a plain object from a YearPeriod message. Also converts values to other types if specified.
         * @param message YearPeriod
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.YearPeriod, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this YearPeriod to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TotalsPeriod. */
    interface ITotalsPeriod {

        /** TotalsPeriod day */
        day?: (IRIS.IDate|null);

        /** TotalsPeriod week */
        week?: (IRIS.IWeek|null);

        /** TotalsPeriod month */
        month?: (IRIS.IMonth|null);

        /** TotalsPeriod quarter */
        quarter?: (IRIS.IQuarter|null);

        /** TotalsPeriod year */
        year?: (IRIS.IYear|null);

        /** TotalsPeriod dayPeriod */
        dayPeriod?: (IRIS.IDatePeriod|null);

        /** TotalsPeriod weekPeriod */
        weekPeriod?: (IRIS.IWeekPeriod|null);

        /** TotalsPeriod monthPeriod */
        monthPeriod?: (IRIS.IMonthPeriod|null);

        /** TotalsPeriod quarterPeriod */
        quarterPeriod?: (IRIS.IQuarterPeriod|null);

        /** TotalsPeriod yearPeriod */
        yearPeriod?: (IRIS.IYearPeriod|null);
    }

    /**
     * Сообщение для указания требуемого периода для выдачи сгруппированной информации о торгах.
     * Используется для задания периода при работе с итогами торгов и с графиками (см. <xref linkend="section_using_totals"/>, <xref linkend="section_using_curtotals"/>, <xref linkend="section_using_graph"/> и <xref linkend="section_using_curgraph"/>).
     */
    class TotalsPeriod implements ITotalsPeriod {

        /**
         * Constructs a new TotalsPeriod.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ITotalsPeriod);

        /** TotalsPeriod day. */
        public day?: (IRIS.IDate|null);

        /** TotalsPeriod week. */
        public week?: (IRIS.IWeek|null);

        /** TotalsPeriod month. */
        public month?: (IRIS.IMonth|null);

        /** TotalsPeriod quarter. */
        public quarter?: (IRIS.IQuarter|null);

        /** TotalsPeriod year. */
        public year?: (IRIS.IYear|null);

        /** TotalsPeriod dayPeriod. */
        public dayPeriod?: (IRIS.IDatePeriod|null);

        /** TotalsPeriod weekPeriod. */
        public weekPeriod?: (IRIS.IWeekPeriod|null);

        /** TotalsPeriod monthPeriod. */
        public monthPeriod?: (IRIS.IMonthPeriod|null);

        /** TotalsPeriod quarterPeriod. */
        public quarterPeriod?: (IRIS.IQuarterPeriod|null);

        /** TotalsPeriod yearPeriod. */
        public yearPeriod?: (IRIS.IYearPeriod|null);

        /** TotalsPeriod interval. */
        public interval?: ("day"|"week"|"month"|"quarter"|"year"|"dayPeriod"|"weekPeriod"|"monthPeriod"|"quarterPeriod"|"yearPeriod");

        /**
         * Creates a new TotalsPeriod instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TotalsPeriod instance
         */
        public static create(properties?: IRIS.ITotalsPeriod): IRIS.TotalsPeriod;

        /**
         * Encodes the specified TotalsPeriod message. Does not implicitly {@link IRIS.TotalsPeriod.verify|verify} messages.
         * @param message TotalsPeriod message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ITotalsPeriod, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TotalsPeriod message, length delimited. Does not implicitly {@link IRIS.TotalsPeriod.verify|verify} messages.
         * @param message TotalsPeriod message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ITotalsPeriod, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TotalsPeriod message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TotalsPeriod
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.TotalsPeriod;

        /**
         * Decodes a TotalsPeriod message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TotalsPeriod
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.TotalsPeriod;

        /**
         * Verifies a TotalsPeriod message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TotalsPeriod message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TotalsPeriod
         */
        public static fromObject(object: { [k: string]: any }): IRIS.TotalsPeriod;

        /**
         * Creates a plain object from a TotalsPeriod message. Also converts values to other types if specified.
         * @param message TotalsPeriod
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.TotalsPeriod, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TotalsPeriod to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Decimal. */
    interface IDecimal {

        /** Decimal value */
        value?: (string|null);
    }

    /** Represents a Decimal. */
    class Decimal implements IDecimal {

        /**
         * Constructs a new Decimal.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IDecimal);

        /** Decimal value. */
        public value: string;

        /**
         * Creates a new Decimal instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Decimal instance
         */
        public static create(properties?: IRIS.IDecimal): IRIS.Decimal;

        /**
         * Encodes the specified Decimal message. Does not implicitly {@link IRIS.Decimal.verify|verify} messages.
         * @param message Decimal message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IDecimal, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Decimal message, length delimited. Does not implicitly {@link IRIS.Decimal.verify|verify} messages.
         * @param message Decimal message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IDecimal, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Decimal message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Decimal
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.Decimal;

        /**
         * Decodes a Decimal message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Decimal
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.Decimal;

        /**
         * Verifies a Decimal message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Decimal message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Decimal
         */
        public static fromObject(object: { [k: string]: any }): IRIS.Decimal;

        /**
         * Creates a plain object from a Decimal message. Also converts values to other types if specified.
         * @param message Decimal
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.Decimal, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Decimal to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DecimalRange. */
    interface IDecimalRange {

        /** DecimalRange beg */
        beg?: (IRIS.IDecimal|null);

        /** DecimalRange begInclusive */
        begInclusive?: (boolean|null);

        /** DecimalRange end */
        end?: (IRIS.IDecimal|null);

        /** DecimalRange endInclusive */
        endInclusive?: (boolean|null);
    }

    /** Represents a DecimalRange. */
    class DecimalRange implements IDecimalRange {

        /**
         * Constructs a new DecimalRange.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IDecimalRange);

        /** DecimalRange beg. */
        public beg?: (IRIS.IDecimal|null);

        /** DecimalRange begInclusive. */
        public begInclusive: boolean;

        /** DecimalRange end. */
        public end?: (IRIS.IDecimal|null);

        /** DecimalRange endInclusive. */
        public endInclusive: boolean;

        /**
         * Creates a new DecimalRange instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DecimalRange instance
         */
        public static create(properties?: IRIS.IDecimalRange): IRIS.DecimalRange;

        /**
         * Encodes the specified DecimalRange message. Does not implicitly {@link IRIS.DecimalRange.verify|verify} messages.
         * @param message DecimalRange message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IDecimalRange, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DecimalRange message, length delimited. Does not implicitly {@link IRIS.DecimalRange.verify|verify} messages.
         * @param message DecimalRange message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IDecimalRange, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DecimalRange message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DecimalRange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.DecimalRange;

        /**
         * Decodes a DecimalRange message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DecimalRange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.DecimalRange;

        /**
         * Verifies a DecimalRange message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DecimalRange message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DecimalRange
         */
        public static fromObject(object: { [k: string]: any }): IRIS.DecimalRange;

        /**
         * Creates a plain object from a DecimalRange message. Also converts values to other types if specified.
         * @param message DecimalRange
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.DecimalRange, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DecimalRange to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an Ohlc. */
    interface IOhlc {

        /** Ohlc open */
        open?: (IRIS.IDecimal|null);

        /** Ohlc high */
        high?: (IRIS.IDecimal|null);

        /** Ohlc low */
        low?: (IRIS.IDecimal|null);

        /** Ohlc close */
        close?: (IRIS.IDecimal|null);

        /** Ohlc closeTime */
        closeTime?: (IRIS.IDateTime|null);

        /** Ohlc wa */
        wa?: (IRIS.IDecimal|null);

        /** Ohlc trend */
        trend?: (IRIS.IDecimal|null);

        /** Ohlc trendPs */
        trendPs?: (IRIS.IDecimal|null);

        /** Ohlc trendTime */
        trendTime?: (IRIS.IDateTime|null);
    }

    /** Represents an Ohlc. */
    class Ohlc implements IOhlc {

        /**
         * Constructs a new Ohlc.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IOhlc);

        /** Ohlc open. */
        public open?: (IRIS.IDecimal|null);

        /** Ohlc high. */
        public high?: (IRIS.IDecimal|null);

        /** Ohlc low. */
        public low?: (IRIS.IDecimal|null);

        /** Ohlc close. */
        public close?: (IRIS.IDecimal|null);

        /** Ohlc closeTime. */
        public closeTime?: (IRIS.IDateTime|null);

        /** Ohlc wa. */
        public wa?: (IRIS.IDecimal|null);

        /** Ohlc trend. */
        public trend?: (IRIS.IDecimal|null);

        /** Ohlc trendPs. */
        public trendPs?: (IRIS.IDecimal|null);

        /** Ohlc trendTime. */
        public trendTime?: (IRIS.IDateTime|null);

        /**
         * Creates a new Ohlc instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Ohlc instance
         */
        public static create(properties?: IRIS.IOhlc): IRIS.Ohlc;

        /**
         * Encodes the specified Ohlc message. Does not implicitly {@link IRIS.Ohlc.verify|verify} messages.
         * @param message Ohlc message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IOhlc, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Ohlc message, length delimited. Does not implicitly {@link IRIS.Ohlc.verify|verify} messages.
         * @param message Ohlc message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IOhlc, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an Ohlc message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Ohlc
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.Ohlc;

        /**
         * Decodes an Ohlc message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Ohlc
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.Ohlc;

        /**
         * Verifies an Ohlc message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an Ohlc message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Ohlc
         */
        public static fromObject(object: { [k: string]: any }): IRIS.Ohlc;

        /**
         * Creates a plain object from an Ohlc message. Also converts values to other types if specified.
         * @param message Ohlc
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.Ohlc, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Ohlc to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GraphOhlc. */
    interface IGraphOhlc {

        /** GraphOhlc open */
        open?: (number|null);

        /** GraphOhlc high */
        high?: (number|null);

        /** GraphOhlc low */
        low?: (number|null);

        /** GraphOhlc close */
        close?: (number|null);

        /** GraphOhlc volume */
        volume?: (number|null);

        /** GraphOhlc closeTime */
        closeTime?: (IRIS.IDateTime|null);
    }

    /** Represents a GraphOhlc. */
    class GraphOhlc implements IGraphOhlc {

        /**
         * Constructs a new GraphOhlc.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IGraphOhlc);

        /** GraphOhlc open. */
        public open: number;

        /** GraphOhlc high. */
        public high: number;

        /** GraphOhlc low. */
        public low: number;

        /** GraphOhlc close. */
        public close: number;

        /** GraphOhlc volume. */
        public volume: number;

        /** GraphOhlc closeTime. */
        public closeTime?: (IRIS.IDateTime|null);

        /**
         * Creates a new GraphOhlc instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GraphOhlc instance
         */
        public static create(properties?: IRIS.IGraphOhlc): IRIS.GraphOhlc;

        /**
         * Encodes the specified GraphOhlc message. Does not implicitly {@link IRIS.GraphOhlc.verify|verify} messages.
         * @param message GraphOhlc message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IGraphOhlc, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GraphOhlc message, length delimited. Does not implicitly {@link IRIS.GraphOhlc.verify|verify} messages.
         * @param message GraphOhlc message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IGraphOhlc, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GraphOhlc message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GraphOhlc
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.GraphOhlc;

        /**
         * Decodes a GraphOhlc message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GraphOhlc
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.GraphOhlc;

        /**
         * Verifies a GraphOhlc message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GraphOhlc message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GraphOhlc
         */
        public static fromObject(object: { [k: string]: any }): IRIS.GraphOhlc;

        /**
         * Creates a plain object from a GraphOhlc message. Also converts values to other types if specified.
         * @param message GraphOhlc
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.GraphOhlc, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GraphOhlc to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Интервалы поддерживемые при выдаче информации для графиков. */
    enum GraphIntervalType {
        GIT_5_MIN = 0,
        GIT_15_MIN = 1,
        GIT_30_MIN = 2,
        GIT_HOUR = 3,
        GIT_DAY = 4,
        GIT_WEEK = 5,
        GIT_MONTH = 6
    }

    /** Properties of a Range. */
    interface IRange {

        /** Range first */
        first?: (number|null);

        /** Range count */
        count?: (number|null);
    }

    /** Represents a Range. */
    class Range implements IRange {

        /**
         * Constructs a new Range.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IRange);

        /** Range first. */
        public first: number;

        /** Range count. */
        public count: number;

        /**
         * Creates a new Range instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Range instance
         */
        public static create(properties?: IRIS.IRange): IRIS.Range;

        /**
         * Encodes the specified Range message. Does not implicitly {@link IRIS.Range.verify|verify} messages.
         * @param message Range message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IRange, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Range message, length delimited. Does not implicitly {@link IRIS.Range.verify|verify} messages.
         * @param message Range message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IRange, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Range message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Range
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.Range;

        /**
         * Decodes a Range message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Range
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.Range;

        /**
         * Verifies a Range message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Range message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Range
         */
        public static fromObject(object: { [k: string]: any }): IRIS.Range;

        /**
         * Creates a plain object from a Range message. Also converts values to other types if specified.
         * @param message Range
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.Range, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Range to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** EventType enum. */
    enum EventType {
        NEW = 0,
        UPDATE = 2,
        DELETE = 3
    }

    /** Language enum. */
    enum Language {
        RU = 0,
        EN = 1,
        KZ = 2
    }

    /** Сектор рынка. */
    enum MarketSector {
        PRIMARY = 0,
        SECONDARY = 1,
        SBS_SECTOR = 2,
        OFFERING = 3,
        REPURCHASE = 4
    }

    /** Направление поданной заявки (покупка, продажа). */
    enum OrderDirection {
        BUY = 0,
        SELL = 1
    }

    /** Статус поданной заявки. */
    enum OrderStatus {
        ACTIVE = 0,
        PARTIALLY = 1,
        FULLY = 2,
        CANCELED = 3
    }

    /** Тип цены. */
    enum PriceType {
        PT_MONEY = 0,
        PT_CLEAR = 1,
        PT_DISCOUNT = 2,
        PT_SPREAD_BP = 3,
        PT_SPREAD_PR = 4,
        PT_YIELD = 5,
        PT_BP = 6,
        PT_OTHER = 7
    }

    /** Properties of a CouponInfo. */
    interface ICouponInfo {

        /** CouponInfo rate */
        rate?: (IRIS.IDecimal|null);

        /** CouponInfo minRate */
        minRate?: (IRIS.IDecimal|null);

        /** CouponInfo maxRate */
        maxRate?: (IRIS.IDecimal|null);

        /** CouponInfo maturity */
        maturity?: (IRIS.IDate|null);

        /** CouponInfo freq */
        freq?: (number|null);

        /** CouponInfo fixedMargin */
        fixedMargin?: (IRIS.IDecimal|null);
    }

    /** Дополнительная информация о купонной облигации. */
    class CouponInfo implements ICouponInfo {

        /**
         * Constructs a new CouponInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICouponInfo);

        /** CouponInfo rate. */
        public rate?: (IRIS.IDecimal|null);

        /** CouponInfo minRate. */
        public minRate?: (IRIS.IDecimal|null);

        /** CouponInfo maxRate. */
        public maxRate?: (IRIS.IDecimal|null);

        /** CouponInfo maturity. */
        public maturity?: (IRIS.IDate|null);

        /** CouponInfo freq. */
        public freq: number;

        /** CouponInfo fixedMargin. */
        public fixedMargin?: (IRIS.IDecimal|null);

        /**
         * Creates a new CouponInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CouponInfo instance
         */
        public static create(properties?: IRIS.ICouponInfo): IRIS.CouponInfo;

        /**
         * Encodes the specified CouponInfo message. Does not implicitly {@link IRIS.CouponInfo.verify|verify} messages.
         * @param message CouponInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICouponInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CouponInfo message, length delimited. Does not implicitly {@link IRIS.CouponInfo.verify|verify} messages.
         * @param message CouponInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICouponInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CouponInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CouponInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CouponInfo;

        /**
         * Decodes a CouponInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CouponInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CouponInfo;

        /**
         * Verifies a CouponInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CouponInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CouponInfo
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CouponInfo;

        /**
         * Creates a plain object from a CouponInfo message. Also converts values to other types if specified.
         * @param message CouponInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CouponInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CouponInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an Orderbook. */
    interface IOrderbook {

        /** Orderbook direction */
        direction?: (IRIS.OrderDirection|null);

        /** Orderbook price */
        price?: (IRIS.IDecimal|null);

        /** Orderbook volume */
        volume?: (number|Long|null);
    }

    /** Запись в стакане заявок. */
    class Orderbook implements IOrderbook {

        /**
         * Constructs a new Orderbook.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IOrderbook);

        /** Orderbook direction. */
        public direction: IRIS.OrderDirection;

        /** Orderbook price. */
        public price?: (IRIS.IDecimal|null);

        /** Orderbook volume. */
        public volume: (number|Long);

        /**
         * Creates a new Orderbook instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Orderbook instance
         */
        public static create(properties?: IRIS.IOrderbook): IRIS.Orderbook;

        /**
         * Encodes the specified Orderbook message. Does not implicitly {@link IRIS.Orderbook.verify|verify} messages.
         * @param message Orderbook message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IOrderbook, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Orderbook message, length delimited. Does not implicitly {@link IRIS.Orderbook.verify|verify} messages.
         * @param message Orderbook message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IOrderbook, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an Orderbook message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Orderbook
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.Orderbook;

        /**
         * Decodes an Orderbook message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Orderbook
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.Orderbook;

        /**
         * Verifies an Orderbook message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an Orderbook message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Orderbook
         */
        public static fromObject(object: { [k: string]: any }): IRIS.Orderbook;

        /**
         * Creates a plain object from an Orderbook message. Also converts values to other types if specified.
         * @param message Orderbook
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.Orderbook, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Orderbook to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a HTMLAttrsParams. */
    interface IHTMLAttrsParams {

        /** HTMLAttrsParams id */
        id?: (number|null);

        /** HTMLAttrsParams lang */
        lang?: (IRIS.Language|null);
    }

    /** Represents a HTMLAttrsParams. */
    class HTMLAttrsParams implements IHTMLAttrsParams {

        /**
         * Constructs a new HTMLAttrsParams.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IHTMLAttrsParams);

        /** HTMLAttrsParams id. */
        public id: number;

        /** HTMLAttrsParams lang. */
        public lang: IRIS.Language;

        /**
         * Creates a new HTMLAttrsParams instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HTMLAttrsParams instance
         */
        public static create(properties?: IRIS.IHTMLAttrsParams): IRIS.HTMLAttrsParams;

        /**
         * Encodes the specified HTMLAttrsParams message. Does not implicitly {@link IRIS.HTMLAttrsParams.verify|verify} messages.
         * @param message HTMLAttrsParams message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IHTMLAttrsParams, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified HTMLAttrsParams message, length delimited. Does not implicitly {@link IRIS.HTMLAttrsParams.verify|verify} messages.
         * @param message HTMLAttrsParams message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IHTMLAttrsParams, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a HTMLAttrsParams message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HTMLAttrsParams
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.HTMLAttrsParams;

        /**
         * Decodes a HTMLAttrsParams message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HTMLAttrsParams
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.HTMLAttrsParams;

        /**
         * Verifies a HTMLAttrsParams message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a HTMLAttrsParams message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns HTMLAttrsParams
         */
        public static fromObject(object: { [k: string]: any }): IRIS.HTMLAttrsParams;

        /**
         * Creates a plain object from a HTMLAttrsParams message. Also converts values to other types if specified.
         * @param message HTMLAttrsParams
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.HTMLAttrsParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this HTMLAttrsParams to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Формат экспортируемого файла. */
    enum ExportFileFormat {
        EFF_XLSX = 0,
        EFF_XML = 1,
        EFF_CSV = 2,
        EFF_JSON = 3
    }

    /** Тип лидера рынка. */
    enum LeaderType {
        LT_RISER = 0,
        LT_FALLER = 1
    }

    /** ErrorMessageCode enum. */
    enum ErrorMessageCode {
        EMC_UNKNOWN = 0,
        EMC_BAD_USER = 1,
        EMC_BAD_REQUEST = 2,
        EMC_BAD_PARAMS = 3,
        EMC_PROC_ERROR = 4
    }

    /** Properties of an ErrorMessage. */
    interface IErrorMessage {

        /** ErrorMessage code */
        code?: (IRIS.ErrorMessageCode|null);

        /** ErrorMessage message */
        message?: (string|null);
    }

    /** Represents an ErrorMessage. */
    class ErrorMessage implements IErrorMessage {

        /**
         * Constructs a new ErrorMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IErrorMessage);

        /** ErrorMessage code. */
        public code: IRIS.ErrorMessageCode;

        /** ErrorMessage message. */
        public message: string;

        /**
         * Creates a new ErrorMessage instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ErrorMessage instance
         */
        public static create(properties?: IRIS.IErrorMessage): IRIS.ErrorMessage;

        /**
         * Encodes the specified ErrorMessage message. Does not implicitly {@link IRIS.ErrorMessage.verify|verify} messages.
         * @param message ErrorMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IErrorMessage, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ErrorMessage message, length delimited. Does not implicitly {@link IRIS.ErrorMessage.verify|verify} messages.
         * @param message ErrorMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IErrorMessage, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ErrorMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ErrorMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.ErrorMessage;

        /**
         * Decodes an ErrorMessage message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ErrorMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.ErrorMessage;

        /**
         * Verifies an ErrorMessage message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ErrorMessage message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ErrorMessage
         */
        public static fromObject(object: { [k: string]: any }): IRIS.ErrorMessage;

        /**
         * Creates a plain object from an ErrorMessage message. Also converts values to other types if specified.
         * @param message ErrorMessage
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.ErrorMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ErrorMessage to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MainListsRequest. */
    interface IMainListsRequest {

        /** MainListsRequest lang */
        lang?: (IRIS.Language|null);
    }

    /** Represents a MainListsRequest. */
    class MainListsRequest implements IMainListsRequest {

        /**
         * Constructs a new MainListsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IMainListsRequest);

        /** MainListsRequest lang. */
        public lang: IRIS.Language;

        /**
         * Creates a new MainListsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MainListsRequest instance
         */
        public static create(properties?: IRIS.IMainListsRequest): IRIS.MainListsRequest;

        /**
         * Encodes the specified MainListsRequest message. Does not implicitly {@link IRIS.MainListsRequest.verify|verify} messages.
         * @param message MainListsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IMainListsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MainListsRequest message, length delimited. Does not implicitly {@link IRIS.MainListsRequest.verify|verify} messages.
         * @param message MainListsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IMainListsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MainListsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MainListsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.MainListsRequest;

        /**
         * Decodes a MainListsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MainListsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.MainListsRequest;

        /**
         * Verifies a MainListsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MainListsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MainListsRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.MainListsRequest;

        /**
         * Creates a plain object from a MainListsRequest message. Also converts values to other types if specified.
         * @param message MainListsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.MainListsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MainListsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MainListsReply. */
    interface IMainListsReply {

        /** MainListsReply mainSharesIds */
        mainSharesIds?: (number[]|null);

        /** MainListsReply mainCurIds */
        mainCurIds?: (number[]|null);

        /** MainListsReply actualCurOpers */
        actualCurOpers?: (IRIS.ICurOper[]|null);

        /** MainListsReply indicatorGroups */
        indicatorGroups?: (IRIS.IIndicatorsGroup[]|null);

        /** MainListsReply hideEmptySections */
        hideEmptySections?: (boolean|null);

        /** MainListsReply languages */
        languages?: (IRIS.Language[]|null);

        /** MainListsReply apiVersion */
        apiVersion?: (string|null);
    }

    /** Сообщение с информацией об актуальном состоянии списков инструментов и индикаторов, рекомендуемых к отображению конечному пользователю. */
    class MainListsReply implements IMainListsReply {

        /**
         * Constructs a new MainListsReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IMainListsReply);

        /** MainListsReply mainSharesIds. */
        public mainSharesIds: number[];

        /** MainListsReply mainCurIds. */
        public mainCurIds: number[];

        /** MainListsReply actualCurOpers. */
        public actualCurOpers: IRIS.ICurOper[];

        /** MainListsReply indicatorGroups. */
        public indicatorGroups: IRIS.IIndicatorsGroup[];

        /** MainListsReply hideEmptySections. */
        public hideEmptySections: boolean;

        /** MainListsReply languages. */
        public languages: IRIS.Language[];

        /** MainListsReply apiVersion. */
        public apiVersion: string;

        /**
         * Creates a new MainListsReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MainListsReply instance
         */
        public static create(properties?: IRIS.IMainListsReply): IRIS.MainListsReply;

        /**
         * Encodes the specified MainListsReply message. Does not implicitly {@link IRIS.MainListsReply.verify|verify} messages.
         * @param message MainListsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IMainListsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MainListsReply message, length delimited. Does not implicitly {@link IRIS.MainListsReply.verify|verify} messages.
         * @param message MainListsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IMainListsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MainListsReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MainListsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.MainListsReply;

        /**
         * Decodes a MainListsReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MainListsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.MainListsReply;

        /**
         * Verifies a MainListsReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MainListsReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MainListsReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.MainListsReply;

        /**
         * Creates a plain object from a MainListsReply message. Also converts values to other types if specified.
         * @param message MainListsReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.MainListsReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MainListsReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PoolInfo. */
    interface IPoolInfo {

        /** PoolInfo poolId */
        poolId?: (number|null);

        /** PoolInfo title */
        title?: (string|null);
    }

    /** Основная информация о проводимом опросе. */
    class PoolInfo implements IPoolInfo {

        /**
         * Constructs a new PoolInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IPoolInfo);

        /** PoolInfo poolId. */
        public poolId: number;

        /** PoolInfo title. */
        public title: string;

        /**
         * Creates a new PoolInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PoolInfo instance
         */
        public static create(properties?: IRIS.IPoolInfo): IRIS.PoolInfo;

        /**
         * Encodes the specified PoolInfo message. Does not implicitly {@link IRIS.PoolInfo.verify|verify} messages.
         * @param message PoolInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IPoolInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PoolInfo message, length delimited. Does not implicitly {@link IRIS.PoolInfo.verify|verify} messages.
         * @param message PoolInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IPoolInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PoolInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PoolInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.PoolInfo;

        /**
         * Decodes a PoolInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PoolInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.PoolInfo;

        /**
         * Verifies a PoolInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PoolInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PoolInfo
         */
        public static fromObject(object: { [k: string]: any }): IRIS.PoolInfo;

        /**
         * Creates a plain object from a PoolInfo message. Also converts values to other types if specified.
         * @param message PoolInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.PoolInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PoolInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Тип вопроса. */
    enum QuestionType {
        QT_ONE = 0,
        QT_MANY = 1,
        QT_FREE = 2
    }

    /** Тип ответа. */
    enum AnswerType {
        AT_FIXED = 0,
        AT_FREE = 1
    }

    /** Properties of an Answer. */
    interface IAnswer {

        /** Answer answerId */
        answerId?: (number|null);

        /** Answer type */
        type?: (IRIS.AnswerType|null);

        /** Answer text */
        text?: (string|null);
    }

    /** Ответ в вопросе. */
    class Answer implements IAnswer {

        /**
         * Constructs a new Answer.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IAnswer);

        /** Answer answerId. */
        public answerId: number;

        /** Answer type. */
        public type: IRIS.AnswerType;

        /** Answer text. */
        public text: string;

        /**
         * Creates a new Answer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Answer instance
         */
        public static create(properties?: IRIS.IAnswer): IRIS.Answer;

        /**
         * Encodes the specified Answer message. Does not implicitly {@link IRIS.Answer.verify|verify} messages.
         * @param message Answer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IAnswer, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Answer message, length delimited. Does not implicitly {@link IRIS.Answer.verify|verify} messages.
         * @param message Answer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IAnswer, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an Answer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Answer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.Answer;

        /**
         * Decodes an Answer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Answer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.Answer;

        /**
         * Verifies an Answer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an Answer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Answer
         */
        public static fromObject(object: { [k: string]: any }): IRIS.Answer;

        /**
         * Creates a plain object from an Answer message. Also converts values to other types if specified.
         * @param message Answer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.Answer, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Answer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Question. */
    interface IQuestion {

        /** Question questionId */
        questionId?: (number|null);

        /** Question type */
        type?: (IRIS.QuestionType|null);

        /** Question text */
        text?: (string|null);

        /** Question answers */
        answers?: (IRIS.IAnswer[]|null);
    }

    /** Вопрос в опросе. */
    class Question implements IQuestion {

        /**
         * Constructs a new Question.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IQuestion);

        /** Question questionId. */
        public questionId: number;

        /** Question type. */
        public type: IRIS.QuestionType;

        /** Question text. */
        public text: string;

        /** Question answers. */
        public answers: IRIS.IAnswer[];

        /**
         * Creates a new Question instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Question instance
         */
        public static create(properties?: IRIS.IQuestion): IRIS.Question;

        /**
         * Encodes the specified Question message. Does not implicitly {@link IRIS.Question.verify|verify} messages.
         * @param message Question message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IQuestion, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Question message, length delimited. Does not implicitly {@link IRIS.Question.verify|verify} messages.
         * @param message Question message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IQuestion, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Question message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Question
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.Question;

        /**
         * Decodes a Question message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Question
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.Question;

        /**
         * Verifies a Question message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Question message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Question
         */
        public static fromObject(object: { [k: string]: any }): IRIS.Question;

        /**
         * Creates a plain object from a Question message. Also converts values to other types if specified.
         * @param message Question
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.Question, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Question to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PoolsListRequest. */
    interface IPoolsListRequest {

        /** PoolsListRequest lang */
        lang?: (IRIS.Language|null);

        /** PoolsListRequest sectionId */
        sectionId?: (number|null);
    }

    /** Запрос списка активных опросов. */
    class PoolsListRequest implements IPoolsListRequest {

        /**
         * Constructs a new PoolsListRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IPoolsListRequest);

        /** PoolsListRequest lang. */
        public lang: IRIS.Language;

        /** PoolsListRequest sectionId. */
        public sectionId: number;

        /**
         * Creates a new PoolsListRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PoolsListRequest instance
         */
        public static create(properties?: IRIS.IPoolsListRequest): IRIS.PoolsListRequest;

        /**
         * Encodes the specified PoolsListRequest message. Does not implicitly {@link IRIS.PoolsListRequest.verify|verify} messages.
         * @param message PoolsListRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IPoolsListRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PoolsListRequest message, length delimited. Does not implicitly {@link IRIS.PoolsListRequest.verify|verify} messages.
         * @param message PoolsListRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IPoolsListRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PoolsListRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PoolsListRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.PoolsListRequest;

        /**
         * Decodes a PoolsListRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PoolsListRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.PoolsListRequest;

        /**
         * Verifies a PoolsListRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PoolsListRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PoolsListRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.PoolsListRequest;

        /**
         * Creates a plain object from a PoolsListRequest message. Also converts values to other types if specified.
         * @param message PoolsListRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.PoolsListRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PoolsListRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PoolsListReply. */
    interface IPoolsListReply {

        /** PoolsListReply pools */
        pools?: (IRIS.IPoolInfo[]|null);
    }

    /** Ответ со списком активных опросов. */
    class PoolsListReply implements IPoolsListReply {

        /**
         * Constructs a new PoolsListReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IPoolsListReply);

        /** PoolsListReply pools. */
        public pools: IRIS.IPoolInfo[];

        /**
         * Creates a new PoolsListReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PoolsListReply instance
         */
        public static create(properties?: IRIS.IPoolsListReply): IRIS.PoolsListReply;

        /**
         * Encodes the specified PoolsListReply message. Does not implicitly {@link IRIS.PoolsListReply.verify|verify} messages.
         * @param message PoolsListReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IPoolsListReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PoolsListReply message, length delimited. Does not implicitly {@link IRIS.PoolsListReply.verify|verify} messages.
         * @param message PoolsListReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IPoolsListReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PoolsListReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PoolsListReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.PoolsListReply;

        /**
         * Decodes a PoolsListReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PoolsListReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.PoolsListReply;

        /**
         * Verifies a PoolsListReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PoolsListReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PoolsListReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.PoolsListReply;

        /**
         * Creates a plain object from a PoolsListReply message. Also converts values to other types if specified.
         * @param message PoolsListReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.PoolsListReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PoolsListReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PoolQuestionsRequest. */
    interface IPoolQuestionsRequest {

        /** PoolQuestionsRequest poolId */
        poolId?: (number|null);

        /** PoolQuestionsRequest lang */
        lang?: (IRIS.Language|null);
    }

    /** Запрос вопросов выбранного опроса. */
    class PoolQuestionsRequest implements IPoolQuestionsRequest {

        /**
         * Constructs a new PoolQuestionsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IPoolQuestionsRequest);

        /** PoolQuestionsRequest poolId. */
        public poolId: number;

        /** PoolQuestionsRequest lang. */
        public lang: IRIS.Language;

        /**
         * Creates a new PoolQuestionsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PoolQuestionsRequest instance
         */
        public static create(properties?: IRIS.IPoolQuestionsRequest): IRIS.PoolQuestionsRequest;

        /**
         * Encodes the specified PoolQuestionsRequest message. Does not implicitly {@link IRIS.PoolQuestionsRequest.verify|verify} messages.
         * @param message PoolQuestionsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IPoolQuestionsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PoolQuestionsRequest message, length delimited. Does not implicitly {@link IRIS.PoolQuestionsRequest.verify|verify} messages.
         * @param message PoolQuestionsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IPoolQuestionsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PoolQuestionsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PoolQuestionsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.PoolQuestionsRequest;

        /**
         * Decodes a PoolQuestionsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PoolQuestionsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.PoolQuestionsRequest;

        /**
         * Verifies a PoolQuestionsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PoolQuestionsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PoolQuestionsRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.PoolQuestionsRequest;

        /**
         * Creates a plain object from a PoolQuestionsRequest message. Also converts values to other types if specified.
         * @param message PoolQuestionsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.PoolQuestionsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PoolQuestionsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PoolQuestionsReply. */
    interface IPoolQuestionsReply {

        /** PoolQuestionsReply poolId */
        poolId?: (number|null);

        /** PoolQuestionsReply description */
        description?: (string|null);

        /** PoolQuestionsReply questions */
        questions?: (IRIS.IQuestion[]|null);
    }

    /** Ответ с вопросами выбранного опроса. */
    class PoolQuestionsReply implements IPoolQuestionsReply {

        /**
         * Constructs a new PoolQuestionsReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IPoolQuestionsReply);

        /** PoolQuestionsReply poolId. */
        public poolId: number;

        /** PoolQuestionsReply description. */
        public description: string;

        /** PoolQuestionsReply questions. */
        public questions: IRIS.IQuestion[];

        /**
         * Creates a new PoolQuestionsReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PoolQuestionsReply instance
         */
        public static create(properties?: IRIS.IPoolQuestionsReply): IRIS.PoolQuestionsReply;

        /**
         * Encodes the specified PoolQuestionsReply message. Does not implicitly {@link IRIS.PoolQuestionsReply.verify|verify} messages.
         * @param message PoolQuestionsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IPoolQuestionsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PoolQuestionsReply message, length delimited. Does not implicitly {@link IRIS.PoolQuestionsReply.verify|verify} messages.
         * @param message PoolQuestionsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IPoolQuestionsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PoolQuestionsReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PoolQuestionsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.PoolQuestionsReply;

        /**
         * Decodes a PoolQuestionsReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PoolQuestionsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.PoolQuestionsReply;

        /**
         * Verifies a PoolQuestionsReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PoolQuestionsReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PoolQuestionsReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.PoolQuestionsReply;

        /**
         * Creates a plain object from a PoolQuestionsReply message. Also converts values to other types if specified.
         * @param message PoolQuestionsReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.PoolQuestionsReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PoolQuestionsReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PoolAnswersRequest. */
    interface IPoolAnswersRequest {

        /** PoolAnswersRequest poolId */
        poolId?: (number|null);

        /** PoolAnswersRequest answers */
        answers?: (IRIS.IAnswer[]|null);
    }

    /** Запрос для отправки ответов на опрос. */
    class PoolAnswersRequest implements IPoolAnswersRequest {

        /**
         * Constructs a new PoolAnswersRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IPoolAnswersRequest);

        /** PoolAnswersRequest poolId. */
        public poolId: number;

        /** PoolAnswersRequest answers. */
        public answers: IRIS.IAnswer[];

        /**
         * Creates a new PoolAnswersRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PoolAnswersRequest instance
         */
        public static create(properties?: IRIS.IPoolAnswersRequest): IRIS.PoolAnswersRequest;

        /**
         * Encodes the specified PoolAnswersRequest message. Does not implicitly {@link IRIS.PoolAnswersRequest.verify|verify} messages.
         * @param message PoolAnswersRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IPoolAnswersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PoolAnswersRequest message, length delimited. Does not implicitly {@link IRIS.PoolAnswersRequest.verify|verify} messages.
         * @param message PoolAnswersRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IPoolAnswersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PoolAnswersRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PoolAnswersRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.PoolAnswersRequest;

        /**
         * Decodes a PoolAnswersRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PoolAnswersRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.PoolAnswersRequest;

        /**
         * Verifies a PoolAnswersRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PoolAnswersRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PoolAnswersRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.PoolAnswersRequest;

        /**
         * Creates a plain object from a PoolAnswersRequest message. Also converts values to other types if specified.
         * @param message PoolAnswersRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.PoolAnswersRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PoolAnswersRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PoolAnswersReply. */
    interface IPoolAnswersReply {

        /** PoolAnswersReply poolId */
        poolId?: (number|null);

        /** PoolAnswersReply information */
        information?: (string|null);
    }

    /** Ответ на сообщение с отправленными ответами на опрос. */
    class PoolAnswersReply implements IPoolAnswersReply {

        /**
         * Constructs a new PoolAnswersReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IPoolAnswersReply);

        /** PoolAnswersReply poolId. */
        public poolId: number;

        /** PoolAnswersReply information. */
        public information: string;

        /**
         * Creates a new PoolAnswersReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PoolAnswersReply instance
         */
        public static create(properties?: IRIS.IPoolAnswersReply): IRIS.PoolAnswersReply;

        /**
         * Encodes the specified PoolAnswersReply message. Does not implicitly {@link IRIS.PoolAnswersReply.verify|verify} messages.
         * @param message PoolAnswersReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IPoolAnswersReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PoolAnswersReply message, length delimited. Does not implicitly {@link IRIS.PoolAnswersReply.verify|verify} messages.
         * @param message PoolAnswersReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IPoolAnswersReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PoolAnswersReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PoolAnswersReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.PoolAnswersReply;

        /**
         * Decodes a PoolAnswersReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PoolAnswersReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.PoolAnswersReply;

        /**
         * Verifies a PoolAnswersReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PoolAnswersReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PoolAnswersReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.PoolAnswersReply;

        /**
         * Creates a plain object from a PoolAnswersReply message. Also converts values to other types if specified.
         * @param message PoolAnswersReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.PoolAnswersReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PoolAnswersReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChangePwdRequest. */
    interface IChangePwdRequest {

        /** ChangePwdRequest newPassword */
        newPassword?: (string|null);

        /** ChangePwdRequest lang */
        lang?: (IRIS.Language|null);
    }

    /**
     * Запрос на изменение пароля пользователя.
     * После успешного выполнения запроса пользователь может продолжать работать до закрытия сессии. Следующее соединение должно создаваться уже с новым паролем.
     */
    class ChangePwdRequest implements IChangePwdRequest {

        /**
         * Constructs a new ChangePwdRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IChangePwdRequest);

        /** ChangePwdRequest newPassword. */
        public newPassword: string;

        /** ChangePwdRequest lang. */
        public lang: IRIS.Language;

        /**
         * Creates a new ChangePwdRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChangePwdRequest instance
         */
        public static create(properties?: IRIS.IChangePwdRequest): IRIS.ChangePwdRequest;

        /**
         * Encodes the specified ChangePwdRequest message. Does not implicitly {@link IRIS.ChangePwdRequest.verify|verify} messages.
         * @param message ChangePwdRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IChangePwdRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChangePwdRequest message, length delimited. Does not implicitly {@link IRIS.ChangePwdRequest.verify|verify} messages.
         * @param message ChangePwdRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IChangePwdRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChangePwdRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChangePwdRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.ChangePwdRequest;

        /**
         * Decodes a ChangePwdRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChangePwdRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.ChangePwdRequest;

        /**
         * Verifies a ChangePwdRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChangePwdRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChangePwdRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.ChangePwdRequest;

        /**
         * Creates a plain object from a ChangePwdRequest message. Also converts values to other types if specified.
         * @param message ChangePwdRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.ChangePwdRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChangePwdRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChangePwdReply. */
    interface IChangePwdReply {

        /** ChangePwdReply ok */
        ok?: (boolean|null);

        /** ChangePwdReply message */
        message?: (string|null);
    }

    /** Ответ с результатом смены пароля. */
    class ChangePwdReply implements IChangePwdReply {

        /**
         * Constructs a new ChangePwdReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IChangePwdReply);

        /** ChangePwdReply ok. */
        public ok: boolean;

        /** ChangePwdReply message. */
        public message: string;

        /**
         * Creates a new ChangePwdReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChangePwdReply instance
         */
        public static create(properties?: IRIS.IChangePwdReply): IRIS.ChangePwdReply;

        /**
         * Encodes the specified ChangePwdReply message. Does not implicitly {@link IRIS.ChangePwdReply.verify|verify} messages.
         * @param message ChangePwdReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IChangePwdReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChangePwdReply message, length delimited. Does not implicitly {@link IRIS.ChangePwdReply.verify|verify} messages.
         * @param message ChangePwdReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IChangePwdReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChangePwdReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChangePwdReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.ChangePwdReply;

        /**
         * Decodes a ChangePwdReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChangePwdReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.ChangePwdReply;

        /**
         * Verifies a ChangePwdReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChangePwdReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChangePwdReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.ChangePwdReply;

        /**
         * Creates a plain object from a ChangePwdReply message. Also converts values to other types if specified.
         * @param message ChangePwdReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.ChangePwdReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChangePwdReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Board. */
    interface IBoard {

        /** Board moexBoardsId */
        moexBoardsId?: (string|null);

        /** Board name */
        name?: (string|null);
    }

    /** Справочные данные по режимам MOEX. */
    class Board implements IBoard {

        /**
         * Constructs a new Board.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IBoard);

        /** Board moexBoardsId. */
        public moexBoardsId: string;

        /** Board name. */
        public name: string;

        /**
         * Creates a new Board instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Board instance
         */
        public static create(properties?: IRIS.IBoard): IRIS.Board;

        /**
         * Encodes the specified Board message. Does not implicitly {@link IRIS.Board.verify|verify} messages.
         * @param message Board message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IBoard, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Board message, length delimited. Does not implicitly {@link IRIS.Board.verify|verify} messages.
         * @param message Board message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IBoard, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Board message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Board
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.Board;

        /**
         * Decodes a Board message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Board
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.Board;

        /**
         * Verifies a Board message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Board message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Board
         */
        public static fromObject(object: { [k: string]: any }): IRIS.Board;

        /**
         * Creates a plain object from a Board message. Also converts values to other types if specified.
         * @param message Board
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.Board, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Board to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BoardsRequest. */
    interface IBoardsRequest {

        /** BoardsRequest moexBoardsId */
        moexBoardsId?: (string|null);
    }

    /** Запрос справочных данных по режимам MOEX. */
    class BoardsRequest implements IBoardsRequest {

        /**
         * Constructs a new BoardsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IBoardsRequest);

        /** BoardsRequest moexBoardsId. */
        public moexBoardsId: string;

        /**
         * Creates a new BoardsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BoardsRequest instance
         */
        public static create(properties?: IRIS.IBoardsRequest): IRIS.BoardsRequest;

        /**
         * Encodes the specified BoardsRequest message. Does not implicitly {@link IRIS.BoardsRequest.verify|verify} messages.
         * @param message BoardsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IBoardsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BoardsRequest message, length delimited. Does not implicitly {@link IRIS.BoardsRequest.verify|verify} messages.
         * @param message BoardsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IBoardsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BoardsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BoardsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.BoardsRequest;

        /**
         * Decodes a BoardsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BoardsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.BoardsRequest;

        /**
         * Verifies a BoardsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BoardsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BoardsRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.BoardsRequest;

        /**
         * Creates a plain object from a BoardsRequest message. Also converts values to other types if specified.
         * @param message BoardsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.BoardsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BoardsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BoardsReply. */
    interface IBoardsReply {

        /** BoardsReply boards */
        boards?: (IRIS.IBoard[]|null);
    }

    /** Ответ со списком режимов MOEX. */
    class BoardsReply implements IBoardsReply {

        /**
         * Constructs a new BoardsReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IBoardsReply);

        /** BoardsReply boards. */
        public boards: IRIS.IBoard[];

        /**
         * Creates a new BoardsReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BoardsReply instance
         */
        public static create(properties?: IRIS.IBoardsReply): IRIS.BoardsReply;

        /**
         * Encodes the specified BoardsReply message. Does not implicitly {@link IRIS.BoardsReply.verify|verify} messages.
         * @param message BoardsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IBoardsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BoardsReply message, length delimited. Does not implicitly {@link IRIS.BoardsReply.verify|verify} messages.
         * @param message BoardsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IBoardsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BoardsReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BoardsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.BoardsReply;

        /**
         * Decodes a BoardsReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BoardsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.BoardsReply;

        /**
         * Verifies a BoardsReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BoardsReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BoardsReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.BoardsReply;

        /**
         * Creates a plain object from a BoardsReply message. Also converts values to other types if specified.
         * @param message BoardsReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.BoardsReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BoardsReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ProductInfo. */
    interface IProductInfo {

        /** ProductInfo productId */
        productId?: (number|null);

        /** ProductInfo activated */
        activated?: (IRIS.IDate|null);

        /** ProductInfo deactivated */
        deactivated?: (IRIS.IDate|null);
    }

    /** Информационный продукт IRIS. */
    class ProductInfo implements IProductInfo {

        /**
         * Constructs a new ProductInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IProductInfo);

        /** ProductInfo productId. */
        public productId: number;

        /** ProductInfo activated. */
        public activated?: (IRIS.IDate|null);

        /** ProductInfo deactivated. */
        public deactivated?: (IRIS.IDate|null);

        /**
         * Creates a new ProductInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ProductInfo instance
         */
        public static create(properties?: IRIS.IProductInfo): IRIS.ProductInfo;

        /**
         * Encodes the specified ProductInfo message. Does not implicitly {@link IRIS.ProductInfo.verify|verify} messages.
         * @param message ProductInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IProductInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ProductInfo message, length delimited. Does not implicitly {@link IRIS.ProductInfo.verify|verify} messages.
         * @param message ProductInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IProductInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ProductInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ProductInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.ProductInfo;

        /**
         * Decodes a ProductInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ProductInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.ProductInfo;

        /**
         * Verifies a ProductInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ProductInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ProductInfo
         */
        public static fromObject(object: { [k: string]: any }): IRIS.ProductInfo;

        /**
         * Creates a plain object from a ProductInfo message. Also converts values to other types if specified.
         * @param message ProductInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.ProductInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ProductInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserInfo. */
    interface IUserInfo {

        /** UserInfo userId */
        userId?: (number|null);

        /** UserInfo userBlocked */
        userBlocked?: (boolean|null);

        /** UserInfo userName */
        userName?: (string|null);

        /** UserInfo fio */
        fio?: (string|null);

        /** UserInfo email */
        email?: (string|null);

        /** UserInfo clientId */
        clientId?: (number|null);

        /** UserInfo clientBlocked */
        clientBlocked?: (boolean|null);

        /** UserInfo clientName */
        clientName?: (string|null);

        /** UserInfo address */
        address?: (string|null);

        /** UserInfo tel */
        tel?: (string|null);
    }

    /** Информация о пользователе IRIS. */
    class UserInfo implements IUserInfo {

        /**
         * Constructs a new UserInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IUserInfo);

        /** UserInfo userId. */
        public userId: number;

        /** UserInfo userBlocked. */
        public userBlocked: boolean;

        /** UserInfo userName. */
        public userName: string;

        /** UserInfo fio. */
        public fio: string;

        /** UserInfo email. */
        public email: string;

        /** UserInfo clientId. */
        public clientId: number;

        /** UserInfo clientBlocked. */
        public clientBlocked: boolean;

        /** UserInfo clientName. */
        public clientName: string;

        /** UserInfo address. */
        public address: string;

        /** UserInfo tel. */
        public tel: string;

        /**
         * Creates a new UserInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserInfo instance
         */
        public static create(properties?: IRIS.IUserInfo): IRIS.UserInfo;

        /**
         * Encodes the specified UserInfo message. Does not implicitly {@link IRIS.UserInfo.verify|verify} messages.
         * @param message UserInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IUserInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserInfo message, length delimited. Does not implicitly {@link IRIS.UserInfo.verify|verify} messages.
         * @param message UserInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IUserInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.UserInfo;

        /**
         * Decodes a UserInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.UserInfo;

        /**
         * Verifies a UserInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserInfo
         */
        public static fromObject(object: { [k: string]: any }): IRIS.UserInfo;

        /**
         * Creates a plain object from a UserInfo message. Also converts values to other types if specified.
         * @param message UserInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.UserInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserInfoRequest. */
    interface IUserInfoRequest {

        /** UserInfoRequest includeProductsInfo */
        includeProductsInfo?: (boolean|null);
    }

    /** Запрос информации о пользователе IRIS. */
    class UserInfoRequest implements IUserInfoRequest {

        /**
         * Constructs a new UserInfoRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IUserInfoRequest);

        /** UserInfoRequest includeProductsInfo. */
        public includeProductsInfo: boolean;

        /**
         * Creates a new UserInfoRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserInfoRequest instance
         */
        public static create(properties?: IRIS.IUserInfoRequest): IRIS.UserInfoRequest;

        /**
         * Encodes the specified UserInfoRequest message. Does not implicitly {@link IRIS.UserInfoRequest.verify|verify} messages.
         * @param message UserInfoRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IUserInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserInfoRequest message, length delimited. Does not implicitly {@link IRIS.UserInfoRequest.verify|verify} messages.
         * @param message UserInfoRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IUserInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserInfoRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserInfoRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.UserInfoRequest;

        /**
         * Decodes a UserInfoRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserInfoRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.UserInfoRequest;

        /**
         * Verifies a UserInfoRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserInfoRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserInfoRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.UserInfoRequest;

        /**
         * Creates a plain object from a UserInfoRequest message. Also converts values to other types if specified.
         * @param message UserInfoRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.UserInfoRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserInfoRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserInfoReply. */
    interface IUserInfoReply {

        /** UserInfoReply userInfo */
        userInfo?: (IRIS.IUserInfo|null);

        /** UserInfoReply products */
        products?: (IRIS.IProductInfo[]|null);
    }

    /** Ответ с информацией о пользователе IRIS. */
    class UserInfoReply implements IUserInfoReply {

        /**
         * Constructs a new UserInfoReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IUserInfoReply);

        /** UserInfoReply userInfo. */
        public userInfo?: (IRIS.IUserInfo|null);

        /** UserInfoReply products. */
        public products: IRIS.IProductInfo[];

        /**
         * Creates a new UserInfoReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserInfoReply instance
         */
        public static create(properties?: IRIS.IUserInfoReply): IRIS.UserInfoReply;

        /**
         * Encodes the specified UserInfoReply message. Does not implicitly {@link IRIS.UserInfoReply.verify|verify} messages.
         * @param message UserInfoReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IUserInfoReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserInfoReply message, length delimited. Does not implicitly {@link IRIS.UserInfoReply.verify|verify} messages.
         * @param message UserInfoReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IUserInfoReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserInfoReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserInfoReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.UserInfoReply;

        /**
         * Decodes a UserInfoReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserInfoReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.UserInfoReply;

        /**
         * Verifies a UserInfoReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserInfoReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserInfoReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.UserInfoReply;

        /**
         * Creates a plain object from a UserInfoReply message. Also converts values to other types if specified.
         * @param message UserInfoReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.UserInfoReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserInfoReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserFeedbackRequest. */
    interface IUserFeedbackRequest {

        /** UserFeedbackRequest fio */
        fio?: (string|null);

        /** UserFeedbackRequest email */
        email?: (string|null);

        /** UserFeedbackRequest tel */
        tel?: (string|null);

        /** UserFeedbackRequest message */
        message?: (string|null);

        /** UserFeedbackRequest lang */
        lang?: (IRIS.Language|null);
    }

    /**
     * Сообщение отправляемое пользователем для обеспечения обратной связи.
     * Пример кода для формирования сообщения на языке Java:
     * <xi:include href="sources/user_feedback_request.src" />
     */
    class UserFeedbackRequest implements IUserFeedbackRequest {

        /**
         * Constructs a new UserFeedbackRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IUserFeedbackRequest);

        /** UserFeedbackRequest fio. */
        public fio: string;

        /** UserFeedbackRequest email. */
        public email: string;

        /** UserFeedbackRequest tel. */
        public tel: string;

        /** UserFeedbackRequest message. */
        public message: string;

        /** UserFeedbackRequest lang. */
        public lang: IRIS.Language;

        /**
         * Creates a new UserFeedbackRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserFeedbackRequest instance
         */
        public static create(properties?: IRIS.IUserFeedbackRequest): IRIS.UserFeedbackRequest;

        /**
         * Encodes the specified UserFeedbackRequest message. Does not implicitly {@link IRIS.UserFeedbackRequest.verify|verify} messages.
         * @param message UserFeedbackRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IUserFeedbackRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserFeedbackRequest message, length delimited. Does not implicitly {@link IRIS.UserFeedbackRequest.verify|verify} messages.
         * @param message UserFeedbackRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IUserFeedbackRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserFeedbackRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserFeedbackRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.UserFeedbackRequest;

        /**
         * Decodes a UserFeedbackRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserFeedbackRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.UserFeedbackRequest;

        /**
         * Verifies a UserFeedbackRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserFeedbackRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserFeedbackRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.UserFeedbackRequest;

        /**
         * Creates a plain object from a UserFeedbackRequest message. Also converts values to other types if specified.
         * @param message UserFeedbackRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.UserFeedbackRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserFeedbackRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserFeedbackReply. */
    interface IUserFeedbackReply {

        /** UserFeedbackReply ok */
        ok?: (boolean|null);

        /** UserFeedbackReply message */
        message?: (string|null);
    }

    /** Ответ на сообщение пользователя отправленное для обеспечения обратной связи. */
    class UserFeedbackReply implements IUserFeedbackReply {

        /**
         * Constructs a new UserFeedbackReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IUserFeedbackReply);

        /** UserFeedbackReply ok. */
        public ok: boolean;

        /** UserFeedbackReply message. */
        public message: string;

        /**
         * Creates a new UserFeedbackReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserFeedbackReply instance
         */
        public static create(properties?: IRIS.IUserFeedbackReply): IRIS.UserFeedbackReply;

        /**
         * Encodes the specified UserFeedbackReply message. Does not implicitly {@link IRIS.UserFeedbackReply.verify|verify} messages.
         * @param message UserFeedbackReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IUserFeedbackReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserFeedbackReply message, length delimited. Does not implicitly {@link IRIS.UserFeedbackReply.verify|verify} messages.
         * @param message UserFeedbackReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IUserFeedbackReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserFeedbackReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserFeedbackReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.UserFeedbackReply;

        /**
         * Decodes a UserFeedbackReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserFeedbackReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.UserFeedbackReply;

        /**
         * Verifies a UserFeedbackReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserFeedbackReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserFeedbackReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.UserFeedbackReply;

        /**
         * Creates a plain object from a UserFeedbackReply message. Also converts values to other types if specified.
         * @param message UserFeedbackReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.UserFeedbackReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserFeedbackReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurOper. */
    interface ICurOper {

        /** CurOper instrumentId */
        instrumentId?: (number|null);

        /** CurOper instrumentCode */
        instrumentCode?: (string|null);

        /** CurOper description */
        description?: (string|null);
    }

    /** Represents a CurOper. */
    class CurOper implements ICurOper {

        /**
         * Constructs a new CurOper.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurOper);

        /** CurOper instrumentId. */
        public instrumentId: number;

        /** CurOper instrumentCode. */
        public instrumentCode: string;

        /** CurOper description. */
        public description: string;

        /**
         * Creates a new CurOper instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurOper instance
         */
        public static create(properties?: IRIS.ICurOper): IRIS.CurOper;

        /**
         * Encodes the specified CurOper message. Does not implicitly {@link IRIS.CurOper.verify|verify} messages.
         * @param message CurOper message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurOper, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurOper message, length delimited. Does not implicitly {@link IRIS.CurOper.verify|verify} messages.
         * @param message CurOper message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurOper, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurOper message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurOper
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurOper;

        /**
         * Decodes a CurOper message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurOper
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurOper;

        /**
         * Verifies a CurOper message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurOper message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurOper
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurOper;

        /**
         * Creates a plain object from a CurOper message. Also converts values to other types if specified.
         * @param message CurOper
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurOper, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurOper to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an IndicatorInGroup. */
    interface IIndicatorInGroup {

        /** IndicatorInGroup typeId */
        typeId?: (number|null);

        /** IndicatorInGroup name */
        name?: (string|null);

        /** IndicatorInGroup realtime */
        realtime?: (boolean|null);
    }

    /** Represents an IndicatorInGroup. */
    class IndicatorInGroup implements IIndicatorInGroup {

        /**
         * Constructs a new IndicatorInGroup.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IIndicatorInGroup);

        /** IndicatorInGroup typeId. */
        public typeId: number;

        /** IndicatorInGroup name. */
        public name: string;

        /** IndicatorInGroup realtime. */
        public realtime: boolean;

        /**
         * Creates a new IndicatorInGroup instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IndicatorInGroup instance
         */
        public static create(properties?: IRIS.IIndicatorInGroup): IRIS.IndicatorInGroup;

        /**
         * Encodes the specified IndicatorInGroup message. Does not implicitly {@link IRIS.IndicatorInGroup.verify|verify} messages.
         * @param message IndicatorInGroup message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IIndicatorInGroup, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IndicatorInGroup message, length delimited. Does not implicitly {@link IRIS.IndicatorInGroup.verify|verify} messages.
         * @param message IndicatorInGroup message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IIndicatorInGroup, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IndicatorInGroup message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IndicatorInGroup
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.IndicatorInGroup;

        /**
         * Decodes an IndicatorInGroup message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IndicatorInGroup
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.IndicatorInGroup;

        /**
         * Verifies an IndicatorInGroup message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IndicatorInGroup message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IndicatorInGroup
         */
        public static fromObject(object: { [k: string]: any }): IRIS.IndicatorInGroup;

        /**
         * Creates a plain object from an IndicatorInGroup message. Also converts values to other types if specified.
         * @param message IndicatorInGroup
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.IndicatorInGroup, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IndicatorInGroup to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an IndicatorsGroup. */
    interface IIndicatorsGroup {

        /** IndicatorsGroup name */
        name?: (string|null);

        /** IndicatorsGroup indicators */
        indicators?: (IRIS.IIndicatorInGroup[]|null);
    }

    /** Represents an IndicatorsGroup. */
    class IndicatorsGroup implements IIndicatorsGroup {

        /**
         * Constructs a new IndicatorsGroup.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IIndicatorsGroup);

        /** IndicatorsGroup name. */
        public name: string;

        /** IndicatorsGroup indicators. */
        public indicators: IRIS.IIndicatorInGroup[];

        /**
         * Creates a new IndicatorsGroup instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IndicatorsGroup instance
         */
        public static create(properties?: IRIS.IIndicatorsGroup): IRIS.IndicatorsGroup;

        /**
         * Encodes the specified IndicatorsGroup message. Does not implicitly {@link IRIS.IndicatorsGroup.verify|verify} messages.
         * @param message IndicatorsGroup message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IIndicatorsGroup, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IndicatorsGroup message, length delimited. Does not implicitly {@link IRIS.IndicatorsGroup.verify|verify} messages.
         * @param message IndicatorsGroup message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IIndicatorsGroup, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IndicatorsGroup message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IndicatorsGroup
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.IndicatorsGroup;

        /**
         * Decodes an IndicatorsGroup message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IndicatorsGroup
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.IndicatorsGroup;

        /**
         * Verifies an IndicatorsGroup message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IndicatorsGroup message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IndicatorsGroup
         */
        public static fromObject(object: { [k: string]: any }): IRIS.IndicatorsGroup;

        /**
         * Creates a plain object from an IndicatorsGroup message. Also converts values to other types if specified.
         * @param message IndicatorsGroup
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.IndicatorsGroup, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IndicatorsGroup to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an Indicator. */
    interface IIndicator {

        /** Indicator indicatorId */
        indicatorId?: (number|null);

        /** Indicator valueTime */
        valueTime?: (IRIS.IDateTime|null);

        /** Indicator typeId */
        typeId?: (number|null);

        /** Indicator value */
        value?: (IRIS.IDecimal|null);

        /** Indicator version */
        version?: (number|Long|null);

        /** Indicator trendValue */
        trendValue?: (IRIS.IDecimal|null);

        /** Indicator trendTime */
        trendTime?: (IRIS.IDateTime|null);

        /** Indicator dayOpen */
        dayOpen?: (IRIS.IDecimal|null);

        /** Indicator dayMin */
        dayMin?: (IRIS.IDecimal|null);

        /** Indicator dayMax */
        dayMax?: (IRIS.IDecimal|null);

        /** Indicator yearMin */
        yearMin?: (IRIS.IDecimal|null);

        /** Indicator yearMax */
        yearMax?: (IRIS.IDecimal|null);

        /** Indicator min */
        min?: (IRIS.IDecimal|null);

        /** Indicator max */
        max?: (IRIS.IDecimal|null);
    }

    /** Represents an Indicator. */
    class Indicator implements IIndicator {

        /**
         * Constructs a new Indicator.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IIndicator);

        /** Indicator indicatorId. */
        public indicatorId: number;

        /** Indicator valueTime. */
        public valueTime?: (IRIS.IDateTime|null);

        /** Indicator typeId. */
        public typeId: number;

        /** Indicator value. */
        public value?: (IRIS.IDecimal|null);

        /** Indicator version. */
        public version: (number|Long);

        /** Indicator trendValue. */
        public trendValue?: (IRIS.IDecimal|null);

        /** Indicator trendTime. */
        public trendTime?: (IRIS.IDateTime|null);

        /** Indicator dayOpen. */
        public dayOpen?: (IRIS.IDecimal|null);

        /** Indicator dayMin. */
        public dayMin?: (IRIS.IDecimal|null);

        /** Indicator dayMax. */
        public dayMax?: (IRIS.IDecimal|null);

        /** Indicator yearMin. */
        public yearMin?: (IRIS.IDecimal|null);

        /** Indicator yearMax. */
        public yearMax?: (IRIS.IDecimal|null);

        /** Indicator min. */
        public min?: (IRIS.IDecimal|null);

        /** Indicator max. */
        public max?: (IRIS.IDecimal|null);

        /**
         * Creates a new Indicator instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Indicator instance
         */
        public static create(properties?: IRIS.IIndicator): IRIS.Indicator;

        /**
         * Encodes the specified Indicator message. Does not implicitly {@link IRIS.Indicator.verify|verify} messages.
         * @param message Indicator message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IIndicator, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Indicator message, length delimited. Does not implicitly {@link IRIS.Indicator.verify|verify} messages.
         * @param message Indicator message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IIndicator, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an Indicator message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Indicator
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.Indicator;

        /**
         * Decodes an Indicator message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Indicator
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.Indicator;

        /**
         * Verifies an Indicator message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an Indicator message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Indicator
         */
        public static fromObject(object: { [k: string]: any }): IRIS.Indicator;

        /**
         * Creates a plain object from an Indicator message. Also converts values to other types if specified.
         * @param message Indicator
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.Indicator, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Indicator to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** IndicatorsSortField enum. */
    enum IndicatorsSortField {
        ISF_VALUE_TIME = 0,
        ISF_TYPE = 1,
        ISF_VALUE = 2,
        ISF_VERSION = 3,
        ISF_ID = 4
    }

    /** Properties of a ShortIndicatorInfo. */
    interface IShortIndicatorInfo {

        /** ShortIndicatorInfo indicatorId */
        indicatorId?: (number|null);

        /** ShortIndicatorInfo valueTime */
        valueTime?: (IRIS.IDateTime|null);

        /** ShortIndicatorInfo typeId */
        typeId?: (number|null);

        /** ShortIndicatorInfo eventType */
        eventType?: (IRIS.EventType|null);
    }

    /** Represents a ShortIndicatorInfo. */
    class ShortIndicatorInfo implements IShortIndicatorInfo {

        /**
         * Constructs a new ShortIndicatorInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IShortIndicatorInfo);

        /** ShortIndicatorInfo indicatorId. */
        public indicatorId: number;

        /** ShortIndicatorInfo valueTime. */
        public valueTime?: (IRIS.IDateTime|null);

        /** ShortIndicatorInfo typeId. */
        public typeId: number;

        /** ShortIndicatorInfo eventType. */
        public eventType: IRIS.EventType;

        /**
         * Creates a new ShortIndicatorInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShortIndicatorInfo instance
         */
        public static create(properties?: IRIS.IShortIndicatorInfo): IRIS.ShortIndicatorInfo;

        /**
         * Encodes the specified ShortIndicatorInfo message. Does not implicitly {@link IRIS.ShortIndicatorInfo.verify|verify} messages.
         * @param message ShortIndicatorInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IShortIndicatorInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShortIndicatorInfo message, length delimited. Does not implicitly {@link IRIS.ShortIndicatorInfo.verify|verify} messages.
         * @param message ShortIndicatorInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IShortIndicatorInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShortIndicatorInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShortIndicatorInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.ShortIndicatorInfo;

        /**
         * Decodes a ShortIndicatorInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShortIndicatorInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.ShortIndicatorInfo;

        /**
         * Verifies a ShortIndicatorInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShortIndicatorInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShortIndicatorInfo
         */
        public static fromObject(object: { [k: string]: any }): IRIS.ShortIndicatorInfo;

        /**
         * Creates a plain object from a ShortIndicatorInfo message. Also converts values to other types if specified.
         * @param message ShortIndicatorInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.ShortIndicatorInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShortIndicatorInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an IndicatorsFilter. */
    interface IIndicatorsFilter {

        /** IndicatorsFilter period */
        period?: (IRIS.IDatePeriod|null);

        /** IndicatorsFilter typeIds */
        typeIds?: (number[]|null);

        /** IndicatorsFilter versionFrom */
        versionFrom?: (number|Long|null);

        /** IndicatorsFilter indicatorIds */
        indicatorIds?: (number[]|null);
    }

    /** Represents an IndicatorsFilter. */
    class IndicatorsFilter implements IIndicatorsFilter {

        /**
         * Constructs a new IndicatorsFilter.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IIndicatorsFilter);

        /** IndicatorsFilter period. */
        public period?: (IRIS.IDatePeriod|null);

        /** IndicatorsFilter typeIds. */
        public typeIds: number[];

        /** IndicatorsFilter versionFrom. */
        public versionFrom: (number|Long);

        /** IndicatorsFilter indicatorIds. */
        public indicatorIds: number[];

        /**
         * Creates a new IndicatorsFilter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IndicatorsFilter instance
         */
        public static create(properties?: IRIS.IIndicatorsFilter): IRIS.IndicatorsFilter;

        /**
         * Encodes the specified IndicatorsFilter message. Does not implicitly {@link IRIS.IndicatorsFilter.verify|verify} messages.
         * @param message IndicatorsFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IIndicatorsFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IndicatorsFilter message, length delimited. Does not implicitly {@link IRIS.IndicatorsFilter.verify|verify} messages.
         * @param message IndicatorsFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IIndicatorsFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IndicatorsFilter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IndicatorsFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.IndicatorsFilter;

        /**
         * Decodes an IndicatorsFilter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IndicatorsFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.IndicatorsFilter;

        /**
         * Verifies an IndicatorsFilter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IndicatorsFilter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IndicatorsFilter
         */
        public static fromObject(object: { [k: string]: any }): IRIS.IndicatorsFilter;

        /**
         * Creates a plain object from an IndicatorsFilter message. Also converts values to other types if specified.
         * @param message IndicatorsFilter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.IndicatorsFilter, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IndicatorsFilter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an IndicatorsSortRecord. */
    interface IIndicatorsSortRecord {

        /** IndicatorsSortRecord field */
        field?: (IRIS.IndicatorsSortField|null);

        /** IndicatorsSortRecord desc */
        desc?: (boolean|null);
    }

    /** Represents an IndicatorsSortRecord. */
    class IndicatorsSortRecord implements IIndicatorsSortRecord {

        /**
         * Constructs a new IndicatorsSortRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IIndicatorsSortRecord);

        /** IndicatorsSortRecord field. */
        public field: IRIS.IndicatorsSortField;

        /** IndicatorsSortRecord desc. */
        public desc: boolean;

        /**
         * Creates a new IndicatorsSortRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IndicatorsSortRecord instance
         */
        public static create(properties?: IRIS.IIndicatorsSortRecord): IRIS.IndicatorsSortRecord;

        /**
         * Encodes the specified IndicatorsSortRecord message. Does not implicitly {@link IRIS.IndicatorsSortRecord.verify|verify} messages.
         * @param message IndicatorsSortRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IIndicatorsSortRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IndicatorsSortRecord message, length delimited. Does not implicitly {@link IRIS.IndicatorsSortRecord.verify|verify} messages.
         * @param message IndicatorsSortRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IIndicatorsSortRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IndicatorsSortRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IndicatorsSortRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.IndicatorsSortRecord;

        /**
         * Decodes an IndicatorsSortRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IndicatorsSortRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.IndicatorsSortRecord;

        /**
         * Verifies an IndicatorsSortRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IndicatorsSortRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IndicatorsSortRecord
         */
        public static fromObject(object: { [k: string]: any }): IRIS.IndicatorsSortRecord;

        /**
         * Creates a plain object from an IndicatorsSortRecord message. Also converts values to other types if specified.
         * @param message IndicatorsSortRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.IndicatorsSortRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IndicatorsSortRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an IndicatorsCountRequest. */
    interface IIndicatorsCountRequest {

        /** IndicatorsCountRequest filter */
        filter?: (IRIS.IIndicatorsFilter|null);
    }

    /**
     * Запрос на получение информации о количестве записей значений индикаторов, подходящих под условие фильтрации.
     * <command>Примечание:</command> Возвращаемое количество учитывает не только ограничения заданные в фильтре, но и ограничения наложенные на выполняющего запрос пользователя.
     */
    class IndicatorsCountRequest implements IIndicatorsCountRequest {

        /**
         * Constructs a new IndicatorsCountRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IIndicatorsCountRequest);

        /** IndicatorsCountRequest filter. */
        public filter?: (IRIS.IIndicatorsFilter|null);

        /**
         * Creates a new IndicatorsCountRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IndicatorsCountRequest instance
         */
        public static create(properties?: IRIS.IIndicatorsCountRequest): IRIS.IndicatorsCountRequest;

        /**
         * Encodes the specified IndicatorsCountRequest message. Does not implicitly {@link IRIS.IndicatorsCountRequest.verify|verify} messages.
         * @param message IndicatorsCountRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IIndicatorsCountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IndicatorsCountRequest message, length delimited. Does not implicitly {@link IRIS.IndicatorsCountRequest.verify|verify} messages.
         * @param message IndicatorsCountRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IIndicatorsCountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IndicatorsCountRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IndicatorsCountRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.IndicatorsCountRequest;

        /**
         * Decodes an IndicatorsCountRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IndicatorsCountRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.IndicatorsCountRequest;

        /**
         * Verifies an IndicatorsCountRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IndicatorsCountRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IndicatorsCountRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.IndicatorsCountRequest;

        /**
         * Creates a plain object from an IndicatorsCountRequest message. Also converts values to other types if specified.
         * @param message IndicatorsCountRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.IndicatorsCountRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IndicatorsCountRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an IndicatorsCountReply. */
    interface IIndicatorsCountReply {

        /** IndicatorsCountReply count */
        count?: (number|null);
    }

    /** Represents an IndicatorsCountReply. */
    class IndicatorsCountReply implements IIndicatorsCountReply {

        /**
         * Constructs a new IndicatorsCountReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IIndicatorsCountReply);

        /** IndicatorsCountReply count. */
        public count: number;

        /**
         * Creates a new IndicatorsCountReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IndicatorsCountReply instance
         */
        public static create(properties?: IRIS.IIndicatorsCountReply): IRIS.IndicatorsCountReply;

        /**
         * Encodes the specified IndicatorsCountReply message. Does not implicitly {@link IRIS.IndicatorsCountReply.verify|verify} messages.
         * @param message IndicatorsCountReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IIndicatorsCountReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IndicatorsCountReply message, length delimited. Does not implicitly {@link IRIS.IndicatorsCountReply.verify|verify} messages.
         * @param message IndicatorsCountReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IIndicatorsCountReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IndicatorsCountReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IndicatorsCountReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.IndicatorsCountReply;

        /**
         * Decodes an IndicatorsCountReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IndicatorsCountReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.IndicatorsCountReply;

        /**
         * Verifies an IndicatorsCountReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IndicatorsCountReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IndicatorsCountReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.IndicatorsCountReply;

        /**
         * Creates a plain object from an IndicatorsCountReply message. Also converts values to other types if specified.
         * @param message IndicatorsCountReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.IndicatorsCountReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IndicatorsCountReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an IndicatorsRequest. */
    interface IIndicatorsRequest {

        /** IndicatorsRequest filter */
        filter?: (IRIS.IIndicatorsFilter|null);

        /** IndicatorsRequest range */
        range?: (IRIS.IRange|null);

        /** IndicatorsRequest bandle */
        bandle?: (number|null);

        /** IndicatorsRequest sorting */
        sorting?: (IRIS.IIndicatorsSortRecord[]|null);
    }

    /** Represents an IndicatorsRequest. */
    class IndicatorsRequest implements IIndicatorsRequest {

        /**
         * Constructs a new IndicatorsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IIndicatorsRequest);

        /** IndicatorsRequest filter. */
        public filter?: (IRIS.IIndicatorsFilter|null);

        /** IndicatorsRequest range. */
        public range?: (IRIS.IRange|null);

        /** IndicatorsRequest bandle. */
        public bandle?: (number|null);

        /** IndicatorsRequest sorting. */
        public sorting: IRIS.IIndicatorsSortRecord[];

        /** IndicatorsRequest records. */
        public records?: ("range"|"bandle");

        /**
         * Creates a new IndicatorsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IndicatorsRequest instance
         */
        public static create(properties?: IRIS.IIndicatorsRequest): IRIS.IndicatorsRequest;

        /**
         * Encodes the specified IndicatorsRequest message. Does not implicitly {@link IRIS.IndicatorsRequest.verify|verify} messages.
         * @param message IndicatorsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IIndicatorsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IndicatorsRequest message, length delimited. Does not implicitly {@link IRIS.IndicatorsRequest.verify|verify} messages.
         * @param message IndicatorsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IIndicatorsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IndicatorsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IndicatorsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.IndicatorsRequest;

        /**
         * Decodes an IndicatorsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IndicatorsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.IndicatorsRequest;

        /**
         * Verifies an IndicatorsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IndicatorsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IndicatorsRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.IndicatorsRequest;

        /**
         * Creates a plain object from an IndicatorsRequest message. Also converts values to other types if specified.
         * @param message IndicatorsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.IndicatorsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IndicatorsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an IndicatorsReply. */
    interface IIndicatorsReply {

        /** IndicatorsReply range */
        range?: (IRIS.IRange|null);

        /** IndicatorsReply indicators */
        indicators?: (IRIS.IIndicator[]|null);
    }

    /** Represents an IndicatorsReply. */
    class IndicatorsReply implements IIndicatorsReply {

        /**
         * Constructs a new IndicatorsReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IIndicatorsReply);

        /** IndicatorsReply range. */
        public range?: (IRIS.IRange|null);

        /** IndicatorsReply indicators. */
        public indicators: IRIS.IIndicator[];

        /**
         * Creates a new IndicatorsReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IndicatorsReply instance
         */
        public static create(properties?: IRIS.IIndicatorsReply): IRIS.IndicatorsReply;

        /**
         * Encodes the specified IndicatorsReply message. Does not implicitly {@link IRIS.IndicatorsReply.verify|verify} messages.
         * @param message IndicatorsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IIndicatorsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IndicatorsReply message, length delimited. Does not implicitly {@link IRIS.IndicatorsReply.verify|verify} messages.
         * @param message IndicatorsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IIndicatorsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IndicatorsReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IndicatorsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.IndicatorsReply;

        /**
         * Decodes an IndicatorsReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IndicatorsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.IndicatorsReply;

        /**
         * Verifies an IndicatorsReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IndicatorsReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IndicatorsReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.IndicatorsReply;

        /**
         * Creates a plain object from an IndicatorsReply message. Also converts values to other types if specified.
         * @param message IndicatorsReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.IndicatorsReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IndicatorsReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an IndicatorsUpdate. */
    interface IIndicatorsUpdate {

        /** IndicatorsUpdate indicators */
        indicators?: (IRIS.IShortIndicatorInfo[]|null);
    }

    /** Represents an IndicatorsUpdate. */
    class IndicatorsUpdate implements IIndicatorsUpdate {

        /**
         * Constructs a new IndicatorsUpdate.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IIndicatorsUpdate);

        /** IndicatorsUpdate indicators. */
        public indicators: IRIS.IShortIndicatorInfo[];

        /**
         * Creates a new IndicatorsUpdate instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IndicatorsUpdate instance
         */
        public static create(properties?: IRIS.IIndicatorsUpdate): IRIS.IndicatorsUpdate;

        /**
         * Encodes the specified IndicatorsUpdate message. Does not implicitly {@link IRIS.IndicatorsUpdate.verify|verify} messages.
         * @param message IndicatorsUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IIndicatorsUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IndicatorsUpdate message, length delimited. Does not implicitly {@link IRIS.IndicatorsUpdate.verify|verify} messages.
         * @param message IndicatorsUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IIndicatorsUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IndicatorsUpdate message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IndicatorsUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.IndicatorsUpdate;

        /**
         * Decodes an IndicatorsUpdate message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IndicatorsUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.IndicatorsUpdate;

        /**
         * Verifies an IndicatorsUpdate message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IndicatorsUpdate message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IndicatorsUpdate
         */
        public static fromObject(object: { [k: string]: any }): IRIS.IndicatorsUpdate;

        /**
         * Creates a plain object from an IndicatorsUpdate message. Also converts values to other types if specified.
         * @param message IndicatorsUpdate
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.IndicatorsUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IndicatorsUpdate to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an IndGraphRequest. */
    interface IIndGraphRequest {

        /** IndGraphRequest typeId */
        typeId?: (number|null);

        /** IndGraphRequest period */
        period?: (IRIS.ITotalsPeriod|null);

        /** IndGraphRequest needEmptyIntervals */
        needEmptyIntervals?: (boolean|null);
    }

    /** Represents an IndGraphRequest. */
    class IndGraphRequest implements IIndGraphRequest {

        /**
         * Constructs a new IndGraphRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IIndGraphRequest);

        /** IndGraphRequest typeId. */
        public typeId: number;

        /** IndGraphRequest period. */
        public period?: (IRIS.ITotalsPeriod|null);

        /** IndGraphRequest needEmptyIntervals. */
        public needEmptyIntervals: boolean;

        /**
         * Creates a new IndGraphRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IndGraphRequest instance
         */
        public static create(properties?: IRIS.IIndGraphRequest): IRIS.IndGraphRequest;

        /**
         * Encodes the specified IndGraphRequest message. Does not implicitly {@link IRIS.IndGraphRequest.verify|verify} messages.
         * @param message IndGraphRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IIndGraphRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IndGraphRequest message, length delimited. Does not implicitly {@link IRIS.IndGraphRequest.verify|verify} messages.
         * @param message IndGraphRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IIndGraphRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IndGraphRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IndGraphRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.IndGraphRequest;

        /**
         * Decodes an IndGraphRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IndGraphRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.IndGraphRequest;

        /**
         * Verifies an IndGraphRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IndGraphRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IndGraphRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.IndGraphRequest;

        /**
         * Creates a plain object from an IndGraphRequest message. Also converts values to other types if specified.
         * @param message IndGraphRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.IndGraphRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IndGraphRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an IndGraphReply. */
    interface IIndGraphReply {

        /** IndGraphReply typeId */
        typeId?: (number|null);

        /** IndGraphReply period */
        period?: (IRIS.ITotalsPeriod|null);

        /** IndGraphReply interval */
        interval?: (IRIS.GraphIntervalType|null);

        /** IndGraphReply ohlc */
        ohlc?: (IRIS.IGraphOhlc[]|null);
    }

    /** Represents an IndGraphReply. */
    class IndGraphReply implements IIndGraphReply {

        /**
         * Constructs a new IndGraphReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IIndGraphReply);

        /** IndGraphReply typeId. */
        public typeId: number;

        /** IndGraphReply period. */
        public period?: (IRIS.ITotalsPeriod|null);

        /** IndGraphReply interval. */
        public interval: IRIS.GraphIntervalType;

        /** IndGraphReply ohlc. */
        public ohlc: IRIS.IGraphOhlc[];

        /**
         * Creates a new IndGraphReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IndGraphReply instance
         */
        public static create(properties?: IRIS.IIndGraphReply): IRIS.IndGraphReply;

        /**
         * Encodes the specified IndGraphReply message. Does not implicitly {@link IRIS.IndGraphReply.verify|verify} messages.
         * @param message IndGraphReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IIndGraphReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IndGraphReply message, length delimited. Does not implicitly {@link IRIS.IndGraphReply.verify|verify} messages.
         * @param message IndGraphReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IIndGraphReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IndGraphReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IndGraphReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.IndGraphReply;

        /**
         * Decodes an IndGraphReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IndGraphReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.IndGraphReply;

        /**
         * Verifies an IndGraphReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IndGraphReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IndGraphReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.IndGraphReply;

        /**
         * Creates a plain object from an IndGraphReply message. Also converts values to other types if specified.
         * @param message IndGraphReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.IndGraphReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IndGraphReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an IndQuotesRequest. */
    interface IIndQuotesRequest {

        /** IndQuotesRequest typeIds */
        typeIds?: (number[]|null);
    }

    /** Represents an IndQuotesRequest. */
    class IndQuotesRequest implements IIndQuotesRequest {

        /**
         * Constructs a new IndQuotesRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IIndQuotesRequest);

        /** IndQuotesRequest typeIds. */
        public typeIds: number[];

        /**
         * Creates a new IndQuotesRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IndQuotesRequest instance
         */
        public static create(properties?: IRIS.IIndQuotesRequest): IRIS.IndQuotesRequest;

        /**
         * Encodes the specified IndQuotesRequest message. Does not implicitly {@link IRIS.IndQuotesRequest.verify|verify} messages.
         * @param message IndQuotesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IIndQuotesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IndQuotesRequest message, length delimited. Does not implicitly {@link IRIS.IndQuotesRequest.verify|verify} messages.
         * @param message IndQuotesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IIndQuotesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IndQuotesRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IndQuotesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.IndQuotesRequest;

        /**
         * Decodes an IndQuotesRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IndQuotesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.IndQuotesRequest;

        /**
         * Verifies an IndQuotesRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IndQuotesRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IndQuotesRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.IndQuotesRequest;

        /**
         * Creates a plain object from an IndQuotesRequest message. Also converts values to other types if specified.
         * @param message IndQuotesRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.IndQuotesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IndQuotesRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an IndQuotesReply. */
    interface IIndQuotesReply {

        /** IndQuotesReply indicators */
        indicators?: (IRIS.IIndicator[]|null);
    }

    /** Represents an IndQuotesReply. */
    class IndQuotesReply implements IIndQuotesReply {

        /**
         * Constructs a new IndQuotesReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IIndQuotesReply);

        /** IndQuotesReply indicators. */
        public indicators: IRIS.IIndicator[];

        /**
         * Creates a new IndQuotesReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IndQuotesReply instance
         */
        public static create(properties?: IRIS.IIndQuotesReply): IRIS.IndQuotesReply;

        /**
         * Encodes the specified IndQuotesReply message. Does not implicitly {@link IRIS.IndQuotesReply.verify|verify} messages.
         * @param message IndQuotesReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IIndQuotesReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IndQuotesReply message, length delimited. Does not implicitly {@link IRIS.IndQuotesReply.verify|verify} messages.
         * @param message IndQuotesReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IIndQuotesReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IndQuotesReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IndQuotesReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.IndQuotesReply;

        /**
         * Decodes an IndQuotesReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IndQuotesReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.IndQuotesReply;

        /**
         * Verifies an IndQuotesReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IndQuotesReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IndQuotesReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.IndQuotesReply;

        /**
         * Creates a plain object from an IndQuotesReply message. Also converts values to other types if specified.
         * @param message IndQuotesReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.IndQuotesReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IndQuotesReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an IndChangeRequest. */
    interface IIndChangeRequest {

        /** IndChangeRequest typeId */
        typeId?: (number|null);

        /** IndChangeRequest requestDate */
        requestDate?: (IRIS.IDate|null);
    }

    /** Represents an IndChangeRequest. */
    class IndChangeRequest implements IIndChangeRequest {

        /**
         * Constructs a new IndChangeRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IIndChangeRequest);

        /** IndChangeRequest typeId. */
        public typeId: number;

        /** IndChangeRequest requestDate. */
        public requestDate?: (IRIS.IDate|null);

        /**
         * Creates a new IndChangeRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IndChangeRequest instance
         */
        public static create(properties?: IRIS.IIndChangeRequest): IRIS.IndChangeRequest;

        /**
         * Encodes the specified IndChangeRequest message. Does not implicitly {@link IRIS.IndChangeRequest.verify|verify} messages.
         * @param message IndChangeRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IIndChangeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IndChangeRequest message, length delimited. Does not implicitly {@link IRIS.IndChangeRequest.verify|verify} messages.
         * @param message IndChangeRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IIndChangeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IndChangeRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IndChangeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.IndChangeRequest;

        /**
         * Decodes an IndChangeRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IndChangeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.IndChangeRequest;

        /**
         * Verifies an IndChangeRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IndChangeRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IndChangeRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.IndChangeRequest;

        /**
         * Creates a plain object from an IndChangeRequest message. Also converts values to other types if specified.
         * @param message IndChangeRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.IndChangeRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IndChangeRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an IndChangeReply. */
    interface IIndChangeReply {

        /** IndChangeReply typeId */
        typeId?: (number|null);

        /** IndChangeReply lastTime */
        lastTime?: (IRIS.IDateTime|null);

        /** IndChangeReply lastValue */
        lastValue?: (IRIS.IDecimal|null);

        /** IndChangeReply dayValue */
        dayValue?: (IRIS.IDecimal|null);

        /** IndChangeReply weekValue */
        weekValue?: (IRIS.IDecimal|null);

        /** IndChangeReply monthValue */
        monthValue?: (IRIS.IDecimal|null);

        /** IndChangeReply quarterValue */
        quarterValue?: (IRIS.IDecimal|null);

        /** IndChangeReply halfYearValue */
        halfYearValue?: (IRIS.IDecimal|null);

        /** IndChangeReply yearValue */
        yearValue?: (IRIS.IDecimal|null);
    }

    /** Represents an IndChangeReply. */
    class IndChangeReply implements IIndChangeReply {

        /**
         * Constructs a new IndChangeReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IIndChangeReply);

        /** IndChangeReply typeId. */
        public typeId: number;

        /** IndChangeReply lastTime. */
        public lastTime?: (IRIS.IDateTime|null);

        /** IndChangeReply lastValue. */
        public lastValue?: (IRIS.IDecimal|null);

        /** IndChangeReply dayValue. */
        public dayValue?: (IRIS.IDecimal|null);

        /** IndChangeReply weekValue. */
        public weekValue?: (IRIS.IDecimal|null);

        /** IndChangeReply monthValue. */
        public monthValue?: (IRIS.IDecimal|null);

        /** IndChangeReply quarterValue. */
        public quarterValue?: (IRIS.IDecimal|null);

        /** IndChangeReply halfYearValue. */
        public halfYearValue?: (IRIS.IDecimal|null);

        /** IndChangeReply yearValue. */
        public yearValue?: (IRIS.IDecimal|null);

        /**
         * Creates a new IndChangeReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IndChangeReply instance
         */
        public static create(properties?: IRIS.IIndChangeReply): IRIS.IndChangeReply;

        /**
         * Encodes the specified IndChangeReply message. Does not implicitly {@link IRIS.IndChangeReply.verify|verify} messages.
         * @param message IndChangeReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IIndChangeReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IndChangeReply message, length delimited. Does not implicitly {@link IRIS.IndChangeReply.verify|verify} messages.
         * @param message IndChangeReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IIndChangeReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IndChangeReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IndChangeReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.IndChangeReply;

        /**
         * Decodes an IndChangeReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IndChangeReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.IndChangeReply;

        /**
         * Verifies an IndChangeReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IndChangeReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IndChangeReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.IndChangeReply;

        /**
         * Creates a plain object from an IndChangeReply message. Also converts values to other types if specified.
         * @param message IndChangeReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.IndChangeReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IndChangeReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an IndicatorsExportRequest. */
    interface IIndicatorsExportRequest {

        /** IndicatorsExportRequest filter */
        filter?: (IRIS.IIndicatorsFilter|null);

        /** IndicatorsExportRequest sorting */
        sorting?: (IRIS.IIndicatorsSortRecord[]|null);

        /** IndicatorsExportRequest format */
        format?: (IRIS.ExportFileFormat|null);

        /** IndicatorsExportRequest lang */
        lang?: (IRIS.Language|null);
    }

    /** Represents an IndicatorsExportRequest. */
    class IndicatorsExportRequest implements IIndicatorsExportRequest {

        /**
         * Constructs a new IndicatorsExportRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IIndicatorsExportRequest);

        /** IndicatorsExportRequest filter. */
        public filter?: (IRIS.IIndicatorsFilter|null);

        /** IndicatorsExportRequest sorting. */
        public sorting: IRIS.IIndicatorsSortRecord[];

        /** IndicatorsExportRequest format. */
        public format: IRIS.ExportFileFormat;

        /** IndicatorsExportRequest lang. */
        public lang: IRIS.Language;

        /**
         * Creates a new IndicatorsExportRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IndicatorsExportRequest instance
         */
        public static create(properties?: IRIS.IIndicatorsExportRequest): IRIS.IndicatorsExportRequest;

        /**
         * Encodes the specified IndicatorsExportRequest message. Does not implicitly {@link IRIS.IndicatorsExportRequest.verify|verify} messages.
         * @param message IndicatorsExportRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IIndicatorsExportRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IndicatorsExportRequest message, length delimited. Does not implicitly {@link IRIS.IndicatorsExportRequest.verify|verify} messages.
         * @param message IndicatorsExportRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IIndicatorsExportRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IndicatorsExportRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IndicatorsExportRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.IndicatorsExportRequest;

        /**
         * Decodes an IndicatorsExportRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IndicatorsExportRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.IndicatorsExportRequest;

        /**
         * Verifies an IndicatorsExportRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IndicatorsExportRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IndicatorsExportRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.IndicatorsExportRequest;

        /**
         * Creates a plain object from an IndicatorsExportRequest message. Also converts values to other types if specified.
         * @param message IndicatorsExportRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.IndicatorsExportRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IndicatorsExportRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an IndicatorsExportReply. */
    interface IIndicatorsExportReply {

        /** IndicatorsExportReply url */
        url?: (string|null);
    }

    /** Represents an IndicatorsExportReply. */
    class IndicatorsExportReply implements IIndicatorsExportReply {

        /**
         * Constructs a new IndicatorsExportReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IIndicatorsExportReply);

        /** IndicatorsExportReply url. */
        public url: string;

        /**
         * Creates a new IndicatorsExportReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IndicatorsExportReply instance
         */
        public static create(properties?: IRIS.IIndicatorsExportReply): IRIS.IndicatorsExportReply;

        /**
         * Encodes the specified IndicatorsExportReply message. Does not implicitly {@link IRIS.IndicatorsExportReply.verify|verify} messages.
         * @param message IndicatorsExportReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IIndicatorsExportReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IndicatorsExportReply message, length delimited. Does not implicitly {@link IRIS.IndicatorsExportReply.verify|verify} messages.
         * @param message IndicatorsExportReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IIndicatorsExportReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IndicatorsExportReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IndicatorsExportReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.IndicatorsExportReply;

        /**
         * Decodes an IndicatorsExportReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IndicatorsExportReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.IndicatorsExportReply;

        /**
         * Verifies an IndicatorsExportReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IndicatorsExportReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IndicatorsExportReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.IndicatorsExportReply;

        /**
         * Creates a plain object from an IndicatorsExportReply message. Also converts values to other types if specified.
         * @param message IndicatorsExportReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.IndicatorsExportReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IndicatorsExportReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** SecType enum. */
    enum SecType {
        SHARES = 0,
        BONDS = 1,
        SBS = 2,
        UNIT = 3,
        FUTURES = 4,
        ETF = 5,
        GDR = 7
    }

    /** TradeArea enum. */
    enum TradeArea {
        KASE = 0,
        RFCA = 1
    }

    /** SecurityRecordStatus enum. */
    enum SecurityRecordStatus {
        SRS_ACTIVE = 0,
        SRS_HISTORY = 1,
        SRS_DELETED = 2
    }

    /** GovernmentSelector enum. */
    enum GovernmentSelector {
        GS_ALL = 0,
        GS_GOVERNMENT = 1,
        GS_CORPORATE = 2
    }

    /** Properties of a Security. */
    interface ISecurity {

        /** Security securityId */
        securityId?: (number|null);

        /** Security code */
        code?: (string|null);

        /** Security status */
        status?: (IRIS.SecurityRecordStatus|null);

        /** Security type */
        type?: (IRIS.SecType|null);

        /** Security government */
        government?: (boolean|null);

        /** Security instruments */
        instruments?: (number[]|null);

        /** Security version */
        version?: (number|Long|null);
    }

    /** Represents a Security. */
    class Security implements ISecurity {

        /**
         * Constructs a new Security.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ISecurity);

        /** Security securityId. */
        public securityId: number;

        /** Security code. */
        public code: string;

        /** Security status. */
        public status: IRIS.SecurityRecordStatus;

        /** Security type. */
        public type: IRIS.SecType;

        /** Security government. */
        public government: boolean;

        /** Security instruments. */
        public instruments: number[];

        /** Security version. */
        public version: (number|Long);

        /**
         * Creates a new Security instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Security instance
         */
        public static create(properties?: IRIS.ISecurity): IRIS.Security;

        /**
         * Encodes the specified Security message. Does not implicitly {@link IRIS.Security.verify|verify} messages.
         * @param message Security message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ISecurity, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Security message, length delimited. Does not implicitly {@link IRIS.Security.verify|verify} messages.
         * @param message Security message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ISecurity, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Security message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Security
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.Security;

        /**
         * Decodes a Security message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Security
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.Security;

        /**
         * Verifies a Security message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Security message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Security
         */
        public static fromObject(object: { [k: string]: any }): IRIS.Security;

        /**
         * Creates a plain object from a Security message. Also converts values to other types if specified.
         * @param message Security
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.Security, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Security to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an Instrument. */
    interface IInstrument {

        /** Instrument instrumentId */
        instrumentId?: (number|null);

        /** Instrument securityId */
        securityId?: (number|null);

        /** Instrument code */
        code?: (string|null);

        /** Instrument status */
        status?: (IRIS.SecurityRecordStatus|null);

        /** Instrument type */
        type?: (IRIS.SecType|null);

        /** Instrument tradeArea */
        tradeArea?: (IRIS.TradeArea|null);

        /** Instrument government */
        government?: (boolean|null);

        /** Instrument issuerInfo */
        issuerInfo?: (IRIS.IIssuer|null);

        /** Instrument version */
        version?: (number|Long|null);
    }

    /** Represents an Instrument. */
    class Instrument implements IInstrument {

        /**
         * Constructs a new Instrument.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IInstrument);

        /** Instrument instrumentId. */
        public instrumentId: number;

        /** Instrument securityId. */
        public securityId: number;

        /** Instrument code. */
        public code: string;

        /** Instrument status. */
        public status: IRIS.SecurityRecordStatus;

        /** Instrument type. */
        public type: IRIS.SecType;

        /** Instrument tradeArea. */
        public tradeArea: IRIS.TradeArea;

        /** Instrument government. */
        public government: boolean;

        /** Instrument issuerInfo. */
        public issuerInfo?: (IRIS.IIssuer|null);

        /** Instrument version. */
        public version: (number|Long);

        /**
         * Creates a new Instrument instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Instrument instance
         */
        public static create(properties?: IRIS.IInstrument): IRIS.Instrument;

        /**
         * Encodes the specified Instrument message. Does not implicitly {@link IRIS.Instrument.verify|verify} messages.
         * @param message Instrument message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IInstrument, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Instrument message, length delimited. Does not implicitly {@link IRIS.Instrument.verify|verify} messages.
         * @param message Instrument message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IInstrument, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an Instrument message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Instrument
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.Instrument;

        /**
         * Decodes an Instrument message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Instrument
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.Instrument;

        /**
         * Verifies an Instrument message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an Instrument message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Instrument
         */
        public static fromObject(object: { [k: string]: any }): IRIS.Instrument;

        /**
         * Creates a plain object from an Instrument message. Also converts values to other types if specified.
         * @param message Instrument
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.Instrument, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Instrument to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an InstrumentsFilter. */
    interface IInstrumentsFilter {

        /** InstrumentsFilter codes */
        codes?: (string[]|null);

        /** InstrumentsFilter isin */
        isin?: (string|null);

        /** InstrumentsFilter ids */
        ids?: (number[]|null);

        /** InstrumentsFilter status */
        status?: (IRIS.SecurityRecordStatus[]|null);

        /** InstrumentsFilter secType */
        secType?: (IRIS.SecType[]|null);

        /** InstrumentsFilter government */
        government?: (IRIS.GovernmentSelector|null);

        /** InstrumentsFilter tradeArea */
        tradeArea?: (IRIS.TradeArea|null);

        /** InstrumentsFilter issuerId */
        issuerId?: (number|null);

        /** InstrumentsFilter version */
        version?: (number|Long|null);

        /** InstrumentsFilter indexKase */
        indexKase?: (boolean|null);
    }

    /** Represents an InstrumentsFilter. */
    class InstrumentsFilter implements IInstrumentsFilter {

        /**
         * Constructs a new InstrumentsFilter.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IInstrumentsFilter);

        /** InstrumentsFilter codes. */
        public codes: string[];

        /** InstrumentsFilter isin. */
        public isin: string;

        /** InstrumentsFilter ids. */
        public ids: number[];

        /** InstrumentsFilter status. */
        public status: IRIS.SecurityRecordStatus[];

        /** InstrumentsFilter secType. */
        public secType: IRIS.SecType[];

        /** InstrumentsFilter government. */
        public government: IRIS.GovernmentSelector;

        /** InstrumentsFilter tradeArea. */
        public tradeArea: IRIS.TradeArea;

        /** InstrumentsFilter issuerId. */
        public issuerId: number;

        /** InstrumentsFilter version. */
        public version: (number|Long);

        /** InstrumentsFilter indexKase. */
        public indexKase: boolean;

        /**
         * Creates a new InstrumentsFilter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns InstrumentsFilter instance
         */
        public static create(properties?: IRIS.IInstrumentsFilter): IRIS.InstrumentsFilter;

        /**
         * Encodes the specified InstrumentsFilter message. Does not implicitly {@link IRIS.InstrumentsFilter.verify|verify} messages.
         * @param message InstrumentsFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IInstrumentsFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified InstrumentsFilter message, length delimited. Does not implicitly {@link IRIS.InstrumentsFilter.verify|verify} messages.
         * @param message InstrumentsFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IInstrumentsFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an InstrumentsFilter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns InstrumentsFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.InstrumentsFilter;

        /**
         * Decodes an InstrumentsFilter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns InstrumentsFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.InstrumentsFilter;

        /**
         * Verifies an InstrumentsFilter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an InstrumentsFilter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns InstrumentsFilter
         */
        public static fromObject(object: { [k: string]: any }): IRIS.InstrumentsFilter;

        /**
         * Creates a plain object from an InstrumentsFilter message. Also converts values to other types if specified.
         * @param message InstrumentsFilter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.InstrumentsFilter, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this InstrumentsFilter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an InstrumentsRequest. */
    interface IInstrumentsRequest {

        /** InstrumentsRequest filter */
        filter?: (IRIS.IInstrumentsFilter|null);

        /** InstrumentsRequest range */
        range?: (IRIS.IRange|null);

        /** InstrumentsRequest bandle */
        bandle?: (number|null);

        /** InstrumentsRequest includeIssuerInfo */
        includeIssuerInfo?: (boolean|null);

        /** InstrumentsRequest lang */
        lang?: (IRIS.Language|null);
    }

    /** Represents an InstrumentsRequest. */
    class InstrumentsRequest implements IInstrumentsRequest {

        /**
         * Constructs a new InstrumentsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IInstrumentsRequest);

        /** InstrumentsRequest filter. */
        public filter?: (IRIS.IInstrumentsFilter|null);

        /** InstrumentsRequest range. */
        public range?: (IRIS.IRange|null);

        /** InstrumentsRequest bandle. */
        public bandle?: (number|null);

        /** InstrumentsRequest includeIssuerInfo. */
        public includeIssuerInfo: boolean;

        /** InstrumentsRequest lang. */
        public lang: IRIS.Language;

        /** InstrumentsRequest records. */
        public records?: ("range"|"bandle");

        /**
         * Creates a new InstrumentsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns InstrumentsRequest instance
         */
        public static create(properties?: IRIS.IInstrumentsRequest): IRIS.InstrumentsRequest;

        /**
         * Encodes the specified InstrumentsRequest message. Does not implicitly {@link IRIS.InstrumentsRequest.verify|verify} messages.
         * @param message InstrumentsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IInstrumentsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified InstrumentsRequest message, length delimited. Does not implicitly {@link IRIS.InstrumentsRequest.verify|verify} messages.
         * @param message InstrumentsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IInstrumentsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an InstrumentsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns InstrumentsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.InstrumentsRequest;

        /**
         * Decodes an InstrumentsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns InstrumentsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.InstrumentsRequest;

        /**
         * Verifies an InstrumentsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an InstrumentsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns InstrumentsRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.InstrumentsRequest;

        /**
         * Creates a plain object from an InstrumentsRequest message. Also converts values to other types if specified.
         * @param message InstrumentsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.InstrumentsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this InstrumentsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an InstrumentsReply. */
    interface IInstrumentsReply {

        /** InstrumentsReply range */
        range?: (IRIS.IRange|null);

        /** InstrumentsReply instruments */
        instruments?: (IRIS.IInstrument[]|null);
    }

    /** Represents an InstrumentsReply. */
    class InstrumentsReply implements IInstrumentsReply {

        /**
         * Constructs a new InstrumentsReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IInstrumentsReply);

        /** InstrumentsReply range. */
        public range?: (IRIS.IRange|null);

        /** InstrumentsReply instruments. */
        public instruments: IRIS.IInstrument[];

        /**
         * Creates a new InstrumentsReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns InstrumentsReply instance
         */
        public static create(properties?: IRIS.IInstrumentsReply): IRIS.InstrumentsReply;

        /**
         * Encodes the specified InstrumentsReply message. Does not implicitly {@link IRIS.InstrumentsReply.verify|verify} messages.
         * @param message InstrumentsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IInstrumentsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified InstrumentsReply message, length delimited. Does not implicitly {@link IRIS.InstrumentsReply.verify|verify} messages.
         * @param message InstrumentsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IInstrumentsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an InstrumentsReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns InstrumentsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.InstrumentsReply;

        /**
         * Decodes an InstrumentsReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns InstrumentsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.InstrumentsReply;

        /**
         * Verifies an InstrumentsReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an InstrumentsReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns InstrumentsReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.InstrumentsReply;

        /**
         * Creates a plain object from an InstrumentsReply message. Also converts values to other types if specified.
         * @param message InstrumentsReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.InstrumentsReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this InstrumentsReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an InstrAttrsRequest. */
    interface IInstrAttrsRequest {

        /** InstrAttrsRequest html */
        html?: (IRIS.IHTMLAttrsParams|null);
    }

    /** Represents an InstrAttrsRequest. */
    class InstrAttrsRequest implements IInstrAttrsRequest {

        /**
         * Constructs a new InstrAttrsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IInstrAttrsRequest);

        /** InstrAttrsRequest html. */
        public html?: (IRIS.IHTMLAttrsParams|null);

        /** InstrAttrsRequest params. */
        public params?: "html";

        /**
         * Creates a new InstrAttrsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns InstrAttrsRequest instance
         */
        public static create(properties?: IRIS.IInstrAttrsRequest): IRIS.InstrAttrsRequest;

        /**
         * Encodes the specified InstrAttrsRequest message. Does not implicitly {@link IRIS.InstrAttrsRequest.verify|verify} messages.
         * @param message InstrAttrsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IInstrAttrsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified InstrAttrsRequest message, length delimited. Does not implicitly {@link IRIS.InstrAttrsRequest.verify|verify} messages.
         * @param message InstrAttrsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IInstrAttrsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an InstrAttrsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns InstrAttrsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.InstrAttrsRequest;

        /**
         * Decodes an InstrAttrsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns InstrAttrsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.InstrAttrsRequest;

        /**
         * Verifies an InstrAttrsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an InstrAttrsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns InstrAttrsRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.InstrAttrsRequest;

        /**
         * Creates a plain object from an InstrAttrsRequest message. Also converts values to other types if specified.
         * @param message InstrAttrsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.InstrAttrsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this InstrAttrsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an InstrAttrsReply. */
    interface IInstrAttrsReply {

        /** InstrAttrsReply instrumentId */
        instrumentId?: (number|null);

        /** InstrAttrsReply html */
        html?: (string|null);
    }

    /** Represents an InstrAttrsReply. */
    class InstrAttrsReply implements IInstrAttrsReply {

        /**
         * Constructs a new InstrAttrsReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IInstrAttrsReply);

        /** InstrAttrsReply instrumentId. */
        public instrumentId: number;

        /** InstrAttrsReply html. */
        public html?: (string|null);

        /** InstrAttrsReply attrs. */
        public attrs?: "html";

        /**
         * Creates a new InstrAttrsReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns InstrAttrsReply instance
         */
        public static create(properties?: IRIS.IInstrAttrsReply): IRIS.InstrAttrsReply;

        /**
         * Encodes the specified InstrAttrsReply message. Does not implicitly {@link IRIS.InstrAttrsReply.verify|verify} messages.
         * @param message InstrAttrsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IInstrAttrsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified InstrAttrsReply message, length delimited. Does not implicitly {@link IRIS.InstrAttrsReply.verify|verify} messages.
         * @param message InstrAttrsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IInstrAttrsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an InstrAttrsReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns InstrAttrsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.InstrAttrsReply;

        /**
         * Decodes an InstrAttrsReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns InstrAttrsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.InstrAttrsReply;

        /**
         * Verifies an InstrAttrsReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an InstrAttrsReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns InstrAttrsReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.InstrAttrsReply;

        /**
         * Creates a plain object from an InstrAttrsReply message. Also converts values to other types if specified.
         * @param message InstrAttrsReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.InstrAttrsReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this InstrAttrsReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SearchInstrumentsRequest. */
    interface ISearchInstrumentsRequest {

        /** SearchInstrumentsRequest searchQuery */
        searchQuery?: (string|null);

        /** SearchInstrumentsRequest shares */
        shares?: (boolean|null);

        /** SearchInstrumentsRequest bonds */
        bonds?: (boolean|null);

        /** SearchInstrumentsRequest government */
        government?: (boolean|null);

        /** SearchInstrumentsRequest includeIssuerInfo */
        includeIssuerInfo?: (boolean|null);

        /** SearchInstrumentsRequest range */
        range?: (IRIS.IRange|null);

        /** SearchInstrumentsRequest bandle */
        bandle?: (number|null);

        /** SearchInstrumentsRequest lang */
        lang?: (IRIS.Language|null);
    }

    /** Represents a SearchInstrumentsRequest. */
    class SearchInstrumentsRequest implements ISearchInstrumentsRequest {

        /**
         * Constructs a new SearchInstrumentsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ISearchInstrumentsRequest);

        /** SearchInstrumentsRequest searchQuery. */
        public searchQuery: string;

        /** SearchInstrumentsRequest shares. */
        public shares: boolean;

        /** SearchInstrumentsRequest bonds. */
        public bonds: boolean;

        /** SearchInstrumentsRequest government. */
        public government: boolean;

        /** SearchInstrumentsRequest includeIssuerInfo. */
        public includeIssuerInfo: boolean;

        /** SearchInstrumentsRequest range. */
        public range?: (IRIS.IRange|null);

        /** SearchInstrumentsRequest bandle. */
        public bandle?: (number|null);

        /** SearchInstrumentsRequest lang. */
        public lang: IRIS.Language;

        /** SearchInstrumentsRequest records. */
        public records?: ("range"|"bandle");

        /**
         * Creates a new SearchInstrumentsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SearchInstrumentsRequest instance
         */
        public static create(properties?: IRIS.ISearchInstrumentsRequest): IRIS.SearchInstrumentsRequest;

        /**
         * Encodes the specified SearchInstrumentsRequest message. Does not implicitly {@link IRIS.SearchInstrumentsRequest.verify|verify} messages.
         * @param message SearchInstrumentsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ISearchInstrumentsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SearchInstrumentsRequest message, length delimited. Does not implicitly {@link IRIS.SearchInstrumentsRequest.verify|verify} messages.
         * @param message SearchInstrumentsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ISearchInstrumentsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SearchInstrumentsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SearchInstrumentsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.SearchInstrumentsRequest;

        /**
         * Decodes a SearchInstrumentsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SearchInstrumentsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.SearchInstrumentsRequest;

        /**
         * Verifies a SearchInstrumentsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SearchInstrumentsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SearchInstrumentsRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.SearchInstrumentsRequest;

        /**
         * Creates a plain object from a SearchInstrumentsRequest message. Also converts values to other types if specified.
         * @param message SearchInstrumentsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.SearchInstrumentsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SearchInstrumentsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SearchInstrumentsReply. */
    interface ISearchInstrumentsReply {

        /** SearchInstrumentsReply range */
        range?: (IRIS.IRange|null);

        /** SearchInstrumentsReply instruments */
        instruments?: (IRIS.IInstrument[]|null);
    }

    /** Represents a SearchInstrumentsReply. */
    class SearchInstrumentsReply implements ISearchInstrumentsReply {

        /**
         * Constructs a new SearchInstrumentsReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ISearchInstrumentsReply);

        /** SearchInstrumentsReply range. */
        public range?: (IRIS.IRange|null);

        /** SearchInstrumentsReply instruments. */
        public instruments: IRIS.IInstrument[];

        /**
         * Creates a new SearchInstrumentsReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SearchInstrumentsReply instance
         */
        public static create(properties?: IRIS.ISearchInstrumentsReply): IRIS.SearchInstrumentsReply;

        /**
         * Encodes the specified SearchInstrumentsReply message. Does not implicitly {@link IRIS.SearchInstrumentsReply.verify|verify} messages.
         * @param message SearchInstrumentsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ISearchInstrumentsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SearchInstrumentsReply message, length delimited. Does not implicitly {@link IRIS.SearchInstrumentsReply.verify|verify} messages.
         * @param message SearchInstrumentsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ISearchInstrumentsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SearchInstrumentsReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SearchInstrumentsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.SearchInstrumentsReply;

        /**
         * Decodes a SearchInstrumentsReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SearchInstrumentsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.SearchInstrumentsReply;

        /**
         * Verifies a SearchInstrumentsReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SearchInstrumentsReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SearchInstrumentsReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.SearchInstrumentsReply;

        /**
         * Creates a plain object from a SearchInstrumentsReply message. Also converts values to other types if specified.
         * @param message SearchInstrumentsReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.SearchInstrumentsReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SearchInstrumentsReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** IssuerRecordStatus enum. */
    enum IssuerRecordStatus {
        IRS_ACTIVE = 0,
        IRS_HISTORY = 1
    }

    /** Properties of an Issuer. */
    interface IIssuer {

        /** Issuer issuerId */
        issuerId?: (number|null);

        /** Issuer code */
        code?: (string|null);

        /** Issuer status */
        status?: (IRIS.IssuerRecordStatus|null);

        /** Issuer name */
        name?: (string|null);

        /** Issuer instrumentIds */
        instrumentIds?: (number[]|null);

        /** Issuer version */
        version?: (number|Long|null);
    }

    /** Represents an Issuer. */
    class Issuer implements IIssuer {

        /**
         * Constructs a new Issuer.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IIssuer);

        /** Issuer issuerId. */
        public issuerId: number;

        /** Issuer code. */
        public code: string;

        /** Issuer status. */
        public status: IRIS.IssuerRecordStatus;

        /** Issuer name. */
        public name: string;

        /** Issuer instrumentIds. */
        public instrumentIds: number[];

        /** Issuer version. */
        public version: (number|Long);

        /**
         * Creates a new Issuer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Issuer instance
         */
        public static create(properties?: IRIS.IIssuer): IRIS.Issuer;

        /**
         * Encodes the specified Issuer message. Does not implicitly {@link IRIS.Issuer.verify|verify} messages.
         * @param message Issuer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IIssuer, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Issuer message, length delimited. Does not implicitly {@link IRIS.Issuer.verify|verify} messages.
         * @param message Issuer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IIssuer, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an Issuer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Issuer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.Issuer;

        /**
         * Decodes an Issuer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Issuer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.Issuer;

        /**
         * Verifies an Issuer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an Issuer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Issuer
         */
        public static fromObject(object: { [k: string]: any }): IRIS.Issuer;

        /**
         * Creates a plain object from an Issuer message. Also converts values to other types if specified.
         * @param message Issuer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.Issuer, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Issuer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an IssuersFilter. */
    interface IIssuersFilter {

        /** IssuersFilter codes */
        codes?: (string[]|null);

        /** IssuersFilter names */
        names?: (string[]|null);

        /** IssuersFilter isin */
        isin?: (string|null);

        /** IssuersFilter ids */
        ids?: (number[]|null);

        /** IssuersFilter status */
        status?: (IRIS.IssuerRecordStatus[]|null);

        /** IssuersFilter version */
        version?: (number|Long|null);
    }

    /** Represents an IssuersFilter. */
    class IssuersFilter implements IIssuersFilter {

        /**
         * Constructs a new IssuersFilter.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IIssuersFilter);

        /** IssuersFilter codes. */
        public codes: string[];

        /** IssuersFilter names. */
        public names: string[];

        /** IssuersFilter isin. */
        public isin: string;

        /** IssuersFilter ids. */
        public ids: number[];

        /** IssuersFilter status. */
        public status: IRIS.IssuerRecordStatus[];

        /** IssuersFilter version. */
        public version: (number|Long);

        /**
         * Creates a new IssuersFilter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IssuersFilter instance
         */
        public static create(properties?: IRIS.IIssuersFilter): IRIS.IssuersFilter;

        /**
         * Encodes the specified IssuersFilter message. Does not implicitly {@link IRIS.IssuersFilter.verify|verify} messages.
         * @param message IssuersFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IIssuersFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IssuersFilter message, length delimited. Does not implicitly {@link IRIS.IssuersFilter.verify|verify} messages.
         * @param message IssuersFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IIssuersFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IssuersFilter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IssuersFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.IssuersFilter;

        /**
         * Decodes an IssuersFilter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IssuersFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.IssuersFilter;

        /**
         * Verifies an IssuersFilter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IssuersFilter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IssuersFilter
         */
        public static fromObject(object: { [k: string]: any }): IRIS.IssuersFilter;

        /**
         * Creates a plain object from an IssuersFilter message. Also converts values to other types if specified.
         * @param message IssuersFilter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.IssuersFilter, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IssuersFilter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an IssuersRequest. */
    interface IIssuersRequest {

        /** IssuersRequest filter */
        filter?: (IRIS.IIssuersFilter|null);

        /** IssuersRequest range */
        range?: (IRIS.IRange|null);

        /** IssuersRequest bandle */
        bandle?: (number|null);

        /** IssuersRequest includeSecIds */
        includeSecIds?: (boolean|null);

        /** IssuersRequest lang */
        lang?: (IRIS.Language|null);
    }

    /** Represents an IssuersRequest. */
    class IssuersRequest implements IIssuersRequest {

        /**
         * Constructs a new IssuersRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IIssuersRequest);

        /** IssuersRequest filter. */
        public filter?: (IRIS.IIssuersFilter|null);

        /** IssuersRequest range. */
        public range?: (IRIS.IRange|null);

        /** IssuersRequest bandle. */
        public bandle?: (number|null);

        /** IssuersRequest includeSecIds. */
        public includeSecIds: boolean;

        /** IssuersRequest lang. */
        public lang: IRIS.Language;

        /** IssuersRequest records. */
        public records?: ("range"|"bandle");

        /**
         * Creates a new IssuersRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IssuersRequest instance
         */
        public static create(properties?: IRIS.IIssuersRequest): IRIS.IssuersRequest;

        /**
         * Encodes the specified IssuersRequest message. Does not implicitly {@link IRIS.IssuersRequest.verify|verify} messages.
         * @param message IssuersRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IIssuersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IssuersRequest message, length delimited. Does not implicitly {@link IRIS.IssuersRequest.verify|verify} messages.
         * @param message IssuersRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IIssuersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IssuersRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IssuersRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.IssuersRequest;

        /**
         * Decodes an IssuersRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IssuersRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.IssuersRequest;

        /**
         * Verifies an IssuersRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IssuersRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IssuersRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.IssuersRequest;

        /**
         * Creates a plain object from an IssuersRequest message. Also converts values to other types if specified.
         * @param message IssuersRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.IssuersRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IssuersRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an IssuersReply. */
    interface IIssuersReply {

        /** IssuersReply range */
        range?: (IRIS.IRange|null);

        /** IssuersReply issuers */
        issuers?: (IRIS.IIssuer[]|null);
    }

    /** Represents an IssuersReply. */
    class IssuersReply implements IIssuersReply {

        /**
         * Constructs a new IssuersReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IIssuersReply);

        /** IssuersReply range. */
        public range?: (IRIS.IRange|null);

        /** IssuersReply issuers. */
        public issuers: IRIS.IIssuer[];

        /**
         * Creates a new IssuersReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IssuersReply instance
         */
        public static create(properties?: IRIS.IIssuersReply): IRIS.IssuersReply;

        /**
         * Encodes the specified IssuersReply message. Does not implicitly {@link IRIS.IssuersReply.verify|verify} messages.
         * @param message IssuersReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IIssuersReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IssuersReply message, length delimited. Does not implicitly {@link IRIS.IssuersReply.verify|verify} messages.
         * @param message IssuersReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IIssuersReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IssuersReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IssuersReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.IssuersReply;

        /**
         * Decodes an IssuersReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IssuersReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.IssuersReply;

        /**
         * Verifies an IssuersReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IssuersReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IssuersReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.IssuersReply;

        /**
         * Creates a plain object from an IssuersReply message. Also converts values to other types if specified.
         * @param message IssuersReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.IssuersReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IssuersReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an IssuerAttrsRequest. */
    interface IIssuerAttrsRequest {

        /** IssuerAttrsRequest html */
        html?: (IRIS.IHTMLAttrsParams|null);
    }

    /** Represents an IssuerAttrsRequest. */
    class IssuerAttrsRequest implements IIssuerAttrsRequest {

        /**
         * Constructs a new IssuerAttrsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IIssuerAttrsRequest);

        /** IssuerAttrsRequest html. */
        public html?: (IRIS.IHTMLAttrsParams|null);

        /** IssuerAttrsRequest params. */
        public params?: "html";

        /**
         * Creates a new IssuerAttrsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IssuerAttrsRequest instance
         */
        public static create(properties?: IRIS.IIssuerAttrsRequest): IRIS.IssuerAttrsRequest;

        /**
         * Encodes the specified IssuerAttrsRequest message. Does not implicitly {@link IRIS.IssuerAttrsRequest.verify|verify} messages.
         * @param message IssuerAttrsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IIssuerAttrsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IssuerAttrsRequest message, length delimited. Does not implicitly {@link IRIS.IssuerAttrsRequest.verify|verify} messages.
         * @param message IssuerAttrsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IIssuerAttrsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IssuerAttrsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IssuerAttrsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.IssuerAttrsRequest;

        /**
         * Decodes an IssuerAttrsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IssuerAttrsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.IssuerAttrsRequest;

        /**
         * Verifies an IssuerAttrsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IssuerAttrsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IssuerAttrsRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.IssuerAttrsRequest;

        /**
         * Creates a plain object from an IssuerAttrsRequest message. Also converts values to other types if specified.
         * @param message IssuerAttrsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.IssuerAttrsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IssuerAttrsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an IssuerAttrsReply. */
    interface IIssuerAttrsReply {

        /** IssuerAttrsReply issuerId */
        issuerId?: (number|null);

        /** IssuerAttrsReply html */
        html?: (string|null);
    }

    /** Represents an IssuerAttrsReply. */
    class IssuerAttrsReply implements IIssuerAttrsReply {

        /**
         * Constructs a new IssuerAttrsReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IIssuerAttrsReply);

        /** IssuerAttrsReply issuerId. */
        public issuerId: number;

        /** IssuerAttrsReply html. */
        public html?: (string|null);

        /** IssuerAttrsReply attrs. */
        public attrs?: "html";

        /**
         * Creates a new IssuerAttrsReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IssuerAttrsReply instance
         */
        public static create(properties?: IRIS.IIssuerAttrsReply): IRIS.IssuerAttrsReply;

        /**
         * Encodes the specified IssuerAttrsReply message. Does not implicitly {@link IRIS.IssuerAttrsReply.verify|verify} messages.
         * @param message IssuerAttrsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IIssuerAttrsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IssuerAttrsReply message, length delimited. Does not implicitly {@link IRIS.IssuerAttrsReply.verify|verify} messages.
         * @param message IssuerAttrsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IIssuerAttrsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IssuerAttrsReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IssuerAttrsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.IssuerAttrsReply;

        /**
         * Decodes an IssuerAttrsReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IssuerAttrsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.IssuerAttrsReply;

        /**
         * Verifies an IssuerAttrsReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IssuerAttrsReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IssuerAttrsReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.IssuerAttrsReply;

        /**
         * Creates a plain object from an IssuerAttrsReply message. Also converts values to other types if specified.
         * @param message IssuerAttrsReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.IssuerAttrsReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IssuerAttrsReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Тип сделки. */
    enum DealType {
        TRADE = 0,
        NEGO = 1,
        OTC = 2
    }

    /** Properties of a Deal. */
    interface IDeal {

        /** Deal dealId */
        dealId?: (number|Long|null);

        /** Deal dealTime */
        dealTime?: (IRIS.IDateTime|null);

        /** Deal instrumentId */
        instrumentId?: (number|null);

        /** Deal secCode */
        secCode?: (string|null);

        /** Deal actualSin */
        actualSin?: (string|null);

        /** Deal buyerId */
        buyerId?: (number|null);

        /** Deal sellerId */
        sellerId?: (number|null);

        /** Deal price */
        price?: (IRIS.IDecimal|null);

        /** Deal priceUnit */
        priceUnit?: (string|null);

        /** Deal dirtyPrice */
        dirtyPrice?: (IRIS.IDecimal|null);

        /** Deal volume */
        volume?: (number|Long|null);

        /** Deal volKzt */
        volKzt?: (IRIS.IDecimal|null);

        /** Deal volUsd */
        volUsd?: (IRIS.IDecimal|null);

        /** Deal usdRate */
        usdRate?: (IRIS.IDecimal|null);

        /** Deal yield */
        "yield"?: (IRIS.IDecimal|null);

        /** Deal stateId */
        stateId?: (number|null);

        /** Deal dealType */
        dealType?: (IRIS.DealType|null);

        /** Deal dealTypeDesc */
        dealTypeDesc?: (string|null);

        /** Deal marketSector */
        marketSector?: (IRIS.MarketSector|null);

        /** Deal marketSectorDesc */
        marketSectorDesc?: (string|null);

        /** Deal version */
        version?: (number|Long|null);

        /** Deal board */
        board?: (string|null);

        /** Deal currenciesId */
        currenciesId?: (number|null);

        /** Deal secType */
        secType?: (IRIS.SecType|null);

        /** Deal couponInfo */
        couponInfo?: (IRIS.ICouponInfo|null);

        /** Deal priceType */
        priceType?: (IRIS.PriceType|null);
    }

    /** Represents a Deal. */
    class Deal implements IDeal {

        /**
         * Constructs a new Deal.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IDeal);

        /** Deal dealId. */
        public dealId: (number|Long);

        /** Deal dealTime. */
        public dealTime?: (IRIS.IDateTime|null);

        /** Deal instrumentId. */
        public instrumentId: number;

        /** Deal secCode. */
        public secCode: string;

        /** Deal actualSin. */
        public actualSin: string;

        /** Deal buyerId. */
        public buyerId: number;

        /** Deal sellerId. */
        public sellerId: number;

        /** Deal price. */
        public price?: (IRIS.IDecimal|null);

        /** Deal priceUnit. */
        public priceUnit: string;

        /** Deal dirtyPrice. */
        public dirtyPrice?: (IRIS.IDecimal|null);

        /** Deal volume. */
        public volume: (number|Long);

        /** Deal volKzt. */
        public volKzt?: (IRIS.IDecimal|null);

        /** Deal volUsd. */
        public volUsd?: (IRIS.IDecimal|null);

        /** Deal usdRate. */
        public usdRate?: (IRIS.IDecimal|null);

        /** Deal yield. */
        public yield?: (IRIS.IDecimal|null);

        /** Deal stateId. */
        public stateId: number;

        /** Deal dealType. */
        public dealType: IRIS.DealType;

        /** Deal dealTypeDesc. */
        public dealTypeDesc: string;

        /** Deal marketSector. */
        public marketSector: IRIS.MarketSector;

        /** Deal marketSectorDesc. */
        public marketSectorDesc: string;

        /** Deal version. */
        public version: (number|Long);

        /** Deal board. */
        public board: string;

        /** Deal currenciesId. */
        public currenciesId: number;

        /** Deal secType. */
        public secType: IRIS.SecType;

        /** Deal couponInfo. */
        public couponInfo?: (IRIS.ICouponInfo|null);

        /** Deal priceType. */
        public priceType: IRIS.PriceType;

        /**
         * Creates a new Deal instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Deal instance
         */
        public static create(properties?: IRIS.IDeal): IRIS.Deal;

        /**
         * Encodes the specified Deal message. Does not implicitly {@link IRIS.Deal.verify|verify} messages.
         * @param message Deal message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IDeal, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Deal message, length delimited. Does not implicitly {@link IRIS.Deal.verify|verify} messages.
         * @param message Deal message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IDeal, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Deal message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Deal
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.Deal;

        /**
         * Decodes a Deal message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Deal
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.Deal;

        /**
         * Verifies a Deal message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Deal message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Deal
         */
        public static fromObject(object: { [k: string]: any }): IRIS.Deal;

        /**
         * Creates a plain object from a Deal message. Also converts values to other types if specified.
         * @param message Deal
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.Deal, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Deal to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** DealsSortField enum. */
    enum DealsSortField {
        DSF_DEAL_TIME = 0,
        DSF_INSTRUMENT = 1,
        DSF_PRICE = 2,
        DSF_DIRTY_PRICE = 3,
        DSF_VOLUME = 4,
        DSF_VOL_KZT = 5,
        DSF_YIELD = 6,
        DSF_VERSION = 7,
        DSF_ID = 8,
        DSF_EXTID = 9
    }

    /** Properties of a ShortDealInfo. */
    interface IShortDealInfo {

        /** ShortDealInfo dealId */
        dealId?: (number|Long|null);

        /** ShortDealInfo dealTime */
        dealTime?: (IRIS.IDateTime|null);

        /** ShortDealInfo eventType */
        eventType?: (IRIS.EventType|null);

        /** ShortDealInfo secType */
        secType?: (IRIS.SecType|null);
    }

    /** Represents a ShortDealInfo. */
    class ShortDealInfo implements IShortDealInfo {

        /**
         * Constructs a new ShortDealInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IShortDealInfo);

        /** ShortDealInfo dealId. */
        public dealId: (number|Long);

        /** ShortDealInfo dealTime. */
        public dealTime?: (IRIS.IDateTime|null);

        /** ShortDealInfo eventType. */
        public eventType: IRIS.EventType;

        /** ShortDealInfo secType. */
        public secType: IRIS.SecType;

        /**
         * Creates a new ShortDealInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShortDealInfo instance
         */
        public static create(properties?: IRIS.IShortDealInfo): IRIS.ShortDealInfo;

        /**
         * Encodes the specified ShortDealInfo message. Does not implicitly {@link IRIS.ShortDealInfo.verify|verify} messages.
         * @param message ShortDealInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IShortDealInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShortDealInfo message, length delimited. Does not implicitly {@link IRIS.ShortDealInfo.verify|verify} messages.
         * @param message ShortDealInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IShortDealInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShortDealInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShortDealInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.ShortDealInfo;

        /**
         * Decodes a ShortDealInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShortDealInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.ShortDealInfo;

        /**
         * Verifies a ShortDealInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShortDealInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShortDealInfo
         */
        public static fromObject(object: { [k: string]: any }): IRIS.ShortDealInfo;

        /**
         * Creates a plain object from a ShortDealInfo message. Also converts values to other types if specified.
         * @param message ShortDealInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.ShortDealInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShortDealInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DealsBaseFilter. */
    interface IDealsBaseFilter {

        /** DealsBaseFilter instrumentsFilter */
        instrumentsFilter?: (IRIS.IInstrumentsFilter|null);

        /** DealsBaseFilter dealType */
        dealType?: (IRIS.DealType[]|null);

        /** DealsBaseFilter marketSector */
        marketSector?: (IRIS.MarketSector[]|null);

        /** DealsBaseFilter versionFrom */
        versionFrom?: (number|Long|null);

        /** DealsBaseFilter dealsIds */
        dealsIds?: ((number|Long)[]|null);

        /** DealsBaseFilter confirmed */
        confirmed?: (boolean|null);
    }

    /** Represents a DealsBaseFilter. */
    class DealsBaseFilter implements IDealsBaseFilter {

        /**
         * Constructs a new DealsBaseFilter.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IDealsBaseFilter);

        /** DealsBaseFilter instrumentsFilter. */
        public instrumentsFilter?: (IRIS.IInstrumentsFilter|null);

        /** DealsBaseFilter dealType. */
        public dealType: IRIS.DealType[];

        /** DealsBaseFilter marketSector. */
        public marketSector: IRIS.MarketSector[];

        /** DealsBaseFilter versionFrom. */
        public versionFrom: (number|Long);

        /** DealsBaseFilter dealsIds. */
        public dealsIds: (number|Long)[];

        /** DealsBaseFilter confirmed. */
        public confirmed: boolean;

        /**
         * Creates a new DealsBaseFilter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DealsBaseFilter instance
         */
        public static create(properties?: IRIS.IDealsBaseFilter): IRIS.DealsBaseFilter;

        /**
         * Encodes the specified DealsBaseFilter message. Does not implicitly {@link IRIS.DealsBaseFilter.verify|verify} messages.
         * @param message DealsBaseFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IDealsBaseFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DealsBaseFilter message, length delimited. Does not implicitly {@link IRIS.DealsBaseFilter.verify|verify} messages.
         * @param message DealsBaseFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IDealsBaseFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DealsBaseFilter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DealsBaseFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.DealsBaseFilter;

        /**
         * Decodes a DealsBaseFilter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DealsBaseFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.DealsBaseFilter;

        /**
         * Verifies a DealsBaseFilter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DealsBaseFilter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DealsBaseFilter
         */
        public static fromObject(object: { [k: string]: any }): IRIS.DealsBaseFilter;

        /**
         * Creates a plain object from a DealsBaseFilter message. Also converts values to other types if specified.
         * @param message DealsBaseFilter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.DealsBaseFilter, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DealsBaseFilter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DealsFilter. */
    interface IDealsFilter {

        /** DealsFilter period */
        period?: (IRIS.IDatePeriod|null);

        /** DealsFilter dealsFilter */
        dealsFilter?: (IRIS.IDealsBaseFilter|null);
    }

    /** Represents a DealsFilter. */
    class DealsFilter implements IDealsFilter {

        /**
         * Constructs a new DealsFilter.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IDealsFilter);

        /** DealsFilter period. */
        public period?: (IRIS.IDatePeriod|null);

        /** DealsFilter dealsFilter. */
        public dealsFilter?: (IRIS.IDealsBaseFilter|null);

        /**
         * Creates a new DealsFilter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DealsFilter instance
         */
        public static create(properties?: IRIS.IDealsFilter): IRIS.DealsFilter;

        /**
         * Encodes the specified DealsFilter message. Does not implicitly {@link IRIS.DealsFilter.verify|verify} messages.
         * @param message DealsFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IDealsFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DealsFilter message, length delimited. Does not implicitly {@link IRIS.DealsFilter.verify|verify} messages.
         * @param message DealsFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IDealsFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DealsFilter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DealsFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.DealsFilter;

        /**
         * Decodes a DealsFilter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DealsFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.DealsFilter;

        /**
         * Verifies a DealsFilter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DealsFilter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DealsFilter
         */
        public static fromObject(object: { [k: string]: any }): IRIS.DealsFilter;

        /**
         * Creates a plain object from a DealsFilter message. Also converts values to other types if specified.
         * @param message DealsFilter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.DealsFilter, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DealsFilter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DealsSortRecord. */
    interface IDealsSortRecord {

        /** DealsSortRecord field */
        field?: (IRIS.DealsSortField|null);

        /** DealsSortRecord desc */
        desc?: (boolean|null);
    }

    /** Represents a DealsSortRecord. */
    class DealsSortRecord implements IDealsSortRecord {

        /**
         * Constructs a new DealsSortRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IDealsSortRecord);

        /** DealsSortRecord field. */
        public field: IRIS.DealsSortField;

        /** DealsSortRecord desc. */
        public desc: boolean;

        /**
         * Creates a new DealsSortRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DealsSortRecord instance
         */
        public static create(properties?: IRIS.IDealsSortRecord): IRIS.DealsSortRecord;

        /**
         * Encodes the specified DealsSortRecord message. Does not implicitly {@link IRIS.DealsSortRecord.verify|verify} messages.
         * @param message DealsSortRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IDealsSortRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DealsSortRecord message, length delimited. Does not implicitly {@link IRIS.DealsSortRecord.verify|verify} messages.
         * @param message DealsSortRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IDealsSortRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DealsSortRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DealsSortRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.DealsSortRecord;

        /**
         * Decodes a DealsSortRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DealsSortRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.DealsSortRecord;

        /**
         * Verifies a DealsSortRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DealsSortRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DealsSortRecord
         */
        public static fromObject(object: { [k: string]: any }): IRIS.DealsSortRecord;

        /**
         * Creates a plain object from a DealsSortRecord message. Also converts values to other types if specified.
         * @param message DealsSortRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.DealsSortRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DealsSortRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DealsCountRequest. */
    interface IDealsCountRequest {

        /** DealsCountRequest filter */
        filter?: (IRIS.IDealsFilter|null);
    }

    /**
     * Запрос на получение информации о количестве сделок подходящих под условия фильтрации.
     * Примечание: Возвращаемое количество учитывает не только ограничения заданные в фильтре, но и ограничения наложенные на выполняющего запрос пользователя.
     */
    class DealsCountRequest implements IDealsCountRequest {

        /**
         * Constructs a new DealsCountRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IDealsCountRequest);

        /** DealsCountRequest filter. */
        public filter?: (IRIS.IDealsFilter|null);

        /**
         * Creates a new DealsCountRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DealsCountRequest instance
         */
        public static create(properties?: IRIS.IDealsCountRequest): IRIS.DealsCountRequest;

        /**
         * Encodes the specified DealsCountRequest message. Does not implicitly {@link IRIS.DealsCountRequest.verify|verify} messages.
         * @param message DealsCountRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IDealsCountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DealsCountRequest message, length delimited. Does not implicitly {@link IRIS.DealsCountRequest.verify|verify} messages.
         * @param message DealsCountRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IDealsCountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DealsCountRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DealsCountRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.DealsCountRequest;

        /**
         * Decodes a DealsCountRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DealsCountRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.DealsCountRequest;

        /**
         * Verifies a DealsCountRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DealsCountRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DealsCountRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.DealsCountRequest;

        /**
         * Creates a plain object from a DealsCountRequest message. Also converts values to other types if specified.
         * @param message DealsCountRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.DealsCountRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DealsCountRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DealsCountReply. */
    interface IDealsCountReply {

        /** DealsCountReply count */
        count?: (number|null);
    }

    /** Represents a DealsCountReply. */
    class DealsCountReply implements IDealsCountReply {

        /**
         * Constructs a new DealsCountReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IDealsCountReply);

        /** DealsCountReply count. */
        public count: number;

        /**
         * Creates a new DealsCountReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DealsCountReply instance
         */
        public static create(properties?: IRIS.IDealsCountReply): IRIS.DealsCountReply;

        /**
         * Encodes the specified DealsCountReply message. Does not implicitly {@link IRIS.DealsCountReply.verify|verify} messages.
         * @param message DealsCountReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IDealsCountReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DealsCountReply message, length delimited. Does not implicitly {@link IRIS.DealsCountReply.verify|verify} messages.
         * @param message DealsCountReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IDealsCountReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DealsCountReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DealsCountReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.DealsCountReply;

        /**
         * Decodes a DealsCountReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DealsCountReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.DealsCountReply;

        /**
         * Verifies a DealsCountReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DealsCountReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DealsCountReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.DealsCountReply;

        /**
         * Creates a plain object from a DealsCountReply message. Also converts values to other types if specified.
         * @param message DealsCountReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.DealsCountReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DealsCountReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DealsRequest. */
    interface IDealsRequest {

        /** DealsRequest filter */
        filter?: (IRIS.IDealsFilter|null);

        /** DealsRequest range */
        range?: (IRIS.IRange|null);

        /** DealsRequest bandle */
        bandle?: (number|null);

        /** DealsRequest sorting */
        sorting?: (IRIS.IDealsSortRecord[]|null);
    }

    /** Represents a DealsRequest. */
    class DealsRequest implements IDealsRequest {

        /**
         * Constructs a new DealsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IDealsRequest);

        /** DealsRequest filter. */
        public filter?: (IRIS.IDealsFilter|null);

        /** DealsRequest range. */
        public range?: (IRIS.IRange|null);

        /** DealsRequest bandle. */
        public bandle?: (number|null);

        /** DealsRequest sorting. */
        public sorting: IRIS.IDealsSortRecord[];

        /** DealsRequest records. */
        public records?: ("range"|"bandle");

        /**
         * Creates a new DealsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DealsRequest instance
         */
        public static create(properties?: IRIS.IDealsRequest): IRIS.DealsRequest;

        /**
         * Encodes the specified DealsRequest message. Does not implicitly {@link IRIS.DealsRequest.verify|verify} messages.
         * @param message DealsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IDealsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DealsRequest message, length delimited. Does not implicitly {@link IRIS.DealsRequest.verify|verify} messages.
         * @param message DealsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IDealsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DealsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DealsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.DealsRequest;

        /**
         * Decodes a DealsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DealsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.DealsRequest;

        /**
         * Verifies a DealsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DealsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DealsRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.DealsRequest;

        /**
         * Creates a plain object from a DealsRequest message. Also converts values to other types if specified.
         * @param message DealsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.DealsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DealsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DealsReply. */
    interface IDealsReply {

        /** DealsReply range */
        range?: (IRIS.IRange|null);

        /** DealsReply deals */
        deals?: (IRIS.IDeal[]|null);
    }

    /** Represents a DealsReply. */
    class DealsReply implements IDealsReply {

        /**
         * Constructs a new DealsReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IDealsReply);

        /** DealsReply range. */
        public range?: (IRIS.IRange|null);

        /** DealsReply deals. */
        public deals: IRIS.IDeal[];

        /**
         * Creates a new DealsReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DealsReply instance
         */
        public static create(properties?: IRIS.IDealsReply): IRIS.DealsReply;

        /**
         * Encodes the specified DealsReply message. Does not implicitly {@link IRIS.DealsReply.verify|verify} messages.
         * @param message DealsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IDealsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DealsReply message, length delimited. Does not implicitly {@link IRIS.DealsReply.verify|verify} messages.
         * @param message DealsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IDealsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DealsReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DealsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.DealsReply;

        /**
         * Decodes a DealsReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DealsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.DealsReply;

        /**
         * Verifies a DealsReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DealsReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DealsReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.DealsReply;

        /**
         * Creates a plain object from a DealsReply message. Also converts values to other types if specified.
         * @param message DealsReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.DealsReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DealsReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DealsExportRequest. */
    interface IDealsExportRequest {

        /** DealsExportRequest filter */
        filter?: (IRIS.IDealsFilter|null);

        /** DealsExportRequest sorting */
        sorting?: (IRIS.IDealsSortRecord[]|null);

        /** DealsExportRequest format */
        format?: (IRIS.ExportFileFormat|null);

        /** DealsExportRequest lang */
        lang?: (IRIS.Language|null);
    }

    /** Represents a DealsExportRequest. */
    class DealsExportRequest implements IDealsExportRequest {

        /**
         * Constructs a new DealsExportRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IDealsExportRequest);

        /** DealsExportRequest filter. */
        public filter?: (IRIS.IDealsFilter|null);

        /** DealsExportRequest sorting. */
        public sorting: IRIS.IDealsSortRecord[];

        /** DealsExportRequest format. */
        public format: IRIS.ExportFileFormat;

        /** DealsExportRequest lang. */
        public lang: IRIS.Language;

        /**
         * Creates a new DealsExportRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DealsExportRequest instance
         */
        public static create(properties?: IRIS.IDealsExportRequest): IRIS.DealsExportRequest;

        /**
         * Encodes the specified DealsExportRequest message. Does not implicitly {@link IRIS.DealsExportRequest.verify|verify} messages.
         * @param message DealsExportRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IDealsExportRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DealsExportRequest message, length delimited. Does not implicitly {@link IRIS.DealsExportRequest.verify|verify} messages.
         * @param message DealsExportRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IDealsExportRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DealsExportRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DealsExportRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.DealsExportRequest;

        /**
         * Decodes a DealsExportRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DealsExportRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.DealsExportRequest;

        /**
         * Verifies a DealsExportRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DealsExportRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DealsExportRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.DealsExportRequest;

        /**
         * Creates a plain object from a DealsExportRequest message. Also converts values to other types if specified.
         * @param message DealsExportRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.DealsExportRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DealsExportRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DealsExportReply. */
    interface IDealsExportReply {

        /** DealsExportReply url */
        url?: (string|null);
    }

    /** Represents a DealsExportReply. */
    class DealsExportReply implements IDealsExportReply {

        /**
         * Constructs a new DealsExportReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IDealsExportReply);

        /** DealsExportReply url. */
        public url: string;

        /**
         * Creates a new DealsExportReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DealsExportReply instance
         */
        public static create(properties?: IRIS.IDealsExportReply): IRIS.DealsExportReply;

        /**
         * Encodes the specified DealsExportReply message. Does not implicitly {@link IRIS.DealsExportReply.verify|verify} messages.
         * @param message DealsExportReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IDealsExportReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DealsExportReply message, length delimited. Does not implicitly {@link IRIS.DealsExportReply.verify|verify} messages.
         * @param message DealsExportReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IDealsExportReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DealsExportReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DealsExportReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.DealsExportReply;

        /**
         * Decodes a DealsExportReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DealsExportReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.DealsExportReply;

        /**
         * Verifies a DealsExportReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DealsExportReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DealsExportReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.DealsExportReply;

        /**
         * Creates a plain object from a DealsExportReply message. Also converts values to other types if specified.
         * @param message DealsExportReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.DealsExportReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DealsExportReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DealsUpdate. */
    interface IDealsUpdate {

        /** DealsUpdate deals */
        deals?: (IRIS.IShortDealInfo[]|null);
    }

    /** Represents a DealsUpdate. */
    class DealsUpdate implements IDealsUpdate {

        /**
         * Constructs a new DealsUpdate.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IDealsUpdate);

        /** DealsUpdate deals. */
        public deals: IRIS.IShortDealInfo[];

        /**
         * Creates a new DealsUpdate instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DealsUpdate instance
         */
        public static create(properties?: IRIS.IDealsUpdate): IRIS.DealsUpdate;

        /**
         * Encodes the specified DealsUpdate message. Does not implicitly {@link IRIS.DealsUpdate.verify|verify} messages.
         * @param message DealsUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IDealsUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DealsUpdate message, length delimited. Does not implicitly {@link IRIS.DealsUpdate.verify|verify} messages.
         * @param message DealsUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IDealsUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DealsUpdate message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DealsUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.DealsUpdate;

        /**
         * Decodes a DealsUpdate message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DealsUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.DealsUpdate;

        /**
         * Verifies a DealsUpdate message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DealsUpdate message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DealsUpdate
         */
        public static fromObject(object: { [k: string]: any }): IRIS.DealsUpdate;

        /**
         * Creates a plain object from a DealsUpdate message. Also converts values to other types if specified.
         * @param message DealsUpdate
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.DealsUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DealsUpdate to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** OrderType enum. */
    enum OrderType {
        LIMIT = 0,
        MARKET = 1,
        NEGO_ORDER = 2
    }

    /** Properties of an Order. */
    interface IOrder {

        /** Order ordersId */
        ordersId?: (number|Long|null);

        /** Order orderTime */
        orderTime?: (IRIS.IDateTime|null);

        /** Order deltime */
        deltime?: (IRIS.IDateTime|null);

        /** Order direction */
        direction?: (IRIS.OrderDirection|null);

        /** Order status */
        status?: (IRIS.OrderStatus|null);

        /** Order type */
        type?: (IRIS.OrderType|null);

        /** Order instrumentId */
        instrumentId?: (number|null);

        /** Order instrumentCode */
        instrumentCode?: (string|null);

        /** Order actualSin */
        actualSin?: (string|null);

        /** Order currenciesId */
        currenciesId?: (number|null);

        /** Order price */
        price?: (IRIS.IDecimal|null);

        /** Order dirtyPrice */
        dirtyPrice?: (IRIS.IDecimal|null);

        /** Order yield */
        "yield"?: (IRIS.IDecimal|null);

        /** Order volume */
        volume?: (number|Long|null);

        /** Order volrest */
        volrest?: (number|Long|null);

        /** Order marketSector */
        marketSector?: (IRIS.MarketSector|null);

        /** Order marketSectorDesc */
        marketSectorDesc?: (string|null);

        /** Order version */
        version?: (number|Long|null);

        /** Order board */
        board?: (string|null);

        /** Order volKzt */
        volKzt?: (IRIS.IDecimal|null);

        /** Order volUsd */
        volUsd?: (IRIS.IDecimal|null);

        /** Order secType */
        secType?: (IRIS.SecType|null);

        /** Order couponInfo */
        couponInfo?: (IRIS.ICouponInfo|null);

        /** Order priceType */
        priceType?: (IRIS.PriceType|null);
    }

    /** Represents an Order. */
    class Order implements IOrder {

        /**
         * Constructs a new Order.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IOrder);

        /** Order ordersId. */
        public ordersId: (number|Long);

        /** Order orderTime. */
        public orderTime?: (IRIS.IDateTime|null);

        /** Order deltime. */
        public deltime?: (IRIS.IDateTime|null);

        /** Order direction. */
        public direction: IRIS.OrderDirection;

        /** Order status. */
        public status: IRIS.OrderStatus;

        /** Order type. */
        public type: IRIS.OrderType;

        /** Order instrumentId. */
        public instrumentId: number;

        /** Order instrumentCode. */
        public instrumentCode: string;

        /** Order actualSin. */
        public actualSin: string;

        /** Order currenciesId. */
        public currenciesId: number;

        /** Order price. */
        public price?: (IRIS.IDecimal|null);

        /** Order dirtyPrice. */
        public dirtyPrice?: (IRIS.IDecimal|null);

        /** Order yield. */
        public yield?: (IRIS.IDecimal|null);

        /** Order volume. */
        public volume: (number|Long);

        /** Order volrest. */
        public volrest: (number|Long);

        /** Order marketSector. */
        public marketSector: IRIS.MarketSector;

        /** Order marketSectorDesc. */
        public marketSectorDesc: string;

        /** Order version. */
        public version: (number|Long);

        /** Order board. */
        public board: string;

        /** Order volKzt. */
        public volKzt?: (IRIS.IDecimal|null);

        /** Order volUsd. */
        public volUsd?: (IRIS.IDecimal|null);

        /** Order secType. */
        public secType: IRIS.SecType;

        /** Order couponInfo. */
        public couponInfo?: (IRIS.ICouponInfo|null);

        /** Order priceType. */
        public priceType: IRIS.PriceType;

        /**
         * Creates a new Order instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Order instance
         */
        public static create(properties?: IRIS.IOrder): IRIS.Order;

        /**
         * Encodes the specified Order message. Does not implicitly {@link IRIS.Order.verify|verify} messages.
         * @param message Order message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IOrder, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Order message, length delimited. Does not implicitly {@link IRIS.Order.verify|verify} messages.
         * @param message Order message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IOrder, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an Order message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Order
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.Order;

        /**
         * Decodes an Order message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Order
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.Order;

        /**
         * Verifies an Order message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an Order message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Order
         */
        public static fromObject(object: { [k: string]: any }): IRIS.Order;

        /**
         * Creates a plain object from an Order message. Also converts values to other types if specified.
         * @param message Order
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.Order, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Order to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** OrdersSortField enum. */
    enum OrdersSortField {
        OSF_ORDER_TIME = 0,
        OSF_INSTRUMENT = 1,
        OSF_PRICE = 2,
        OSF_DIRTY_PRICE = 3,
        OSF_VOLUME = 4,
        OSF_YIELD = 5,
        OSF_VERSION = 6,
        OSF_ID = 7,
        OSF_EXTID = 8
    }

    /** Properties of a ShortOrderInfo. */
    interface IShortOrderInfo {

        /** ShortOrderInfo orderId */
        orderId?: (number|Long|null);

        /** ShortOrderInfo orderTime */
        orderTime?: (IRIS.IDateTime|null);

        /** ShortOrderInfo eventType */
        eventType?: (IRIS.EventType|null);

        /** ShortOrderInfo secType */
        secType?: (IRIS.SecType|null);
    }

    /** Represents a ShortOrderInfo. */
    class ShortOrderInfo implements IShortOrderInfo {

        /**
         * Constructs a new ShortOrderInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IShortOrderInfo);

        /** ShortOrderInfo orderId. */
        public orderId: (number|Long);

        /** ShortOrderInfo orderTime. */
        public orderTime?: (IRIS.IDateTime|null);

        /** ShortOrderInfo eventType. */
        public eventType: IRIS.EventType;

        /** ShortOrderInfo secType. */
        public secType: IRIS.SecType;

        /**
         * Creates a new ShortOrderInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShortOrderInfo instance
         */
        public static create(properties?: IRIS.IShortOrderInfo): IRIS.ShortOrderInfo;

        /**
         * Encodes the specified ShortOrderInfo message. Does not implicitly {@link IRIS.ShortOrderInfo.verify|verify} messages.
         * @param message ShortOrderInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IShortOrderInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShortOrderInfo message, length delimited. Does not implicitly {@link IRIS.ShortOrderInfo.verify|verify} messages.
         * @param message ShortOrderInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IShortOrderInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShortOrderInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShortOrderInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.ShortOrderInfo;

        /**
         * Decodes a ShortOrderInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShortOrderInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.ShortOrderInfo;

        /**
         * Verifies a ShortOrderInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShortOrderInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShortOrderInfo
         */
        public static fromObject(object: { [k: string]: any }): IRIS.ShortOrderInfo;

        /**
         * Creates a plain object from a ShortOrderInfo message. Also converts values to other types if specified.
         * @param message ShortOrderInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.ShortOrderInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShortOrderInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OrdersFilter. */
    interface IOrdersFilter {

        /** OrdersFilter period */
        period?: (IRIS.IDatePeriod|null);

        /** OrdersFilter instrumentsFilter */
        instrumentsFilter?: (IRIS.IInstrumentsFilter|null);

        /** OrdersFilter direction */
        direction?: (IRIS.OrderDirection[]|null);

        /** OrdersFilter orderType */
        orderType?: (IRIS.OrderType[]|null);

        /** OrdersFilter marketSector */
        marketSector?: (IRIS.MarketSector[]|null);

        /** OrdersFilter versionFrom */
        versionFrom?: (number|Long|null);

        /** OrdersFilter ordersIds */
        ordersIds?: ((number|Long)[]|null);
    }

    /** Represents an OrdersFilter. */
    class OrdersFilter implements IOrdersFilter {

        /**
         * Constructs a new OrdersFilter.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IOrdersFilter);

        /** OrdersFilter period. */
        public period?: (IRIS.IDatePeriod|null);

        /** OrdersFilter instrumentsFilter. */
        public instrumentsFilter?: (IRIS.IInstrumentsFilter|null);

        /** OrdersFilter direction. */
        public direction: IRIS.OrderDirection[];

        /** OrdersFilter orderType. */
        public orderType: IRIS.OrderType[];

        /** OrdersFilter marketSector. */
        public marketSector: IRIS.MarketSector[];

        /** OrdersFilter versionFrom. */
        public versionFrom: (number|Long);

        /** OrdersFilter ordersIds. */
        public ordersIds: (number|Long)[];

        /**
         * Creates a new OrdersFilter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OrdersFilter instance
         */
        public static create(properties?: IRIS.IOrdersFilter): IRIS.OrdersFilter;

        /**
         * Encodes the specified OrdersFilter message. Does not implicitly {@link IRIS.OrdersFilter.verify|verify} messages.
         * @param message OrdersFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IOrdersFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OrdersFilter message, length delimited. Does not implicitly {@link IRIS.OrdersFilter.verify|verify} messages.
         * @param message OrdersFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IOrdersFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OrdersFilter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OrdersFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.OrdersFilter;

        /**
         * Decodes an OrdersFilter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OrdersFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.OrdersFilter;

        /**
         * Verifies an OrdersFilter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OrdersFilter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OrdersFilter
         */
        public static fromObject(object: { [k: string]: any }): IRIS.OrdersFilter;

        /**
         * Creates a plain object from an OrdersFilter message. Also converts values to other types if specified.
         * @param message OrdersFilter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.OrdersFilter, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OrdersFilter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OrdersSortRecord. */
    interface IOrdersSortRecord {

        /** OrdersSortRecord field */
        field?: (IRIS.OrdersSortField|null);

        /** OrdersSortRecord desc */
        desc?: (boolean|null);
    }

    /** Represents an OrdersSortRecord. */
    class OrdersSortRecord implements IOrdersSortRecord {

        /**
         * Constructs a new OrdersSortRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IOrdersSortRecord);

        /** OrdersSortRecord field. */
        public field: IRIS.OrdersSortField;

        /** OrdersSortRecord desc. */
        public desc: boolean;

        /**
         * Creates a new OrdersSortRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OrdersSortRecord instance
         */
        public static create(properties?: IRIS.IOrdersSortRecord): IRIS.OrdersSortRecord;

        /**
         * Encodes the specified OrdersSortRecord message. Does not implicitly {@link IRIS.OrdersSortRecord.verify|verify} messages.
         * @param message OrdersSortRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IOrdersSortRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OrdersSortRecord message, length delimited. Does not implicitly {@link IRIS.OrdersSortRecord.verify|verify} messages.
         * @param message OrdersSortRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IOrdersSortRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OrdersSortRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OrdersSortRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.OrdersSortRecord;

        /**
         * Decodes an OrdersSortRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OrdersSortRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.OrdersSortRecord;

        /**
         * Verifies an OrdersSortRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OrdersSortRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OrdersSortRecord
         */
        public static fromObject(object: { [k: string]: any }): IRIS.OrdersSortRecord;

        /**
         * Creates a plain object from an OrdersSortRecord message. Also converts values to other types if specified.
         * @param message OrdersSortRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.OrdersSortRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OrdersSortRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OrdersCountRequest. */
    interface IOrdersCountRequest {

        /** OrdersCountRequest filter */
        filter?: (IRIS.IOrdersFilter|null);
    }

    /** Represents an OrdersCountRequest. */
    class OrdersCountRequest implements IOrdersCountRequest {

        /**
         * Constructs a new OrdersCountRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IOrdersCountRequest);

        /** OrdersCountRequest filter. */
        public filter?: (IRIS.IOrdersFilter|null);

        /**
         * Creates a new OrdersCountRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OrdersCountRequest instance
         */
        public static create(properties?: IRIS.IOrdersCountRequest): IRIS.OrdersCountRequest;

        /**
         * Encodes the specified OrdersCountRequest message. Does not implicitly {@link IRIS.OrdersCountRequest.verify|verify} messages.
         * @param message OrdersCountRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IOrdersCountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OrdersCountRequest message, length delimited. Does not implicitly {@link IRIS.OrdersCountRequest.verify|verify} messages.
         * @param message OrdersCountRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IOrdersCountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OrdersCountRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OrdersCountRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.OrdersCountRequest;

        /**
         * Decodes an OrdersCountRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OrdersCountRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.OrdersCountRequest;

        /**
         * Verifies an OrdersCountRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OrdersCountRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OrdersCountRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.OrdersCountRequest;

        /**
         * Creates a plain object from an OrdersCountRequest message. Also converts values to other types if specified.
         * @param message OrdersCountRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.OrdersCountRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OrdersCountRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OrdersCountReply. */
    interface IOrdersCountReply {

        /** OrdersCountReply count */
        count?: (number|null);
    }

    /** Represents an OrdersCountReply. */
    class OrdersCountReply implements IOrdersCountReply {

        /**
         * Constructs a new OrdersCountReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IOrdersCountReply);

        /** OrdersCountReply count. */
        public count: number;

        /**
         * Creates a new OrdersCountReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OrdersCountReply instance
         */
        public static create(properties?: IRIS.IOrdersCountReply): IRIS.OrdersCountReply;

        /**
         * Encodes the specified OrdersCountReply message. Does not implicitly {@link IRIS.OrdersCountReply.verify|verify} messages.
         * @param message OrdersCountReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IOrdersCountReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OrdersCountReply message, length delimited. Does not implicitly {@link IRIS.OrdersCountReply.verify|verify} messages.
         * @param message OrdersCountReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IOrdersCountReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OrdersCountReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OrdersCountReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.OrdersCountReply;

        /**
         * Decodes an OrdersCountReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OrdersCountReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.OrdersCountReply;

        /**
         * Verifies an OrdersCountReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OrdersCountReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OrdersCountReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.OrdersCountReply;

        /**
         * Creates a plain object from an OrdersCountReply message. Also converts values to other types if specified.
         * @param message OrdersCountReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.OrdersCountReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OrdersCountReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OrdersRequest. */
    interface IOrdersRequest {

        /** OrdersRequest filter */
        filter?: (IRIS.IOrdersFilter|null);

        /** OrdersRequest range */
        range?: (IRIS.IRange|null);

        /** OrdersRequest bandle */
        bandle?: (number|null);

        /** OrdersRequest sorting */
        sorting?: (IRIS.IOrdersSortRecord[]|null);
    }

    /** Represents an OrdersRequest. */
    class OrdersRequest implements IOrdersRequest {

        /**
         * Constructs a new OrdersRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IOrdersRequest);

        /** OrdersRequest filter. */
        public filter?: (IRIS.IOrdersFilter|null);

        /** OrdersRequest range. */
        public range?: (IRIS.IRange|null);

        /** OrdersRequest bandle. */
        public bandle?: (number|null);

        /** OrdersRequest sorting. */
        public sorting: IRIS.IOrdersSortRecord[];

        /** OrdersRequest records. */
        public records?: ("range"|"bandle");

        /**
         * Creates a new OrdersRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OrdersRequest instance
         */
        public static create(properties?: IRIS.IOrdersRequest): IRIS.OrdersRequest;

        /**
         * Encodes the specified OrdersRequest message. Does not implicitly {@link IRIS.OrdersRequest.verify|verify} messages.
         * @param message OrdersRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IOrdersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OrdersRequest message, length delimited. Does not implicitly {@link IRIS.OrdersRequest.verify|verify} messages.
         * @param message OrdersRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IOrdersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OrdersRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OrdersRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.OrdersRequest;

        /**
         * Decodes an OrdersRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OrdersRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.OrdersRequest;

        /**
         * Verifies an OrdersRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OrdersRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OrdersRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.OrdersRequest;

        /**
         * Creates a plain object from an OrdersRequest message. Also converts values to other types if specified.
         * @param message OrdersRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.OrdersRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OrdersRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OrdersReply. */
    interface IOrdersReply {

        /** OrdersReply range */
        range?: (IRIS.IRange|null);

        /** OrdersReply orders */
        orders?: (IRIS.IOrder[]|null);
    }

    /** Represents an OrdersReply. */
    class OrdersReply implements IOrdersReply {

        /**
         * Constructs a new OrdersReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IOrdersReply);

        /** OrdersReply range. */
        public range?: (IRIS.IRange|null);

        /** OrdersReply orders. */
        public orders: IRIS.IOrder[];

        /**
         * Creates a new OrdersReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OrdersReply instance
         */
        public static create(properties?: IRIS.IOrdersReply): IRIS.OrdersReply;

        /**
         * Encodes the specified OrdersReply message. Does not implicitly {@link IRIS.OrdersReply.verify|verify} messages.
         * @param message OrdersReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IOrdersReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OrdersReply message, length delimited. Does not implicitly {@link IRIS.OrdersReply.verify|verify} messages.
         * @param message OrdersReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IOrdersReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OrdersReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OrdersReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.OrdersReply;

        /**
         * Decodes an OrdersReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OrdersReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.OrdersReply;

        /**
         * Verifies an OrdersReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OrdersReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OrdersReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.OrdersReply;

        /**
         * Creates a plain object from an OrdersReply message. Also converts values to other types if specified.
         * @param message OrdersReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.OrdersReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OrdersReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OrdersUpdate. */
    interface IOrdersUpdate {

        /** OrdersUpdate orders */
        orders?: (IRIS.IShortOrderInfo[]|null);
    }

    /** Represents an OrdersUpdate. */
    class OrdersUpdate implements IOrdersUpdate {

        /**
         * Constructs a new OrdersUpdate.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IOrdersUpdate);

        /** OrdersUpdate orders. */
        public orders: IRIS.IShortOrderInfo[];

        /**
         * Creates a new OrdersUpdate instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OrdersUpdate instance
         */
        public static create(properties?: IRIS.IOrdersUpdate): IRIS.OrdersUpdate;

        /**
         * Encodes the specified OrdersUpdate message. Does not implicitly {@link IRIS.OrdersUpdate.verify|verify} messages.
         * @param message OrdersUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IOrdersUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OrdersUpdate message, length delimited. Does not implicitly {@link IRIS.OrdersUpdate.verify|verify} messages.
         * @param message OrdersUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IOrdersUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OrdersUpdate message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OrdersUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.OrdersUpdate;

        /**
         * Decodes an OrdersUpdate message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OrdersUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.OrdersUpdate;

        /**
         * Verifies an OrdersUpdate message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OrdersUpdate message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OrdersUpdate
         */
        public static fromObject(object: { [k: string]: any }): IRIS.OrdersUpdate;

        /**
         * Creates a plain object from an OrdersUpdate message. Also converts values to other types if specified.
         * @param message OrdersUpdate
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.OrdersUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OrdersUpdate to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OrdersExportRequest. */
    interface IOrdersExportRequest {

        /** OrdersExportRequest filter */
        filter?: (IRIS.IOrdersFilter|null);

        /** OrdersExportRequest sorting */
        sorting?: (IRIS.IOrdersSortRecord[]|null);

        /** OrdersExportRequest format */
        format?: (IRIS.ExportFileFormat|null);

        /** OrdersExportRequest lang */
        lang?: (IRIS.Language|null);
    }

    /** Represents an OrdersExportRequest. */
    class OrdersExportRequest implements IOrdersExportRequest {

        /**
         * Constructs a new OrdersExportRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IOrdersExportRequest);

        /** OrdersExportRequest filter. */
        public filter?: (IRIS.IOrdersFilter|null);

        /** OrdersExportRequest sorting. */
        public sorting: IRIS.IOrdersSortRecord[];

        /** OrdersExportRequest format. */
        public format: IRIS.ExportFileFormat;

        /** OrdersExportRequest lang. */
        public lang: IRIS.Language;

        /**
         * Creates a new OrdersExportRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OrdersExportRequest instance
         */
        public static create(properties?: IRIS.IOrdersExportRequest): IRIS.OrdersExportRequest;

        /**
         * Encodes the specified OrdersExportRequest message. Does not implicitly {@link IRIS.OrdersExportRequest.verify|verify} messages.
         * @param message OrdersExportRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IOrdersExportRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OrdersExportRequest message, length delimited. Does not implicitly {@link IRIS.OrdersExportRequest.verify|verify} messages.
         * @param message OrdersExportRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IOrdersExportRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OrdersExportRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OrdersExportRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.OrdersExportRequest;

        /**
         * Decodes an OrdersExportRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OrdersExportRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.OrdersExportRequest;

        /**
         * Verifies an OrdersExportRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OrdersExportRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OrdersExportRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.OrdersExportRequest;

        /**
         * Creates a plain object from an OrdersExportRequest message. Also converts values to other types if specified.
         * @param message OrdersExportRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.OrdersExportRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OrdersExportRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OrdersExportReply. */
    interface IOrdersExportReply {

        /** OrdersExportReply url */
        url?: (string|null);
    }

    /** Represents an OrdersExportReply. */
    class OrdersExportReply implements IOrdersExportReply {

        /**
         * Constructs a new OrdersExportReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IOrdersExportReply);

        /** OrdersExportReply url. */
        public url: string;

        /**
         * Creates a new OrdersExportReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OrdersExportReply instance
         */
        public static create(properties?: IRIS.IOrdersExportReply): IRIS.OrdersExportReply;

        /**
         * Encodes the specified OrdersExportReply message. Does not implicitly {@link IRIS.OrdersExportReply.verify|verify} messages.
         * @param message OrdersExportReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IOrdersExportReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OrdersExportReply message, length delimited. Does not implicitly {@link IRIS.OrdersExportReply.verify|verify} messages.
         * @param message OrdersExportReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IOrdersExportReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OrdersExportReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OrdersExportReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.OrdersExportReply;

        /**
         * Decodes an OrdersExportReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OrdersExportReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.OrdersExportReply;

        /**
         * Verifies an OrdersExportReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OrdersExportReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OrdersExportReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.OrdersExportReply;

        /**
         * Creates a plain object from an OrdersExportReply message. Also converts values to other types if specified.
         * @param message OrdersExportReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.OrdersExportReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OrdersExportReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OrderbookRequest. */
    interface IOrderbookRequest {

        /** OrderbookRequest instrumentId */
        instrumentId?: (number|null);

        /** OrderbookRequest depth */
        depth?: (number|null);
    }

    /** Запрос на получение информации информацией о стакане на фондовом рынке. */
    class OrderbookRequest implements IOrderbookRequest {

        /**
         * Constructs a new OrderbookRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IOrderbookRequest);

        /** OrderbookRequest instrumentId. */
        public instrumentId: number;

        /** OrderbookRequest depth. */
        public depth: number;

        /**
         * Creates a new OrderbookRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OrderbookRequest instance
         */
        public static create(properties?: IRIS.IOrderbookRequest): IRIS.OrderbookRequest;

        /**
         * Encodes the specified OrderbookRequest message. Does not implicitly {@link IRIS.OrderbookRequest.verify|verify} messages.
         * @param message OrderbookRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IOrderbookRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OrderbookRequest message, length delimited. Does not implicitly {@link IRIS.OrderbookRequest.verify|verify} messages.
         * @param message OrderbookRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IOrderbookRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OrderbookRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OrderbookRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.OrderbookRequest;

        /**
         * Decodes an OrderbookRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OrderbookRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.OrderbookRequest;

        /**
         * Verifies an OrderbookRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OrderbookRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OrderbookRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.OrderbookRequest;

        /**
         * Creates a plain object from an OrderbookRequest message. Also converts values to other types if specified.
         * @param message OrderbookRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.OrderbookRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OrderbookRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OrderbookReply. */
    interface IOrderbookReply {

        /** OrderbookReply instrumentId */
        instrumentId?: (number|null);

        /** OrderbookReply orderbook */
        orderbook?: (IRIS.IOrderbook[]|null);

        /** OrderbookReply sessionOpened */
        sessionOpened?: (boolean|null);
    }

    /**
     * Ответ с информацией о стакане на фондовом рынке.
     * В случае если сессия закрыта (session_opened = false), список записей стакана должен быть пустым. В противоположность этому, при пустом стакане сессия может быть открыта, а стакан пустой потому, что нет заявок.
     */
    class OrderbookReply implements IOrderbookReply {

        /**
         * Constructs a new OrderbookReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IOrderbookReply);

        /** OrderbookReply instrumentId. */
        public instrumentId: number;

        /** OrderbookReply orderbook. */
        public orderbook: IRIS.IOrderbook[];

        /** OrderbookReply sessionOpened. */
        public sessionOpened: boolean;

        /**
         * Creates a new OrderbookReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OrderbookReply instance
         */
        public static create(properties?: IRIS.IOrderbookReply): IRIS.OrderbookReply;

        /**
         * Encodes the specified OrderbookReply message. Does not implicitly {@link IRIS.OrderbookReply.verify|verify} messages.
         * @param message OrderbookReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IOrderbookReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OrderbookReply message, length delimited. Does not implicitly {@link IRIS.OrderbookReply.verify|verify} messages.
         * @param message OrderbookReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IOrderbookReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OrderbookReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OrderbookReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.OrderbookReply;

        /**
         * Decodes an OrderbookReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OrderbookReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.OrderbookReply;

        /**
         * Verifies an OrderbookReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OrderbookReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OrderbookReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.OrderbookReply;

        /**
         * Creates a plain object from an OrderbookReply message. Also converts values to other types if specified.
         * @param message OrderbookReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.OrderbookReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OrderbookReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OrderbookUpdate. */
    interface IOrderbookUpdate {

        /** OrderbookUpdate instrumentId */
        instrumentId?: (number|null);
    }

    /**
     * Оповещение о изменении стакана заявок на фондовом рынке.
     * Одно сообщение может приходить в ответ на обработку нескольких заявок (см. <xref linkend="section_using_orderbook"/>).
     */
    class OrderbookUpdate implements IOrderbookUpdate {

        /**
         * Constructs a new OrderbookUpdate.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IOrderbookUpdate);

        /** OrderbookUpdate instrumentId. */
        public instrumentId: number;

        /**
         * Creates a new OrderbookUpdate instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OrderbookUpdate instance
         */
        public static create(properties?: IRIS.IOrderbookUpdate): IRIS.OrderbookUpdate;

        /**
         * Encodes the specified OrderbookUpdate message. Does not implicitly {@link IRIS.OrderbookUpdate.verify|verify} messages.
         * @param message OrderbookUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IOrderbookUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OrderbookUpdate message, length delimited. Does not implicitly {@link IRIS.OrderbookUpdate.verify|verify} messages.
         * @param message OrderbookUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IOrderbookUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OrderbookUpdate message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OrderbookUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.OrderbookUpdate;

        /**
         * Decodes an OrderbookUpdate message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OrderbookUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.OrderbookUpdate;

        /**
         * Verifies an OrderbookUpdate message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OrderbookUpdate message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OrderbookUpdate
         */
        public static fromObject(object: { [k: string]: any }): IRIS.OrderbookUpdate;

        /**
         * Creates a plain object from an OrderbookUpdate message. Also converts values to other types if specified.
         * @param message OrderbookUpdate
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.OrderbookUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OrderbookUpdate to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** SwopSelector enum. */
    enum SwopSelector {
        SS_ALL = 0,
        SS_YES = 1,
        SS_NO = 2
    }

    /** Properties of a CurDeal. */
    interface ICurDeal {

        /** CurDeal curdealId */
        curdealId?: (number|Long|null);

        /** CurDeal dealTime */
        dealTime?: (IRIS.IDateTime|null);

        /** CurDeal instrumentId */
        instrumentId?: (number|null);

        /** CurDeal instrumentCode */
        instrumentCode?: (string|null);

        /** CurDeal stateId */
        stateId?: (number|null);

        /** CurDeal sessionId */
        sessionId?: (number|null);

        /** CurDeal price */
        price?: (IRIS.IDecimal|null);

        /** CurDeal volume */
        volume?: (number|Long|null);

        /** CurDeal swop */
        swop?: (boolean|null);

        /** CurDeal openPrice */
        openPrice?: (IRIS.IDecimal|null);

        /** CurDeal closePrice */
        closePrice?: (IRIS.IDecimal|null);

        /** CurDeal version */
        version?: (number|Long|null);

        /** CurDeal board */
        board?: (string|null);
    }

    /** Represents a CurDeal. */
    class CurDeal implements ICurDeal {

        /**
         * Constructs a new CurDeal.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurDeal);

        /** CurDeal curdealId. */
        public curdealId: (number|Long);

        /** CurDeal dealTime. */
        public dealTime?: (IRIS.IDateTime|null);

        /** CurDeal instrumentId. */
        public instrumentId: number;

        /** CurDeal instrumentCode. */
        public instrumentCode: string;

        /** CurDeal stateId. */
        public stateId: number;

        /** CurDeal sessionId. */
        public sessionId: number;

        /** CurDeal price. */
        public price?: (IRIS.IDecimal|null);

        /** CurDeal volume. */
        public volume: (number|Long);

        /** CurDeal swop. */
        public swop: boolean;

        /** CurDeal openPrice. */
        public openPrice?: (IRIS.IDecimal|null);

        /** CurDeal closePrice. */
        public closePrice?: (IRIS.IDecimal|null);

        /** CurDeal version. */
        public version: (number|Long);

        /** CurDeal board. */
        public board: string;

        /**
         * Creates a new CurDeal instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurDeal instance
         */
        public static create(properties?: IRIS.ICurDeal): IRIS.CurDeal;

        /**
         * Encodes the specified CurDeal message. Does not implicitly {@link IRIS.CurDeal.verify|verify} messages.
         * @param message CurDeal message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurDeal, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurDeal message, length delimited. Does not implicitly {@link IRIS.CurDeal.verify|verify} messages.
         * @param message CurDeal message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurDeal, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurDeal message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurDeal
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurDeal;

        /**
         * Decodes a CurDeal message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurDeal
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurDeal;

        /**
         * Verifies a CurDeal message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurDeal message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurDeal
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurDeal;

        /**
         * Creates a plain object from a CurDeal message. Also converts values to other types if specified.
         * @param message CurDeal
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurDeal, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurDeal to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** CurDealsSortField enum. */
    enum CurDealsSortField {
        CDSF_DEAL_TIME = 0,
        CDSF_INSTRUMENT = 1,
        CDSF_PRICE = 2,
        CDSF_VOLUME = 3,
        CDSF_VERSION = 4,
        CDSF_ID = 5
    }

    /** Properties of a ShortCurDealInfo. */
    interface IShortCurDealInfo {

        /** ShortCurDealInfo curdealId */
        curdealId?: (number|Long|null);

        /** ShortCurDealInfo dealTime */
        dealTime?: (IRIS.IDateTime|null);

        /** ShortCurDealInfo eventType */
        eventType?: (IRIS.EventType|null);
    }

    /** Represents a ShortCurDealInfo. */
    class ShortCurDealInfo implements IShortCurDealInfo {

        /**
         * Constructs a new ShortCurDealInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IShortCurDealInfo);

        /** ShortCurDealInfo curdealId. */
        public curdealId: (number|Long);

        /** ShortCurDealInfo dealTime. */
        public dealTime?: (IRIS.IDateTime|null);

        /** ShortCurDealInfo eventType. */
        public eventType: IRIS.EventType;

        /**
         * Creates a new ShortCurDealInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShortCurDealInfo instance
         */
        public static create(properties?: IRIS.IShortCurDealInfo): IRIS.ShortCurDealInfo;

        /**
         * Encodes the specified ShortCurDealInfo message. Does not implicitly {@link IRIS.ShortCurDealInfo.verify|verify} messages.
         * @param message ShortCurDealInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IShortCurDealInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShortCurDealInfo message, length delimited. Does not implicitly {@link IRIS.ShortCurDealInfo.verify|verify} messages.
         * @param message ShortCurDealInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IShortCurDealInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShortCurDealInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShortCurDealInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.ShortCurDealInfo;

        /**
         * Decodes a ShortCurDealInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShortCurDealInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.ShortCurDealInfo;

        /**
         * Verifies a ShortCurDealInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShortCurDealInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShortCurDealInfo
         */
        public static fromObject(object: { [k: string]: any }): IRIS.ShortCurDealInfo;

        /**
         * Creates a plain object from a ShortCurDealInfo message. Also converts values to other types if specified.
         * @param message ShortCurDealInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.ShortCurDealInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShortCurDealInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurDealsFilter. */
    interface ICurDealsFilter {

        /** CurDealsFilter period */
        period?: (IRIS.IDatePeriod|null);

        /** CurDealsFilter codes */
        codes?: (string[]|null);

        /** CurDealsFilter instrumentIds */
        instrumentIds?: (number[]|null);

        /** CurDealsFilter stateIds */
        stateIds?: (number[]|null);

        /** CurDealsFilter sessionIds */
        sessionIds?: (number[]|null);

        /** CurDealsFilter swop */
        swop?: (IRIS.SwopSelector|null);

        /** CurDealsFilter versionFrom */
        versionFrom?: (number|Long|null);

        /** CurDealsFilter curdealsIds */
        curdealsIds?: ((number|Long)[]|null);

        /** CurDealsFilter confirmed */
        confirmed?: (boolean|null);
    }

    /** Represents a CurDealsFilter. */
    class CurDealsFilter implements ICurDealsFilter {

        /**
         * Constructs a new CurDealsFilter.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurDealsFilter);

        /** CurDealsFilter period. */
        public period?: (IRIS.IDatePeriod|null);

        /** CurDealsFilter codes. */
        public codes: string[];

        /** CurDealsFilter instrumentIds. */
        public instrumentIds: number[];

        /** CurDealsFilter stateIds. */
        public stateIds: number[];

        /** CurDealsFilter sessionIds. */
        public sessionIds: number[];

        /** CurDealsFilter swop. */
        public swop: IRIS.SwopSelector;

        /** CurDealsFilter versionFrom. */
        public versionFrom: (number|Long);

        /** CurDealsFilter curdealsIds. */
        public curdealsIds: (number|Long)[];

        /** CurDealsFilter confirmed. */
        public confirmed: boolean;

        /**
         * Creates a new CurDealsFilter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurDealsFilter instance
         */
        public static create(properties?: IRIS.ICurDealsFilter): IRIS.CurDealsFilter;

        /**
         * Encodes the specified CurDealsFilter message. Does not implicitly {@link IRIS.CurDealsFilter.verify|verify} messages.
         * @param message CurDealsFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurDealsFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurDealsFilter message, length delimited. Does not implicitly {@link IRIS.CurDealsFilter.verify|verify} messages.
         * @param message CurDealsFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurDealsFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurDealsFilter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurDealsFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurDealsFilter;

        /**
         * Decodes a CurDealsFilter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurDealsFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurDealsFilter;

        /**
         * Verifies a CurDealsFilter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurDealsFilter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurDealsFilter
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurDealsFilter;

        /**
         * Creates a plain object from a CurDealsFilter message. Also converts values to other types if specified.
         * @param message CurDealsFilter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurDealsFilter, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurDealsFilter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurDealsSortRecord. */
    interface ICurDealsSortRecord {

        /** CurDealsSortRecord field */
        field?: (IRIS.CurDealsSortField|null);

        /** CurDealsSortRecord desc */
        desc?: (boolean|null);
    }

    /** Represents a CurDealsSortRecord. */
    class CurDealsSortRecord implements ICurDealsSortRecord {

        /**
         * Constructs a new CurDealsSortRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurDealsSortRecord);

        /** CurDealsSortRecord field. */
        public field: IRIS.CurDealsSortField;

        /** CurDealsSortRecord desc. */
        public desc: boolean;

        /**
         * Creates a new CurDealsSortRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurDealsSortRecord instance
         */
        public static create(properties?: IRIS.ICurDealsSortRecord): IRIS.CurDealsSortRecord;

        /**
         * Encodes the specified CurDealsSortRecord message. Does not implicitly {@link IRIS.CurDealsSortRecord.verify|verify} messages.
         * @param message CurDealsSortRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurDealsSortRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurDealsSortRecord message, length delimited. Does not implicitly {@link IRIS.CurDealsSortRecord.verify|verify} messages.
         * @param message CurDealsSortRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurDealsSortRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurDealsSortRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurDealsSortRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurDealsSortRecord;

        /**
         * Decodes a CurDealsSortRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurDealsSortRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurDealsSortRecord;

        /**
         * Verifies a CurDealsSortRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurDealsSortRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurDealsSortRecord
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurDealsSortRecord;

        /**
         * Creates a plain object from a CurDealsSortRecord message. Also converts values to other types if specified.
         * @param message CurDealsSortRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurDealsSortRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurDealsSortRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurDealsCountRequest. */
    interface ICurDealsCountRequest {

        /** CurDealsCountRequest filter */
        filter?: (IRIS.ICurDealsFilter|null);
    }

    /**
     * Запрос на получение информации о количестве сделок на валютном рынке, подходящих под условия фильтрации.
     * <command>Примечание:</command> Возвращаемое количество учитывает не только ограничения заданные в фильтре, но и ограничения наложенные на выполняющего запрос пользователя.
     */
    class CurDealsCountRequest implements ICurDealsCountRequest {

        /**
         * Constructs a new CurDealsCountRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurDealsCountRequest);

        /** CurDealsCountRequest filter. */
        public filter?: (IRIS.ICurDealsFilter|null);

        /**
         * Creates a new CurDealsCountRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurDealsCountRequest instance
         */
        public static create(properties?: IRIS.ICurDealsCountRequest): IRIS.CurDealsCountRequest;

        /**
         * Encodes the specified CurDealsCountRequest message. Does not implicitly {@link IRIS.CurDealsCountRequest.verify|verify} messages.
         * @param message CurDealsCountRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurDealsCountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurDealsCountRequest message, length delimited. Does not implicitly {@link IRIS.CurDealsCountRequest.verify|verify} messages.
         * @param message CurDealsCountRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurDealsCountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurDealsCountRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurDealsCountRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurDealsCountRequest;

        /**
         * Decodes a CurDealsCountRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurDealsCountRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurDealsCountRequest;

        /**
         * Verifies a CurDealsCountRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurDealsCountRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurDealsCountRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurDealsCountRequest;

        /**
         * Creates a plain object from a CurDealsCountRequest message. Also converts values to other types if specified.
         * @param message CurDealsCountRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurDealsCountRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurDealsCountRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurDealsCountReply. */
    interface ICurDealsCountReply {

        /** CurDealsCountReply count */
        count?: (number|null);
    }

    /** Represents a CurDealsCountReply. */
    class CurDealsCountReply implements ICurDealsCountReply {

        /**
         * Constructs a new CurDealsCountReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurDealsCountReply);

        /** CurDealsCountReply count. */
        public count: number;

        /**
         * Creates a new CurDealsCountReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurDealsCountReply instance
         */
        public static create(properties?: IRIS.ICurDealsCountReply): IRIS.CurDealsCountReply;

        /**
         * Encodes the specified CurDealsCountReply message. Does not implicitly {@link IRIS.CurDealsCountReply.verify|verify} messages.
         * @param message CurDealsCountReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurDealsCountReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurDealsCountReply message, length delimited. Does not implicitly {@link IRIS.CurDealsCountReply.verify|verify} messages.
         * @param message CurDealsCountReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurDealsCountReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurDealsCountReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurDealsCountReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurDealsCountReply;

        /**
         * Decodes a CurDealsCountReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurDealsCountReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurDealsCountReply;

        /**
         * Verifies a CurDealsCountReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurDealsCountReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurDealsCountReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurDealsCountReply;

        /**
         * Creates a plain object from a CurDealsCountReply message. Also converts values to other types if specified.
         * @param message CurDealsCountReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurDealsCountReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurDealsCountReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurDealsRequest. */
    interface ICurDealsRequest {

        /** CurDealsRequest filter */
        filter?: (IRIS.ICurDealsFilter|null);

        /** CurDealsRequest range */
        range?: (IRIS.IRange|null);

        /** CurDealsRequest bandle */
        bandle?: (number|null);

        /** CurDealsRequest sorting */
        sorting?: (IRIS.ICurDealsSortRecord[]|null);
    }

    /** Represents a CurDealsRequest. */
    class CurDealsRequest implements ICurDealsRequest {

        /**
         * Constructs a new CurDealsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurDealsRequest);

        /** CurDealsRequest filter. */
        public filter?: (IRIS.ICurDealsFilter|null);

        /** CurDealsRequest range. */
        public range?: (IRIS.IRange|null);

        /** CurDealsRequest bandle. */
        public bandle?: (number|null);

        /** CurDealsRequest sorting. */
        public sorting: IRIS.ICurDealsSortRecord[];

        /** CurDealsRequest records. */
        public records?: ("range"|"bandle");

        /**
         * Creates a new CurDealsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurDealsRequest instance
         */
        public static create(properties?: IRIS.ICurDealsRequest): IRIS.CurDealsRequest;

        /**
         * Encodes the specified CurDealsRequest message. Does not implicitly {@link IRIS.CurDealsRequest.verify|verify} messages.
         * @param message CurDealsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurDealsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurDealsRequest message, length delimited. Does not implicitly {@link IRIS.CurDealsRequest.verify|verify} messages.
         * @param message CurDealsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurDealsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurDealsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurDealsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurDealsRequest;

        /**
         * Decodes a CurDealsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurDealsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurDealsRequest;

        /**
         * Verifies a CurDealsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurDealsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurDealsRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurDealsRequest;

        /**
         * Creates a plain object from a CurDealsRequest message. Also converts values to other types if specified.
         * @param message CurDealsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurDealsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurDealsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurDealsReply. */
    interface ICurDealsReply {

        /** CurDealsReply range */
        range?: (IRIS.IRange|null);

        /** CurDealsReply deals */
        deals?: (IRIS.ICurDeal[]|null);
    }

    /** Represents a CurDealsReply. */
    class CurDealsReply implements ICurDealsReply {

        /**
         * Constructs a new CurDealsReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurDealsReply);

        /** CurDealsReply range. */
        public range?: (IRIS.IRange|null);

        /** CurDealsReply deals. */
        public deals: IRIS.ICurDeal[];

        /**
         * Creates a new CurDealsReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurDealsReply instance
         */
        public static create(properties?: IRIS.ICurDealsReply): IRIS.CurDealsReply;

        /**
         * Encodes the specified CurDealsReply message. Does not implicitly {@link IRIS.CurDealsReply.verify|verify} messages.
         * @param message CurDealsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurDealsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurDealsReply message, length delimited. Does not implicitly {@link IRIS.CurDealsReply.verify|verify} messages.
         * @param message CurDealsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurDealsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurDealsReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurDealsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurDealsReply;

        /**
         * Decodes a CurDealsReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurDealsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurDealsReply;

        /**
         * Verifies a CurDealsReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurDealsReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurDealsReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurDealsReply;

        /**
         * Creates a plain object from a CurDealsReply message. Also converts values to other types if specified.
         * @param message CurDealsReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurDealsReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurDealsReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurDealsUpdate. */
    interface ICurDealsUpdate {

        /** CurDealsUpdate deals */
        deals?: (IRIS.IShortCurDealInfo[]|null);
    }

    /** Represents a CurDealsUpdate. */
    class CurDealsUpdate implements ICurDealsUpdate {

        /**
         * Constructs a new CurDealsUpdate.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurDealsUpdate);

        /** CurDealsUpdate deals. */
        public deals: IRIS.IShortCurDealInfo[];

        /**
         * Creates a new CurDealsUpdate instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurDealsUpdate instance
         */
        public static create(properties?: IRIS.ICurDealsUpdate): IRIS.CurDealsUpdate;

        /**
         * Encodes the specified CurDealsUpdate message. Does not implicitly {@link IRIS.CurDealsUpdate.verify|verify} messages.
         * @param message CurDealsUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurDealsUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurDealsUpdate message, length delimited. Does not implicitly {@link IRIS.CurDealsUpdate.verify|verify} messages.
         * @param message CurDealsUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurDealsUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurDealsUpdate message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurDealsUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurDealsUpdate;

        /**
         * Decodes a CurDealsUpdate message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurDealsUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurDealsUpdate;

        /**
         * Verifies a CurDealsUpdate message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurDealsUpdate message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurDealsUpdate
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurDealsUpdate;

        /**
         * Creates a plain object from a CurDealsUpdate message. Also converts values to other types if specified.
         * @param message CurDealsUpdate
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurDealsUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurDealsUpdate to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurDealsExportRequest. */
    interface ICurDealsExportRequest {

        /** CurDealsExportRequest filter */
        filter?: (IRIS.ICurDealsFilter|null);

        /** CurDealsExportRequest sorting */
        sorting?: (IRIS.ICurDealsSortRecord[]|null);

        /** CurDealsExportRequest format */
        format?: (IRIS.ExportFileFormat|null);

        /** CurDealsExportRequest lang */
        lang?: (IRIS.Language|null);
    }

    /** Represents a CurDealsExportRequest. */
    class CurDealsExportRequest implements ICurDealsExportRequest {

        /**
         * Constructs a new CurDealsExportRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurDealsExportRequest);

        /** CurDealsExportRequest filter. */
        public filter?: (IRIS.ICurDealsFilter|null);

        /** CurDealsExportRequest sorting. */
        public sorting: IRIS.ICurDealsSortRecord[];

        /** CurDealsExportRequest format. */
        public format: IRIS.ExportFileFormat;

        /** CurDealsExportRequest lang. */
        public lang: IRIS.Language;

        /**
         * Creates a new CurDealsExportRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurDealsExportRequest instance
         */
        public static create(properties?: IRIS.ICurDealsExportRequest): IRIS.CurDealsExportRequest;

        /**
         * Encodes the specified CurDealsExportRequest message. Does not implicitly {@link IRIS.CurDealsExportRequest.verify|verify} messages.
         * @param message CurDealsExportRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurDealsExportRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurDealsExportRequest message, length delimited. Does not implicitly {@link IRIS.CurDealsExportRequest.verify|verify} messages.
         * @param message CurDealsExportRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurDealsExportRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurDealsExportRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurDealsExportRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurDealsExportRequest;

        /**
         * Decodes a CurDealsExportRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurDealsExportRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurDealsExportRequest;

        /**
         * Verifies a CurDealsExportRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurDealsExportRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurDealsExportRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurDealsExportRequest;

        /**
         * Creates a plain object from a CurDealsExportRequest message. Also converts values to other types if specified.
         * @param message CurDealsExportRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurDealsExportRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurDealsExportRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurDealsExportReply. */
    interface ICurDealsExportReply {

        /** CurDealsExportReply url */
        url?: (string|null);
    }

    /** Represents a CurDealsExportReply. */
    class CurDealsExportReply implements ICurDealsExportReply {

        /**
         * Constructs a new CurDealsExportReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurDealsExportReply);

        /** CurDealsExportReply url. */
        public url: string;

        /**
         * Creates a new CurDealsExportReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurDealsExportReply instance
         */
        public static create(properties?: IRIS.ICurDealsExportReply): IRIS.CurDealsExportReply;

        /**
         * Encodes the specified CurDealsExportReply message. Does not implicitly {@link IRIS.CurDealsExportReply.verify|verify} messages.
         * @param message CurDealsExportReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurDealsExportReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurDealsExportReply message, length delimited. Does not implicitly {@link IRIS.CurDealsExportReply.verify|verify} messages.
         * @param message CurDealsExportReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurDealsExportReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurDealsExportReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurDealsExportReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurDealsExportReply;

        /**
         * Decodes a CurDealsExportReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurDealsExportReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurDealsExportReply;

        /**
         * Verifies a CurDealsExportReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurDealsExportReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurDealsExportReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurDealsExportReply;

        /**
         * Creates a plain object from a CurDealsExportReply message. Also converts values to other types if specified.
         * @param message CurDealsExportReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurDealsExportReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurDealsExportReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurOrder. */
    interface ICurOrder {

        /** CurOrder curordersId */
        curordersId?: (number|Long|null);

        /** CurOrder orderTime */
        orderTime?: (IRIS.IDateTime|null);

        /** CurOrder deltime */
        deltime?: (IRIS.IDateTime|null);

        /** CurOrder direction */
        direction?: (IRIS.OrderDirection|null);

        /** CurOrder status */
        status?: (IRIS.OrderStatus|null);

        /** CurOrder instrumentId */
        instrumentId?: (number|null);

        /** CurOrder instrumentCode */
        instrumentCode?: (string|null);

        /** CurOrder sessionId */
        sessionId?: (number|null);

        /** CurOrder price */
        price?: (IRIS.IDecimal|null);

        /** CurOrder volume */
        volume?: (number|Long|null);

        /** CurOrder volrest */
        volrest?: (number|Long|null);

        /** CurOrder version */
        version?: (number|Long|null);

        /** CurOrder board */
        board?: (string|null);
    }

    /** Структура для передачи данных о заявке на валютном рынке. */
    class CurOrder implements ICurOrder {

        /**
         * Constructs a new CurOrder.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurOrder);

        /** CurOrder curordersId. */
        public curordersId: (number|Long);

        /** CurOrder orderTime. */
        public orderTime?: (IRIS.IDateTime|null);

        /** CurOrder deltime. */
        public deltime?: (IRIS.IDateTime|null);

        /** CurOrder direction. */
        public direction: IRIS.OrderDirection;

        /** CurOrder status. */
        public status: IRIS.OrderStatus;

        /** CurOrder instrumentId. */
        public instrumentId: number;

        /** CurOrder instrumentCode. */
        public instrumentCode: string;

        /** CurOrder sessionId. */
        public sessionId: number;

        /** CurOrder price. */
        public price?: (IRIS.IDecimal|null);

        /** CurOrder volume. */
        public volume: (number|Long);

        /** CurOrder volrest. */
        public volrest: (number|Long);

        /** CurOrder version. */
        public version: (number|Long);

        /** CurOrder board. */
        public board: string;

        /**
         * Creates a new CurOrder instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurOrder instance
         */
        public static create(properties?: IRIS.ICurOrder): IRIS.CurOrder;

        /**
         * Encodes the specified CurOrder message. Does not implicitly {@link IRIS.CurOrder.verify|verify} messages.
         * @param message CurOrder message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurOrder, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurOrder message, length delimited. Does not implicitly {@link IRIS.CurOrder.verify|verify} messages.
         * @param message CurOrder message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurOrder, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurOrder message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurOrder
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurOrder;

        /**
         * Decodes a CurOrder message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurOrder
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurOrder;

        /**
         * Verifies a CurOrder message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurOrder message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurOrder
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurOrder;

        /**
         * Creates a plain object from a CurOrder message. Also converts values to other types if specified.
         * @param message CurOrder
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurOrder, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurOrder to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Поля по которым возможна сортировка списка заявок. */
    enum CurOrdersSortField {
        COSF_ORDER_TIME = 0,
        COSF_INSTRUMENT = 1,
        COSF_PRICE = 2,
        COSF_VOLUME = 3,
        COSF_VERSION = 4,
        COSF_ID = 5,
        COSF_EXTID = 6
    }

    /** Properties of a ShortCurOrderInfo. */
    interface IShortCurOrderInfo {

        /** ShortCurOrderInfo orderId */
        orderId?: (number|Long|null);

        /** ShortCurOrderInfo orderTime */
        orderTime?: (IRIS.IDateTime|null);

        /** ShortCurOrderInfo eventType */
        eventType?: (IRIS.EventType|null);
    }

    /** Краткая информация о заявке */
    class ShortCurOrderInfo implements IShortCurOrderInfo {

        /**
         * Constructs a new ShortCurOrderInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IShortCurOrderInfo);

        /** ShortCurOrderInfo orderId. */
        public orderId: (number|Long);

        /** ShortCurOrderInfo orderTime. */
        public orderTime?: (IRIS.IDateTime|null);

        /** ShortCurOrderInfo eventType. */
        public eventType: IRIS.EventType;

        /**
         * Creates a new ShortCurOrderInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShortCurOrderInfo instance
         */
        public static create(properties?: IRIS.IShortCurOrderInfo): IRIS.ShortCurOrderInfo;

        /**
         * Encodes the specified ShortCurOrderInfo message. Does not implicitly {@link IRIS.ShortCurOrderInfo.verify|verify} messages.
         * @param message ShortCurOrderInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IShortCurOrderInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShortCurOrderInfo message, length delimited. Does not implicitly {@link IRIS.ShortCurOrderInfo.verify|verify} messages.
         * @param message ShortCurOrderInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IShortCurOrderInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShortCurOrderInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShortCurOrderInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.ShortCurOrderInfo;

        /**
         * Decodes a ShortCurOrderInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShortCurOrderInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.ShortCurOrderInfo;

        /**
         * Verifies a ShortCurOrderInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShortCurOrderInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShortCurOrderInfo
         */
        public static fromObject(object: { [k: string]: any }): IRIS.ShortCurOrderInfo;

        /**
         * Creates a plain object from a ShortCurOrderInfo message. Also converts values to other types if specified.
         * @param message ShortCurOrderInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.ShortCurOrderInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShortCurOrderInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurOrdersFilter. */
    interface ICurOrdersFilter {

        /** CurOrdersFilter period */
        period?: (IRIS.IDatePeriod|null);

        /** CurOrdersFilter codes */
        codes?: (string[]|null);

        /** CurOrdersFilter instrumentIds */
        instrumentIds?: (number[]|null);

        /** CurOrdersFilter sessionIds */
        sessionIds?: (number[]|null);

        /** CurOrdersFilter direction */
        direction?: (IRIS.OrderDirection[]|null);

        /** CurOrdersFilter versionFrom */
        versionFrom?: (number|Long|null);

        /** CurOrdersFilter ordersIds */
        ordersIds?: ((number|Long)[]|null);
    }

    /** Информация для фильтрации списка заявок на валютном рынке. */
    class CurOrdersFilter implements ICurOrdersFilter {

        /**
         * Constructs a new CurOrdersFilter.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurOrdersFilter);

        /** CurOrdersFilter period. */
        public period?: (IRIS.IDatePeriod|null);

        /** CurOrdersFilter codes. */
        public codes: string[];

        /** CurOrdersFilter instrumentIds. */
        public instrumentIds: number[];

        /** CurOrdersFilter sessionIds. */
        public sessionIds: number[];

        /** CurOrdersFilter direction. */
        public direction: IRIS.OrderDirection[];

        /** CurOrdersFilter versionFrom. */
        public versionFrom: (number|Long);

        /** CurOrdersFilter ordersIds. */
        public ordersIds: (number|Long)[];

        /**
         * Creates a new CurOrdersFilter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurOrdersFilter instance
         */
        public static create(properties?: IRIS.ICurOrdersFilter): IRIS.CurOrdersFilter;

        /**
         * Encodes the specified CurOrdersFilter message. Does not implicitly {@link IRIS.CurOrdersFilter.verify|verify} messages.
         * @param message CurOrdersFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurOrdersFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurOrdersFilter message, length delimited. Does not implicitly {@link IRIS.CurOrdersFilter.verify|verify} messages.
         * @param message CurOrdersFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurOrdersFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurOrdersFilter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurOrdersFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurOrdersFilter;

        /**
         * Decodes a CurOrdersFilter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurOrdersFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurOrdersFilter;

        /**
         * Verifies a CurOrdersFilter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurOrdersFilter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurOrdersFilter
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurOrdersFilter;

        /**
         * Creates a plain object from a CurOrdersFilter message. Also converts values to other types if specified.
         * @param message CurOrdersFilter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurOrdersFilter, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurOrdersFilter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurOrdersSortRecord. */
    interface ICurOrdersSortRecord {

        /** CurOrdersSortRecord field */
        field?: (IRIS.CurOrdersSortField|null);

        /** CurOrdersSortRecord desc */
        desc?: (boolean|null);
    }

    /** Информация для сортировки списка заявок на валютном рынке. */
    class CurOrdersSortRecord implements ICurOrdersSortRecord {

        /**
         * Constructs a new CurOrdersSortRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurOrdersSortRecord);

        /** CurOrdersSortRecord field. */
        public field: IRIS.CurOrdersSortField;

        /** CurOrdersSortRecord desc. */
        public desc: boolean;

        /**
         * Creates a new CurOrdersSortRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurOrdersSortRecord instance
         */
        public static create(properties?: IRIS.ICurOrdersSortRecord): IRIS.CurOrdersSortRecord;

        /**
         * Encodes the specified CurOrdersSortRecord message. Does not implicitly {@link IRIS.CurOrdersSortRecord.verify|verify} messages.
         * @param message CurOrdersSortRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurOrdersSortRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurOrdersSortRecord message, length delimited. Does not implicitly {@link IRIS.CurOrdersSortRecord.verify|verify} messages.
         * @param message CurOrdersSortRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurOrdersSortRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurOrdersSortRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurOrdersSortRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurOrdersSortRecord;

        /**
         * Decodes a CurOrdersSortRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurOrdersSortRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurOrdersSortRecord;

        /**
         * Verifies a CurOrdersSortRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurOrdersSortRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurOrdersSortRecord
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurOrdersSortRecord;

        /**
         * Creates a plain object from a CurOrdersSortRecord message. Also converts values to other types if specified.
         * @param message CurOrdersSortRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurOrdersSortRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurOrdersSortRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurOrdersCountRequest. */
    interface ICurOrdersCountRequest {

        /** CurOrdersCountRequest filter */
        filter?: (IRIS.ICurOrdersFilter|null);
    }

    /**
     * Запрос на получение информации о количестве заявок на валютном рынке, подходящих под условия фильтрации.
     * Примечание: Возвращаемое количество учитывает не только ограничения заданные в фильтре, но и ограничения наложенные на выполняющего запрос пользователя.
     */
    class CurOrdersCountRequest implements ICurOrdersCountRequest {

        /**
         * Constructs a new CurOrdersCountRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurOrdersCountRequest);

        /** CurOrdersCountRequest filter. */
        public filter?: (IRIS.ICurOrdersFilter|null);

        /**
         * Creates a new CurOrdersCountRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurOrdersCountRequest instance
         */
        public static create(properties?: IRIS.ICurOrdersCountRequest): IRIS.CurOrdersCountRequest;

        /**
         * Encodes the specified CurOrdersCountRequest message. Does not implicitly {@link IRIS.CurOrdersCountRequest.verify|verify} messages.
         * @param message CurOrdersCountRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurOrdersCountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurOrdersCountRequest message, length delimited. Does not implicitly {@link IRIS.CurOrdersCountRequest.verify|verify} messages.
         * @param message CurOrdersCountRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurOrdersCountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurOrdersCountRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurOrdersCountRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurOrdersCountRequest;

        /**
         * Decodes a CurOrdersCountRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurOrdersCountRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurOrdersCountRequest;

        /**
         * Verifies a CurOrdersCountRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurOrdersCountRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurOrdersCountRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurOrdersCountRequest;

        /**
         * Creates a plain object from a CurOrdersCountRequest message. Also converts values to other types if specified.
         * @param message CurOrdersCountRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurOrdersCountRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurOrdersCountRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurOrdersCountReply. */
    interface ICurOrdersCountReply {

        /** CurOrdersCountReply count */
        count?: (number|null);
    }

    /** Ответ с информацией о количестве заявок на валютном рынке. */
    class CurOrdersCountReply implements ICurOrdersCountReply {

        /**
         * Constructs a new CurOrdersCountReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurOrdersCountReply);

        /** CurOrdersCountReply count. */
        public count: number;

        /**
         * Creates a new CurOrdersCountReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurOrdersCountReply instance
         */
        public static create(properties?: IRIS.ICurOrdersCountReply): IRIS.CurOrdersCountReply;

        /**
         * Encodes the specified CurOrdersCountReply message. Does not implicitly {@link IRIS.CurOrdersCountReply.verify|verify} messages.
         * @param message CurOrdersCountReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurOrdersCountReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurOrdersCountReply message, length delimited. Does not implicitly {@link IRIS.CurOrdersCountReply.verify|verify} messages.
         * @param message CurOrdersCountReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurOrdersCountReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurOrdersCountReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurOrdersCountReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurOrdersCountReply;

        /**
         * Decodes a CurOrdersCountReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurOrdersCountReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurOrdersCountReply;

        /**
         * Verifies a CurOrdersCountReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurOrdersCountReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurOrdersCountReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurOrdersCountReply;

        /**
         * Creates a plain object from a CurOrdersCountReply message. Also converts values to other types if specified.
         * @param message CurOrdersCountReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurOrdersCountReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurOrdersCountReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurOrdersRequest. */
    interface ICurOrdersRequest {

        /** CurOrdersRequest filter */
        filter?: (IRIS.ICurOrdersFilter|null);

        /** CurOrdersRequest range */
        range?: (IRIS.IRange|null);

        /** CurOrdersRequest bandle */
        bandle?: (number|null);

        /** CurOrdersRequest sorting */
        sorting?: (IRIS.ICurOrdersSortRecord[]|null);
    }

    /** Запрос на получение информации о заявках на валютном рынке. */
    class CurOrdersRequest implements ICurOrdersRequest {

        /**
         * Constructs a new CurOrdersRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurOrdersRequest);

        /** CurOrdersRequest filter. */
        public filter?: (IRIS.ICurOrdersFilter|null);

        /** CurOrdersRequest range. */
        public range?: (IRIS.IRange|null);

        /** CurOrdersRequest bandle. */
        public bandle?: (number|null);

        /** CurOrdersRequest sorting. */
        public sorting: IRIS.ICurOrdersSortRecord[];

        /** CurOrdersRequest records. */
        public records?: ("range"|"bandle");

        /**
         * Creates a new CurOrdersRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurOrdersRequest instance
         */
        public static create(properties?: IRIS.ICurOrdersRequest): IRIS.CurOrdersRequest;

        /**
         * Encodes the specified CurOrdersRequest message. Does not implicitly {@link IRIS.CurOrdersRequest.verify|verify} messages.
         * @param message CurOrdersRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurOrdersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurOrdersRequest message, length delimited. Does not implicitly {@link IRIS.CurOrdersRequest.verify|verify} messages.
         * @param message CurOrdersRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurOrdersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurOrdersRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurOrdersRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurOrdersRequest;

        /**
         * Decodes a CurOrdersRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurOrdersRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurOrdersRequest;

        /**
         * Verifies a CurOrdersRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurOrdersRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurOrdersRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurOrdersRequest;

        /**
         * Creates a plain object from a CurOrdersRequest message. Also converts values to other types if specified.
         * @param message CurOrdersRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurOrdersRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurOrdersRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurOrdersReply. */
    interface ICurOrdersReply {

        /** CurOrdersReply range */
        range?: (IRIS.IRange|null);

        /** CurOrdersReply orders */
        orders?: (IRIS.ICurOrder[]|null);
    }

    /** Ответ с информацией о заявках на валютном рынке. */
    class CurOrdersReply implements ICurOrdersReply {

        /**
         * Constructs a new CurOrdersReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurOrdersReply);

        /** CurOrdersReply range. */
        public range?: (IRIS.IRange|null);

        /** CurOrdersReply orders. */
        public orders: IRIS.ICurOrder[];

        /**
         * Creates a new CurOrdersReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurOrdersReply instance
         */
        public static create(properties?: IRIS.ICurOrdersReply): IRIS.CurOrdersReply;

        /**
         * Encodes the specified CurOrdersReply message. Does not implicitly {@link IRIS.CurOrdersReply.verify|verify} messages.
         * @param message CurOrdersReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurOrdersReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurOrdersReply message, length delimited. Does not implicitly {@link IRIS.CurOrdersReply.verify|verify} messages.
         * @param message CurOrdersReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurOrdersReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurOrdersReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurOrdersReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurOrdersReply;

        /**
         * Decodes a CurOrdersReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurOrdersReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurOrdersReply;

        /**
         * Verifies a CurOrdersReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurOrdersReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurOrdersReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurOrdersReply;

        /**
         * Creates a plain object from a CurOrdersReply message. Also converts values to other types if specified.
         * @param message CurOrdersReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurOrdersReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurOrdersReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurOrdersUpdate. */
    interface ICurOrdersUpdate {

        /** CurOrdersUpdate orders */
        orders?: (IRIS.IShortCurOrderInfo[]|null);
    }

    /** Оповещение о появлении новых заявок на валютном рынке или наличии изменений. */
    class CurOrdersUpdate implements ICurOrdersUpdate {

        /**
         * Constructs a new CurOrdersUpdate.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurOrdersUpdate);

        /** CurOrdersUpdate orders. */
        public orders: IRIS.IShortCurOrderInfo[];

        /**
         * Creates a new CurOrdersUpdate instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurOrdersUpdate instance
         */
        public static create(properties?: IRIS.ICurOrdersUpdate): IRIS.CurOrdersUpdate;

        /**
         * Encodes the specified CurOrdersUpdate message. Does not implicitly {@link IRIS.CurOrdersUpdate.verify|verify} messages.
         * @param message CurOrdersUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurOrdersUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurOrdersUpdate message, length delimited. Does not implicitly {@link IRIS.CurOrdersUpdate.verify|verify} messages.
         * @param message CurOrdersUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurOrdersUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurOrdersUpdate message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurOrdersUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurOrdersUpdate;

        /**
         * Decodes a CurOrdersUpdate message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurOrdersUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurOrdersUpdate;

        /**
         * Verifies a CurOrdersUpdate message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurOrdersUpdate message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurOrdersUpdate
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurOrdersUpdate;

        /**
         * Creates a plain object from a CurOrdersUpdate message. Also converts values to other types if specified.
         * @param message CurOrdersUpdate
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurOrdersUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurOrdersUpdate to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurOrdersExportRequest. */
    interface ICurOrdersExportRequest {

        /** CurOrdersExportRequest filter */
        filter?: (IRIS.ICurOrdersFilter|null);

        /** CurOrdersExportRequest sorting */
        sorting?: (IRIS.ICurOrdersSortRecord[]|null);

        /** CurOrdersExportRequest format */
        format?: (IRIS.ExportFileFormat|null);

        /** CurOrdersExportRequest lang */
        lang?: (IRIS.Language|null);
    }

    /** Represents a CurOrdersExportRequest. */
    class CurOrdersExportRequest implements ICurOrdersExportRequest {

        /**
         * Constructs a new CurOrdersExportRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurOrdersExportRequest);

        /** CurOrdersExportRequest filter. */
        public filter?: (IRIS.ICurOrdersFilter|null);

        /** CurOrdersExportRequest sorting. */
        public sorting: IRIS.ICurOrdersSortRecord[];

        /** CurOrdersExportRequest format. */
        public format: IRIS.ExportFileFormat;

        /** CurOrdersExportRequest lang. */
        public lang: IRIS.Language;

        /**
         * Creates a new CurOrdersExportRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurOrdersExportRequest instance
         */
        public static create(properties?: IRIS.ICurOrdersExportRequest): IRIS.CurOrdersExportRequest;

        /**
         * Encodes the specified CurOrdersExportRequest message. Does not implicitly {@link IRIS.CurOrdersExportRequest.verify|verify} messages.
         * @param message CurOrdersExportRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurOrdersExportRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurOrdersExportRequest message, length delimited. Does not implicitly {@link IRIS.CurOrdersExportRequest.verify|verify} messages.
         * @param message CurOrdersExportRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurOrdersExportRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurOrdersExportRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurOrdersExportRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurOrdersExportRequest;

        /**
         * Decodes a CurOrdersExportRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurOrdersExportRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurOrdersExportRequest;

        /**
         * Verifies a CurOrdersExportRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurOrdersExportRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurOrdersExportRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurOrdersExportRequest;

        /**
         * Creates a plain object from a CurOrdersExportRequest message. Also converts values to other types if specified.
         * @param message CurOrdersExportRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurOrdersExportRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurOrdersExportRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurOrdersExportReply. */
    interface ICurOrdersExportReply {

        /** CurOrdersExportReply url */
        url?: (string|null);
    }

    /** Represents a CurOrdersExportReply. */
    class CurOrdersExportReply implements ICurOrdersExportReply {

        /**
         * Constructs a new CurOrdersExportReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurOrdersExportReply);

        /** CurOrdersExportReply url. */
        public url: string;

        /**
         * Creates a new CurOrdersExportReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurOrdersExportReply instance
         */
        public static create(properties?: IRIS.ICurOrdersExportReply): IRIS.CurOrdersExportReply;

        /**
         * Encodes the specified CurOrdersExportReply message. Does not implicitly {@link IRIS.CurOrdersExportReply.verify|verify} messages.
         * @param message CurOrdersExportReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurOrdersExportReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurOrdersExportReply message, length delimited. Does not implicitly {@link IRIS.CurOrdersExportReply.verify|verify} messages.
         * @param message CurOrdersExportReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurOrdersExportReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurOrdersExportReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurOrdersExportReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurOrdersExportReply;

        /**
         * Decodes a CurOrdersExportReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurOrdersExportReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurOrdersExportReply;

        /**
         * Verifies a CurOrdersExportReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurOrdersExportReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurOrdersExportReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurOrdersExportReply;

        /**
         * Creates a plain object from a CurOrdersExportReply message. Also converts values to other types if specified.
         * @param message CurOrdersExportReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurOrdersExportReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurOrdersExportReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurOrderbookRequest. */
    interface ICurOrderbookRequest {

        /** CurOrderbookRequest instrumentId */
        instrumentId?: (number|null);

        /** CurOrderbookRequest depth */
        depth?: (number|null);
    }

    /** Запрос на получение информации информацией о стакане на валютном рынке. */
    class CurOrderbookRequest implements ICurOrderbookRequest {

        /**
         * Constructs a new CurOrderbookRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurOrderbookRequest);

        /** CurOrderbookRequest instrumentId. */
        public instrumentId: number;

        /** CurOrderbookRequest depth. */
        public depth: number;

        /**
         * Creates a new CurOrderbookRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurOrderbookRequest instance
         */
        public static create(properties?: IRIS.ICurOrderbookRequest): IRIS.CurOrderbookRequest;

        /**
         * Encodes the specified CurOrderbookRequest message. Does not implicitly {@link IRIS.CurOrderbookRequest.verify|verify} messages.
         * @param message CurOrderbookRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurOrderbookRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurOrderbookRequest message, length delimited. Does not implicitly {@link IRIS.CurOrderbookRequest.verify|verify} messages.
         * @param message CurOrderbookRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurOrderbookRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurOrderbookRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurOrderbookRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurOrderbookRequest;

        /**
         * Decodes a CurOrderbookRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurOrderbookRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurOrderbookRequest;

        /**
         * Verifies a CurOrderbookRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurOrderbookRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurOrderbookRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurOrderbookRequest;

        /**
         * Creates a plain object from a CurOrderbookRequest message. Also converts values to other types if specified.
         * @param message CurOrderbookRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurOrderbookRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurOrderbookRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurOrderbookReply. */
    interface ICurOrderbookReply {

        /** CurOrderbookReply instrumentId */
        instrumentId?: (number|null);

        /** CurOrderbookReply orderbook */
        orderbook?: (IRIS.IOrderbook[]|null);

        /** CurOrderbookReply sessionOpened */
        sessionOpened?: (boolean|null);
    }

    /**
     * Ответ с информацией о стакане на валютном рынке.
     * В случае если сессия закрыта (session_opened = false), список записей стакана должен быть пустым. В противоположность этому, при пустом стакане сессия может быть открыта, а стакан пустой потому, что нет заявок.
     */
    class CurOrderbookReply implements ICurOrderbookReply {

        /**
         * Constructs a new CurOrderbookReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurOrderbookReply);

        /** CurOrderbookReply instrumentId. */
        public instrumentId: number;

        /** CurOrderbookReply orderbook. */
        public orderbook: IRIS.IOrderbook[];

        /** CurOrderbookReply sessionOpened. */
        public sessionOpened: boolean;

        /**
         * Creates a new CurOrderbookReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurOrderbookReply instance
         */
        public static create(properties?: IRIS.ICurOrderbookReply): IRIS.CurOrderbookReply;

        /**
         * Encodes the specified CurOrderbookReply message. Does not implicitly {@link IRIS.CurOrderbookReply.verify|verify} messages.
         * @param message CurOrderbookReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurOrderbookReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurOrderbookReply message, length delimited. Does not implicitly {@link IRIS.CurOrderbookReply.verify|verify} messages.
         * @param message CurOrderbookReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurOrderbookReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurOrderbookReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurOrderbookReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurOrderbookReply;

        /**
         * Decodes a CurOrderbookReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurOrderbookReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurOrderbookReply;

        /**
         * Verifies a CurOrderbookReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurOrderbookReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurOrderbookReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurOrderbookReply;

        /**
         * Creates a plain object from a CurOrderbookReply message. Also converts values to other types if specified.
         * @param message CurOrderbookReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurOrderbookReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurOrderbookReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurOrderbookUpdate. */
    interface ICurOrderbookUpdate {

        /** CurOrderbookUpdate instrumentId */
        instrumentId?: (number|null);
    }

    /**
     * Оповещение о изменении стакана заявок на валютном рынке.
     * Одно сообщение может приходить в ответ на обработку сразу нескольких заявок (см. <xref linkend="section_using_curorderbook"/>).
     */
    class CurOrderbookUpdate implements ICurOrderbookUpdate {

        /**
         * Constructs a new CurOrderbookUpdate.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurOrderbookUpdate);

        /** CurOrderbookUpdate instrumentId. */
        public instrumentId: number;

        /**
         * Creates a new CurOrderbookUpdate instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurOrderbookUpdate instance
         */
        public static create(properties?: IRIS.ICurOrderbookUpdate): IRIS.CurOrderbookUpdate;

        /**
         * Encodes the specified CurOrderbookUpdate message. Does not implicitly {@link IRIS.CurOrderbookUpdate.verify|verify} messages.
         * @param message CurOrderbookUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurOrderbookUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurOrderbookUpdate message, length delimited. Does not implicitly {@link IRIS.CurOrderbookUpdate.verify|verify} messages.
         * @param message CurOrderbookUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurOrderbookUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurOrderbookUpdate message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurOrderbookUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurOrderbookUpdate;

        /**
         * Decodes a CurOrderbookUpdate message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurOrderbookUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurOrderbookUpdate;

        /**
         * Verifies a CurOrderbookUpdate message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurOrderbookUpdate message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurOrderbookUpdate
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurOrderbookUpdate;

        /**
         * Creates a plain object from a CurOrderbookUpdate message. Also converts values to other types if specified.
         * @param message CurOrderbookUpdate
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurOrderbookUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurOrderbookUpdate to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Total. */
    interface ITotal {

        /** Total instrumentId */
        instrumentId?: (number|null);

        /** Total marketSector */
        marketSector?: (IRIS.MarketSector|null);

        /** Total dealType */
        dealType?: (IRIS.DealType|null);

        /** Total instrumentCode */
        instrumentCode?: (string|null);

        /** Total secType */
        secType?: (IRIS.SecType|null);

        /** Total price */
        price?: (IRIS.IOhlc|null);

        /** Total volume */
        volume?: (IRIS.IOhlc|null);

        /** Total kztSum */
        kztSum?: (IRIS.IDecimal|null);

        /** Total kztSumTrend */
        kztSumTrend?: (IRIS.IDecimal|null);

        /** Total kztSumTrendPs */
        kztSumTrendPs?: (IRIS.IDecimal|null);

        /** Total usdSum */
        usdSum?: (IRIS.IDecimal|null);

        /** Total prevPeriod */
        prevPeriod?: (IRIS.ITotalsPeriod|null);

        /** Total dealCount */
        dealCount?: (number|null);

        /** Total orderCount */
        orderCount?: (number|null);

        /** Total government */
        government?: (boolean|null);

        /** Total period */
        period?: (IRIS.ITotalsPeriod|null);

        /** Total volumeSum */
        volumeSum?: (number|Long|null);

        /** Total actualSin */
        actualSin?: (string|null);
    }

    /** Represents a Total. */
    class Total implements ITotal {

        /**
         * Constructs a new Total.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ITotal);

        /** Total instrumentId. */
        public instrumentId: number;

        /** Total marketSector. */
        public marketSector: IRIS.MarketSector;

        /** Total dealType. */
        public dealType: IRIS.DealType;

        /** Total instrumentCode. */
        public instrumentCode: string;

        /** Total secType. */
        public secType: IRIS.SecType;

        /** Total price. */
        public price?: (IRIS.IOhlc|null);

        /** Total volume. */
        public volume?: (IRIS.IOhlc|null);

        /** Total kztSum. */
        public kztSum?: (IRIS.IDecimal|null);

        /** Total kztSumTrend. */
        public kztSumTrend?: (IRIS.IDecimal|null);

        /** Total kztSumTrendPs. */
        public kztSumTrendPs?: (IRIS.IDecimal|null);

        /** Total usdSum. */
        public usdSum?: (IRIS.IDecimal|null);

        /** Total prevPeriod. */
        public prevPeriod?: (IRIS.ITotalsPeriod|null);

        /** Total dealCount. */
        public dealCount: number;

        /** Total orderCount. */
        public orderCount: number;

        /** Total government. */
        public government: boolean;

        /** Total period. */
        public period?: (IRIS.ITotalsPeriod|null);

        /** Total volumeSum. */
        public volumeSum: (number|Long);

        /** Total actualSin. */
        public actualSin: string;

        /**
         * Creates a new Total instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Total instance
         */
        public static create(properties?: IRIS.ITotal): IRIS.Total;

        /**
         * Encodes the specified Total message. Does not implicitly {@link IRIS.Total.verify|verify} messages.
         * @param message Total message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ITotal, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Total message, length delimited. Does not implicitly {@link IRIS.Total.verify|verify} messages.
         * @param message Total message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ITotal, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Total message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Total
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.Total;

        /**
         * Decodes a Total message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Total
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.Total;

        /**
         * Verifies a Total message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Total message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Total
         */
        public static fromObject(object: { [k: string]: any }): IRIS.Total;

        /**
         * Creates a plain object from a Total message. Also converts values to other types if specified.
         * @param message Total
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.Total, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Total to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ShortTotalInfo. */
    interface IShortTotalInfo {

        /** ShortTotalInfo period */
        period?: (IRIS.IDate|null);

        /** ShortTotalInfo instrumentId */
        instrumentId?: (number|null);
    }

    /** Represents a ShortTotalInfo. */
    class ShortTotalInfo implements IShortTotalInfo {

        /**
         * Constructs a new ShortTotalInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IShortTotalInfo);

        /** ShortTotalInfo period. */
        public period?: (IRIS.IDate|null);

        /** ShortTotalInfo instrumentId. */
        public instrumentId: number;

        /**
         * Creates a new ShortTotalInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShortTotalInfo instance
         */
        public static create(properties?: IRIS.IShortTotalInfo): IRIS.ShortTotalInfo;

        /**
         * Encodes the specified ShortTotalInfo message. Does not implicitly {@link IRIS.ShortTotalInfo.verify|verify} messages.
         * @param message ShortTotalInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IShortTotalInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShortTotalInfo message, length delimited. Does not implicitly {@link IRIS.ShortTotalInfo.verify|verify} messages.
         * @param message ShortTotalInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IShortTotalInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShortTotalInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShortTotalInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.ShortTotalInfo;

        /**
         * Decodes a ShortTotalInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShortTotalInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.ShortTotalInfo;

        /**
         * Verifies a ShortTotalInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShortTotalInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShortTotalInfo
         */
        public static fromObject(object: { [k: string]: any }): IRIS.ShortTotalInfo;

        /**
         * Creates a plain object from a ShortTotalInfo message. Also converts values to other types if specified.
         * @param message ShortTotalInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.ShortTotalInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShortTotalInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TotalsFilter. */
    interface ITotalsFilter {

        /** TotalsFilter period */
        period?: (IRIS.ITotalsPeriod|null);

        /** TotalsFilter filter */
        filter?: (IRIS.IDealsBaseFilter|null);

        /** TotalsFilter allInstruments */
        allInstruments?: (boolean|null);
    }

    /** Represents a TotalsFilter. */
    class TotalsFilter implements ITotalsFilter {

        /**
         * Constructs a new TotalsFilter.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ITotalsFilter);

        /** TotalsFilter period. */
        public period?: (IRIS.ITotalsPeriod|null);

        /** TotalsFilter filter. */
        public filter?: (IRIS.IDealsBaseFilter|null);

        /** TotalsFilter allInstruments. */
        public allInstruments: boolean;

        /**
         * Creates a new TotalsFilter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TotalsFilter instance
         */
        public static create(properties?: IRIS.ITotalsFilter): IRIS.TotalsFilter;

        /**
         * Encodes the specified TotalsFilter message. Does not implicitly {@link IRIS.TotalsFilter.verify|verify} messages.
         * @param message TotalsFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ITotalsFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TotalsFilter message, length delimited. Does not implicitly {@link IRIS.TotalsFilter.verify|verify} messages.
         * @param message TotalsFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ITotalsFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TotalsFilter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TotalsFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.TotalsFilter;

        /**
         * Decodes a TotalsFilter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TotalsFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.TotalsFilter;

        /**
         * Verifies a TotalsFilter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TotalsFilter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TotalsFilter
         */
        public static fromObject(object: { [k: string]: any }): IRIS.TotalsFilter;

        /**
         * Creates a plain object from a TotalsFilter message. Also converts values to other types if specified.
         * @param message TotalsFilter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.TotalsFilter, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TotalsFilter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TotalsCountRequest. */
    interface ITotalsCountRequest {

        /** TotalsCountRequest filter */
        filter?: (IRIS.ITotalsFilter|null);
    }

    /** Represents a TotalsCountRequest. */
    class TotalsCountRequest implements ITotalsCountRequest {

        /**
         * Constructs a new TotalsCountRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ITotalsCountRequest);

        /** TotalsCountRequest filter. */
        public filter?: (IRIS.ITotalsFilter|null);

        /**
         * Creates a new TotalsCountRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TotalsCountRequest instance
         */
        public static create(properties?: IRIS.ITotalsCountRequest): IRIS.TotalsCountRequest;

        /**
         * Encodes the specified TotalsCountRequest message. Does not implicitly {@link IRIS.TotalsCountRequest.verify|verify} messages.
         * @param message TotalsCountRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ITotalsCountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TotalsCountRequest message, length delimited. Does not implicitly {@link IRIS.TotalsCountRequest.verify|verify} messages.
         * @param message TotalsCountRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ITotalsCountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TotalsCountRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TotalsCountRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.TotalsCountRequest;

        /**
         * Decodes a TotalsCountRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TotalsCountRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.TotalsCountRequest;

        /**
         * Verifies a TotalsCountRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TotalsCountRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TotalsCountRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.TotalsCountRequest;

        /**
         * Creates a plain object from a TotalsCountRequest message. Also converts values to other types if specified.
         * @param message TotalsCountRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.TotalsCountRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TotalsCountRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TotalsCountReply. */
    interface ITotalsCountReply {

        /** TotalsCountReply count */
        count?: (number|null);
    }

    /** Represents a TotalsCountReply. */
    class TotalsCountReply implements ITotalsCountReply {

        /**
         * Constructs a new TotalsCountReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ITotalsCountReply);

        /** TotalsCountReply count. */
        public count: number;

        /**
         * Creates a new TotalsCountReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TotalsCountReply instance
         */
        public static create(properties?: IRIS.ITotalsCountReply): IRIS.TotalsCountReply;

        /**
         * Encodes the specified TotalsCountReply message. Does not implicitly {@link IRIS.TotalsCountReply.verify|verify} messages.
         * @param message TotalsCountReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ITotalsCountReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TotalsCountReply message, length delimited. Does not implicitly {@link IRIS.TotalsCountReply.verify|verify} messages.
         * @param message TotalsCountReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ITotalsCountReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TotalsCountReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TotalsCountReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.TotalsCountReply;

        /**
         * Decodes a TotalsCountReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TotalsCountReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.TotalsCountReply;

        /**
         * Verifies a TotalsCountReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TotalsCountReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TotalsCountReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.TotalsCountReply;

        /**
         * Creates a plain object from a TotalsCountReply message. Also converts values to other types if specified.
         * @param message TotalsCountReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.TotalsCountReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TotalsCountReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TotalsRequest. */
    interface ITotalsRequest {

        /** TotalsRequest filter */
        filter?: (IRIS.ITotalsFilter|null);

        /** TotalsRequest range */
        range?: (IRIS.IRange|null);

        /** TotalsRequest bandle */
        bandle?: (number|null);
    }

    /** Represents a TotalsRequest. */
    class TotalsRequest implements ITotalsRequest {

        /**
         * Constructs a new TotalsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ITotalsRequest);

        /** TotalsRequest filter. */
        public filter?: (IRIS.ITotalsFilter|null);

        /** TotalsRequest range. */
        public range?: (IRIS.IRange|null);

        /** TotalsRequest bandle. */
        public bandle?: (number|null);

        /** TotalsRequest records. */
        public records?: ("range"|"bandle");

        /**
         * Creates a new TotalsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TotalsRequest instance
         */
        public static create(properties?: IRIS.ITotalsRequest): IRIS.TotalsRequest;

        /**
         * Encodes the specified TotalsRequest message. Does not implicitly {@link IRIS.TotalsRequest.verify|verify} messages.
         * @param message TotalsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ITotalsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TotalsRequest message, length delimited. Does not implicitly {@link IRIS.TotalsRequest.verify|verify} messages.
         * @param message TotalsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ITotalsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TotalsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TotalsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.TotalsRequest;

        /**
         * Decodes a TotalsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TotalsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.TotalsRequest;

        /**
         * Verifies a TotalsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TotalsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TotalsRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.TotalsRequest;

        /**
         * Creates a plain object from a TotalsRequest message. Also converts values to other types if specified.
         * @param message TotalsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.TotalsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TotalsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TotalsReply. */
    interface ITotalsReply {

        /** TotalsReply period */
        period?: (IRIS.ITotalsPeriod|null);

        /** TotalsReply range */
        range?: (IRIS.IRange|null);

        /** TotalsReply totals */
        totals?: (IRIS.ITotal[]|null);
    }

    /** Represents a TotalsReply. */
    class TotalsReply implements ITotalsReply {

        /**
         * Constructs a new TotalsReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ITotalsReply);

        /** TotalsReply period. */
        public period?: (IRIS.ITotalsPeriod|null);

        /** TotalsReply range. */
        public range?: (IRIS.IRange|null);

        /** TotalsReply totals. */
        public totals: IRIS.ITotal[];

        /**
         * Creates a new TotalsReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TotalsReply instance
         */
        public static create(properties?: IRIS.ITotalsReply): IRIS.TotalsReply;

        /**
         * Encodes the specified TotalsReply message. Does not implicitly {@link IRIS.TotalsReply.verify|verify} messages.
         * @param message TotalsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ITotalsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TotalsReply message, length delimited. Does not implicitly {@link IRIS.TotalsReply.verify|verify} messages.
         * @param message TotalsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ITotalsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TotalsReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TotalsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.TotalsReply;

        /**
         * Decodes a TotalsReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TotalsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.TotalsReply;

        /**
         * Verifies a TotalsReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TotalsReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TotalsReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.TotalsReply;

        /**
         * Creates a plain object from a TotalsReply message. Also converts values to other types if specified.
         * @param message TotalsReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.TotalsReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TotalsReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TotalsUpdate. */
    interface ITotalsUpdate {

        /** TotalsUpdate totals */
        totals?: (IRIS.IShortTotalInfo[]|null);
    }

    /** Represents a TotalsUpdate. */
    class TotalsUpdate implements ITotalsUpdate {

        /**
         * Constructs a new TotalsUpdate.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ITotalsUpdate);

        /** TotalsUpdate totals. */
        public totals: IRIS.IShortTotalInfo[];

        /**
         * Creates a new TotalsUpdate instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TotalsUpdate instance
         */
        public static create(properties?: IRIS.ITotalsUpdate): IRIS.TotalsUpdate;

        /**
         * Encodes the specified TotalsUpdate message. Does not implicitly {@link IRIS.TotalsUpdate.verify|verify} messages.
         * @param message TotalsUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ITotalsUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TotalsUpdate message, length delimited. Does not implicitly {@link IRIS.TotalsUpdate.verify|verify} messages.
         * @param message TotalsUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ITotalsUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TotalsUpdate message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TotalsUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.TotalsUpdate;

        /**
         * Decodes a TotalsUpdate message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TotalsUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.TotalsUpdate;

        /**
         * Verifies a TotalsUpdate message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TotalsUpdate message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TotalsUpdate
         */
        public static fromObject(object: { [k: string]: any }): IRIS.TotalsUpdate;

        /**
         * Creates a plain object from a TotalsUpdate message. Also converts values to other types if specified.
         * @param message TotalsUpdate
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.TotalsUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TotalsUpdate to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a QuotationsRequest. */
    interface IQuotationsRequest {

        /** QuotationsRequest filter */
        filter?: (IRIS.IDealsBaseFilter|null);
    }

    /** Represents a QuotationsRequest. */
    class QuotationsRequest implements IQuotationsRequest {

        /**
         * Constructs a new QuotationsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IQuotationsRequest);

        /** QuotationsRequest filter. */
        public filter?: (IRIS.IDealsBaseFilter|null);

        /**
         * Creates a new QuotationsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns QuotationsRequest instance
         */
        public static create(properties?: IRIS.IQuotationsRequest): IRIS.QuotationsRequest;

        /**
         * Encodes the specified QuotationsRequest message. Does not implicitly {@link IRIS.QuotationsRequest.verify|verify} messages.
         * @param message QuotationsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IQuotationsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified QuotationsRequest message, length delimited. Does not implicitly {@link IRIS.QuotationsRequest.verify|verify} messages.
         * @param message QuotationsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IQuotationsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a QuotationsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns QuotationsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.QuotationsRequest;

        /**
         * Decodes a QuotationsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns QuotationsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.QuotationsRequest;

        /**
         * Verifies a QuotationsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a QuotationsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns QuotationsRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.QuotationsRequest;

        /**
         * Creates a plain object from a QuotationsRequest message. Also converts values to other types if specified.
         * @param message QuotationsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.QuotationsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this QuotationsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a QuotationsReply. */
    interface IQuotationsReply {

        /** QuotationsReply totals */
        totals?: (IRIS.ITotal[]|null);
    }

    /** Represents a QuotationsReply. */
    class QuotationsReply implements IQuotationsReply {

        /**
         * Constructs a new QuotationsReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IQuotationsReply);

        /** QuotationsReply totals. */
        public totals: IRIS.ITotal[];

        /**
         * Creates a new QuotationsReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns QuotationsReply instance
         */
        public static create(properties?: IRIS.IQuotationsReply): IRIS.QuotationsReply;

        /**
         * Encodes the specified QuotationsReply message. Does not implicitly {@link IRIS.QuotationsReply.verify|verify} messages.
         * @param message QuotationsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IQuotationsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified QuotationsReply message, length delimited. Does not implicitly {@link IRIS.QuotationsReply.verify|verify} messages.
         * @param message QuotationsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IQuotationsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a QuotationsReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns QuotationsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.QuotationsReply;

        /**
         * Decodes a QuotationsReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns QuotationsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.QuotationsReply;

        /**
         * Verifies a QuotationsReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a QuotationsReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns QuotationsReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.QuotationsReply;

        /**
         * Creates a plain object from a QuotationsReply message. Also converts values to other types if specified.
         * @param message QuotationsReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.QuotationsReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this QuotationsReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RisersFallersRequest. */
    interface IRisersFallersRequest {

        /** RisersFallersRequest leaderType */
        leaderType?: (IRIS.LeaderType|null);

        /** RisersFallersRequest depth */
        depth?: (number|null);

        /** RisersFallersRequest secType */
        secType?: (IRIS.SecType|null);

        /** RisersFallersRequest government */
        government?: (IRIS.GovernmentSelector|null);
    }

    /** Represents a RisersFallersRequest. */
    class RisersFallersRequest implements IRisersFallersRequest {

        /**
         * Constructs a new RisersFallersRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IRisersFallersRequest);

        /** RisersFallersRequest leaderType. */
        public leaderType: IRIS.LeaderType;

        /** RisersFallersRequest depth. */
        public depth: number;

        /** RisersFallersRequest secType. */
        public secType: IRIS.SecType;

        /** RisersFallersRequest government. */
        public government: IRIS.GovernmentSelector;

        /**
         * Creates a new RisersFallersRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RisersFallersRequest instance
         */
        public static create(properties?: IRIS.IRisersFallersRequest): IRIS.RisersFallersRequest;

        /**
         * Encodes the specified RisersFallersRequest message. Does not implicitly {@link IRIS.RisersFallersRequest.verify|verify} messages.
         * @param message RisersFallersRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IRisersFallersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RisersFallersRequest message, length delimited. Does not implicitly {@link IRIS.RisersFallersRequest.verify|verify} messages.
         * @param message RisersFallersRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IRisersFallersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RisersFallersRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RisersFallersRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.RisersFallersRequest;

        /**
         * Decodes a RisersFallersRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RisersFallersRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.RisersFallersRequest;

        /**
         * Verifies a RisersFallersRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RisersFallersRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RisersFallersRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.RisersFallersRequest;

        /**
         * Creates a plain object from a RisersFallersRequest message. Also converts values to other types if specified.
         * @param message RisersFallersRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.RisersFallersRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RisersFallersRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RisersFallersReply. */
    interface IRisersFallersReply {

        /** RisersFallersReply leaderType */
        leaderType?: (IRIS.LeaderType|null);

        /** RisersFallersReply secType */
        secType?: (IRIS.SecType|null);

        /** RisersFallersReply government */
        government?: (IRIS.GovernmentSelector|null);

        /** RisersFallersReply totals */
        totals?: (IRIS.ITotal[]|null);
    }

    /** Represents a RisersFallersReply. */
    class RisersFallersReply implements IRisersFallersReply {

        /**
         * Constructs a new RisersFallersReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IRisersFallersReply);

        /** RisersFallersReply leaderType. */
        public leaderType: IRIS.LeaderType;

        /** RisersFallersReply secType. */
        public secType: IRIS.SecType;

        /** RisersFallersReply government. */
        public government: IRIS.GovernmentSelector;

        /** RisersFallersReply totals. */
        public totals: IRIS.ITotal[];

        /**
         * Creates a new RisersFallersReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RisersFallersReply instance
         */
        public static create(properties?: IRIS.IRisersFallersReply): IRIS.RisersFallersReply;

        /**
         * Encodes the specified RisersFallersReply message. Does not implicitly {@link IRIS.RisersFallersReply.verify|verify} messages.
         * @param message RisersFallersReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IRisersFallersReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RisersFallersReply message, length delimited. Does not implicitly {@link IRIS.RisersFallersReply.verify|verify} messages.
         * @param message RisersFallersReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IRisersFallersReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RisersFallersReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RisersFallersReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.RisersFallersReply;

        /**
         * Decodes a RisersFallersReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RisersFallersReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.RisersFallersReply;

        /**
         * Verifies a RisersFallersReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RisersFallersReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RisersFallersReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.RisersFallersReply;

        /**
         * Creates a plain object from a RisersFallersReply message. Also converts values to other types if specified.
         * @param message RisersFallersReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.RisersFallersReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RisersFallersReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurTotal. */
    interface ICurTotal {

        /** CurTotal instrumentId */
        instrumentId?: (number|null);

        /** CurTotal instrumentCode */
        instrumentCode?: (string|null);

        /** CurTotal sessionId */
        sessionId?: (number|null);

        /** CurTotal price */
        price?: (IRIS.IOhlc|null);

        /** CurTotal volume */
        volume?: (IRIS.IOhlc|null);

        /** CurTotal sum */
        sum?: (number|Long|null);

        /** CurTotal sumTrend */
        sumTrend?: (number|Long|null);

        /** CurTotal sumTrendPs */
        sumTrendPs?: (IRIS.IDecimal|null);

        /** CurTotal kztSum */
        kztSum?: (IRIS.IDecimal|null);

        /** CurTotal kztSumTrend */
        kztSumTrend?: (IRIS.IDecimal|null);

        /** CurTotal kztSumTrendPs */
        kztSumTrendPs?: (IRIS.IDecimal|null);

        /** CurTotal prevPeriod */
        prevPeriod?: (IRIS.ITotalsPeriod|null);

        /** CurTotal dealCount */
        dealCount?: (number|null);

        /** CurTotal dealersCount */
        dealersCount?: (number|null);

        /** CurTotal bidPrice */
        bidPrice?: (IRIS.IDecimal|null);

        /** CurTotal askPrice */
        askPrice?: (IRIS.IDecimal|null);

        /** CurTotal usdSum */
        usdSum?: (IRIS.IDecimal|null);

        /** CurTotal period */
        period?: (IRIS.ITotalsPeriod|null);
    }

    /** Represents a CurTotal. */
    class CurTotal implements ICurTotal {

        /**
         * Constructs a new CurTotal.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurTotal);

        /** CurTotal instrumentId. */
        public instrumentId: number;

        /** CurTotal instrumentCode. */
        public instrumentCode: string;

        /** CurTotal sessionId. */
        public sessionId: number;

        /** CurTotal price. */
        public price?: (IRIS.IOhlc|null);

        /** CurTotal volume. */
        public volume?: (IRIS.IOhlc|null);

        /** CurTotal sum. */
        public sum: (number|Long);

        /** CurTotal sumTrend. */
        public sumTrend: (number|Long);

        /** CurTotal sumTrendPs. */
        public sumTrendPs?: (IRIS.IDecimal|null);

        /** CurTotal kztSum. */
        public kztSum?: (IRIS.IDecimal|null);

        /** CurTotal kztSumTrend. */
        public kztSumTrend?: (IRIS.IDecimal|null);

        /** CurTotal kztSumTrendPs. */
        public kztSumTrendPs?: (IRIS.IDecimal|null);

        /** CurTotal prevPeriod. */
        public prevPeriod?: (IRIS.ITotalsPeriod|null);

        /** CurTotal dealCount. */
        public dealCount: number;

        /** CurTotal dealersCount. */
        public dealersCount: number;

        /** CurTotal bidPrice. */
        public bidPrice?: (IRIS.IDecimal|null);

        /** CurTotal askPrice. */
        public askPrice?: (IRIS.IDecimal|null);

        /** CurTotal usdSum. */
        public usdSum?: (IRIS.IDecimal|null);

        /** CurTotal period. */
        public period?: (IRIS.ITotalsPeriod|null);

        /**
         * Creates a new CurTotal instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurTotal instance
         */
        public static create(properties?: IRIS.ICurTotal): IRIS.CurTotal;

        /**
         * Encodes the specified CurTotal message. Does not implicitly {@link IRIS.CurTotal.verify|verify} messages.
         * @param message CurTotal message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurTotal, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurTotal message, length delimited. Does not implicitly {@link IRIS.CurTotal.verify|verify} messages.
         * @param message CurTotal message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurTotal, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurTotal message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurTotal
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurTotal;

        /**
         * Decodes a CurTotal message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurTotal
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurTotal;

        /**
         * Verifies a CurTotal message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurTotal message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurTotal
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurTotal;

        /**
         * Creates a plain object from a CurTotal message. Also converts values to other types if specified.
         * @param message CurTotal
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurTotal, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurTotal to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ShortCurTotalInfo. */
    interface IShortCurTotalInfo {

        /** ShortCurTotalInfo period */
        period?: (IRIS.IDate|null);

        /** ShortCurTotalInfo instrumentId */
        instrumentId?: (number|null);

        /** ShortCurTotalInfo sessionId */
        sessionId?: (number|null);
    }

    /** Represents a ShortCurTotalInfo. */
    class ShortCurTotalInfo implements IShortCurTotalInfo {

        /**
         * Constructs a new ShortCurTotalInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IShortCurTotalInfo);

        /** ShortCurTotalInfo period. */
        public period?: (IRIS.IDate|null);

        /** ShortCurTotalInfo instrumentId. */
        public instrumentId: number;

        /** ShortCurTotalInfo sessionId. */
        public sessionId: number;

        /**
         * Creates a new ShortCurTotalInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShortCurTotalInfo instance
         */
        public static create(properties?: IRIS.IShortCurTotalInfo): IRIS.ShortCurTotalInfo;

        /**
         * Encodes the specified ShortCurTotalInfo message. Does not implicitly {@link IRIS.ShortCurTotalInfo.verify|verify} messages.
         * @param message ShortCurTotalInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IShortCurTotalInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShortCurTotalInfo message, length delimited. Does not implicitly {@link IRIS.ShortCurTotalInfo.verify|verify} messages.
         * @param message ShortCurTotalInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IShortCurTotalInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShortCurTotalInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShortCurTotalInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.ShortCurTotalInfo;

        /**
         * Decodes a ShortCurTotalInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShortCurTotalInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.ShortCurTotalInfo;

        /**
         * Verifies a ShortCurTotalInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShortCurTotalInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShortCurTotalInfo
         */
        public static fromObject(object: { [k: string]: any }): IRIS.ShortCurTotalInfo;

        /**
         * Creates a plain object from a ShortCurTotalInfo message. Also converts values to other types if specified.
         * @param message ShortCurTotalInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.ShortCurTotalInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShortCurTotalInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurTotalsFilter. */
    interface ICurTotalsFilter {

        /** CurTotalsFilter period */
        period?: (IRIS.ITotalsPeriod|null);

        /** CurTotalsFilter codes */
        codes?: (string[]|null);

        /** CurTotalsFilter instrumentIds */
        instrumentIds?: (number[]|null);

        /** CurTotalsFilter sessionIds */
        sessionIds?: (number[]|null);

        /** CurTotalsFilter allInstruments */
        allInstruments?: (boolean|null);
    }

    /** Represents a CurTotalsFilter. */
    class CurTotalsFilter implements ICurTotalsFilter {

        /**
         * Constructs a new CurTotalsFilter.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurTotalsFilter);

        /** CurTotalsFilter period. */
        public period?: (IRIS.ITotalsPeriod|null);

        /** CurTotalsFilter codes. */
        public codes: string[];

        /** CurTotalsFilter instrumentIds. */
        public instrumentIds: number[];

        /** CurTotalsFilter sessionIds. */
        public sessionIds: number[];

        /** CurTotalsFilter allInstruments. */
        public allInstruments: boolean;

        /**
         * Creates a new CurTotalsFilter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurTotalsFilter instance
         */
        public static create(properties?: IRIS.ICurTotalsFilter): IRIS.CurTotalsFilter;

        /**
         * Encodes the specified CurTotalsFilter message. Does not implicitly {@link IRIS.CurTotalsFilter.verify|verify} messages.
         * @param message CurTotalsFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurTotalsFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurTotalsFilter message, length delimited. Does not implicitly {@link IRIS.CurTotalsFilter.verify|verify} messages.
         * @param message CurTotalsFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurTotalsFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurTotalsFilter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurTotalsFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurTotalsFilter;

        /**
         * Decodes a CurTotalsFilter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurTotalsFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurTotalsFilter;

        /**
         * Verifies a CurTotalsFilter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurTotalsFilter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurTotalsFilter
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurTotalsFilter;

        /**
         * Creates a plain object from a CurTotalsFilter message. Also converts values to other types if specified.
         * @param message CurTotalsFilter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurTotalsFilter, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurTotalsFilter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurTotalsCountRequest. */
    interface ICurTotalsCountRequest {

        /** CurTotalsCountRequest filter */
        filter?: (IRIS.ICurTotalsFilter|null);
    }

    /** Represents a CurTotalsCountRequest. */
    class CurTotalsCountRequest implements ICurTotalsCountRequest {

        /**
         * Constructs a new CurTotalsCountRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurTotalsCountRequest);

        /** CurTotalsCountRequest filter. */
        public filter?: (IRIS.ICurTotalsFilter|null);

        /**
         * Creates a new CurTotalsCountRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurTotalsCountRequest instance
         */
        public static create(properties?: IRIS.ICurTotalsCountRequest): IRIS.CurTotalsCountRequest;

        /**
         * Encodes the specified CurTotalsCountRequest message. Does not implicitly {@link IRIS.CurTotalsCountRequest.verify|verify} messages.
         * @param message CurTotalsCountRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurTotalsCountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurTotalsCountRequest message, length delimited. Does not implicitly {@link IRIS.CurTotalsCountRequest.verify|verify} messages.
         * @param message CurTotalsCountRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurTotalsCountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurTotalsCountRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurTotalsCountRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurTotalsCountRequest;

        /**
         * Decodes a CurTotalsCountRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurTotalsCountRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurTotalsCountRequest;

        /**
         * Verifies a CurTotalsCountRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurTotalsCountRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurTotalsCountRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurTotalsCountRequest;

        /**
         * Creates a plain object from a CurTotalsCountRequest message. Also converts values to other types if specified.
         * @param message CurTotalsCountRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurTotalsCountRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurTotalsCountRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurTotalsCountReply. */
    interface ICurTotalsCountReply {

        /** CurTotalsCountReply count */
        count?: (number|null);
    }

    /** Represents a CurTotalsCountReply. */
    class CurTotalsCountReply implements ICurTotalsCountReply {

        /**
         * Constructs a new CurTotalsCountReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurTotalsCountReply);

        /** CurTotalsCountReply count. */
        public count: number;

        /**
         * Creates a new CurTotalsCountReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurTotalsCountReply instance
         */
        public static create(properties?: IRIS.ICurTotalsCountReply): IRIS.CurTotalsCountReply;

        /**
         * Encodes the specified CurTotalsCountReply message. Does not implicitly {@link IRIS.CurTotalsCountReply.verify|verify} messages.
         * @param message CurTotalsCountReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurTotalsCountReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurTotalsCountReply message, length delimited. Does not implicitly {@link IRIS.CurTotalsCountReply.verify|verify} messages.
         * @param message CurTotalsCountReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurTotalsCountReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurTotalsCountReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurTotalsCountReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurTotalsCountReply;

        /**
         * Decodes a CurTotalsCountReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurTotalsCountReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurTotalsCountReply;

        /**
         * Verifies a CurTotalsCountReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurTotalsCountReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurTotalsCountReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurTotalsCountReply;

        /**
         * Creates a plain object from a CurTotalsCountReply message. Also converts values to other types if specified.
         * @param message CurTotalsCountReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurTotalsCountReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurTotalsCountReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurTotalsRequest. */
    interface ICurTotalsRequest {

        /** CurTotalsRequest filter */
        filter?: (IRIS.ICurTotalsFilter|null);

        /** CurTotalsRequest range */
        range?: (IRIS.IRange|null);

        /** CurTotalsRequest bandle */
        bandle?: (number|null);
    }

    /** Represents a CurTotalsRequest. */
    class CurTotalsRequest implements ICurTotalsRequest {

        /**
         * Constructs a new CurTotalsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurTotalsRequest);

        /** CurTotalsRequest filter. */
        public filter?: (IRIS.ICurTotalsFilter|null);

        /** CurTotalsRequest range. */
        public range?: (IRIS.IRange|null);

        /** CurTotalsRequest bandle. */
        public bandle?: (number|null);

        /** CurTotalsRequest records. */
        public records?: ("range"|"bandle");

        /**
         * Creates a new CurTotalsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurTotalsRequest instance
         */
        public static create(properties?: IRIS.ICurTotalsRequest): IRIS.CurTotalsRequest;

        /**
         * Encodes the specified CurTotalsRequest message. Does not implicitly {@link IRIS.CurTotalsRequest.verify|verify} messages.
         * @param message CurTotalsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurTotalsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurTotalsRequest message, length delimited. Does not implicitly {@link IRIS.CurTotalsRequest.verify|verify} messages.
         * @param message CurTotalsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurTotalsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurTotalsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurTotalsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurTotalsRequest;

        /**
         * Decodes a CurTotalsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurTotalsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurTotalsRequest;

        /**
         * Verifies a CurTotalsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurTotalsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurTotalsRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurTotalsRequest;

        /**
         * Creates a plain object from a CurTotalsRequest message. Also converts values to other types if specified.
         * @param message CurTotalsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurTotalsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurTotalsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurTotalsReply. */
    interface ICurTotalsReply {

        /** CurTotalsReply period */
        period?: (IRIS.ITotalsPeriod|null);

        /** CurTotalsReply range */
        range?: (IRIS.IRange|null);

        /** CurTotalsReply totals */
        totals?: (IRIS.ICurTotal[]|null);
    }

    /** Represents a CurTotalsReply. */
    class CurTotalsReply implements ICurTotalsReply {

        /**
         * Constructs a new CurTotalsReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurTotalsReply);

        /** CurTotalsReply period. */
        public period?: (IRIS.ITotalsPeriod|null);

        /** CurTotalsReply range. */
        public range?: (IRIS.IRange|null);

        /** CurTotalsReply totals. */
        public totals: IRIS.ICurTotal[];

        /**
         * Creates a new CurTotalsReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurTotalsReply instance
         */
        public static create(properties?: IRIS.ICurTotalsReply): IRIS.CurTotalsReply;

        /**
         * Encodes the specified CurTotalsReply message. Does not implicitly {@link IRIS.CurTotalsReply.verify|verify} messages.
         * @param message CurTotalsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurTotalsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurTotalsReply message, length delimited. Does not implicitly {@link IRIS.CurTotalsReply.verify|verify} messages.
         * @param message CurTotalsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurTotalsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurTotalsReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurTotalsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurTotalsReply;

        /**
         * Decodes a CurTotalsReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurTotalsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurTotalsReply;

        /**
         * Verifies a CurTotalsReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurTotalsReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurTotalsReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurTotalsReply;

        /**
         * Creates a plain object from a CurTotalsReply message. Also converts values to other types if specified.
         * @param message CurTotalsReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurTotalsReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurTotalsReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurQuotationsRequest. */
    interface ICurQuotationsRequest {

        /** CurQuotationsRequest filter */
        filter?: (IRIS.ICurTotalsFilter|null);
    }

    /** Represents a CurQuotationsRequest. */
    class CurQuotationsRequest implements ICurQuotationsRequest {

        /**
         * Constructs a new CurQuotationsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurQuotationsRequest);

        /** CurQuotationsRequest filter. */
        public filter?: (IRIS.ICurTotalsFilter|null);

        /**
         * Creates a new CurQuotationsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurQuotationsRequest instance
         */
        public static create(properties?: IRIS.ICurQuotationsRequest): IRIS.CurQuotationsRequest;

        /**
         * Encodes the specified CurQuotationsRequest message. Does not implicitly {@link IRIS.CurQuotationsRequest.verify|verify} messages.
         * @param message CurQuotationsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurQuotationsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurQuotationsRequest message, length delimited. Does not implicitly {@link IRIS.CurQuotationsRequest.verify|verify} messages.
         * @param message CurQuotationsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurQuotationsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurQuotationsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurQuotationsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurQuotationsRequest;

        /**
         * Decodes a CurQuotationsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurQuotationsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurQuotationsRequest;

        /**
         * Verifies a CurQuotationsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurQuotationsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurQuotationsRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurQuotationsRequest;

        /**
         * Creates a plain object from a CurQuotationsRequest message. Also converts values to other types if specified.
         * @param message CurQuotationsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurQuotationsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurQuotationsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurQuotationsReply. */
    interface ICurQuotationsReply {

        /** CurQuotationsReply totals */
        totals?: (IRIS.ICurTotal[]|null);
    }

    /** Represents a CurQuotationsReply. */
    class CurQuotationsReply implements ICurQuotationsReply {

        /**
         * Constructs a new CurQuotationsReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurQuotationsReply);

        /** CurQuotationsReply totals. */
        public totals: IRIS.ICurTotal[];

        /**
         * Creates a new CurQuotationsReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurQuotationsReply instance
         */
        public static create(properties?: IRIS.ICurQuotationsReply): IRIS.CurQuotationsReply;

        /**
         * Encodes the specified CurQuotationsReply message. Does not implicitly {@link IRIS.CurQuotationsReply.verify|verify} messages.
         * @param message CurQuotationsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurQuotationsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurQuotationsReply message, length delimited. Does not implicitly {@link IRIS.CurQuotationsReply.verify|verify} messages.
         * @param message CurQuotationsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurQuotationsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurQuotationsReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurQuotationsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurQuotationsReply;

        /**
         * Decodes a CurQuotationsReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurQuotationsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurQuotationsReply;

        /**
         * Verifies a CurQuotationsReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurQuotationsReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurQuotationsReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurQuotationsReply;

        /**
         * Creates a plain object from a CurQuotationsReply message. Also converts values to other types if specified.
         * @param message CurQuotationsReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurQuotationsReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurQuotationsReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurTotalsUpdate. */
    interface ICurTotalsUpdate {

        /** CurTotalsUpdate totals */
        totals?: (IRIS.IShortCurTotalInfo[]|null);
    }

    /** Represents a CurTotalsUpdate. */
    class CurTotalsUpdate implements ICurTotalsUpdate {

        /**
         * Constructs a new CurTotalsUpdate.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurTotalsUpdate);

        /** CurTotalsUpdate totals. */
        public totals: IRIS.IShortCurTotalInfo[];

        /**
         * Creates a new CurTotalsUpdate instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurTotalsUpdate instance
         */
        public static create(properties?: IRIS.ICurTotalsUpdate): IRIS.CurTotalsUpdate;

        /**
         * Encodes the specified CurTotalsUpdate message. Does not implicitly {@link IRIS.CurTotalsUpdate.verify|verify} messages.
         * @param message CurTotalsUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurTotalsUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurTotalsUpdate message, length delimited. Does not implicitly {@link IRIS.CurTotalsUpdate.verify|verify} messages.
         * @param message CurTotalsUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurTotalsUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurTotalsUpdate message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurTotalsUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurTotalsUpdate;

        /**
         * Decodes a CurTotalsUpdate message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurTotalsUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurTotalsUpdate;

        /**
         * Verifies a CurTotalsUpdate message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurTotalsUpdate message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurTotalsUpdate
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurTotalsUpdate;

        /**
         * Creates a plain object from a CurTotalsUpdate message. Also converts values to other types if specified.
         * @param message CurTotalsUpdate
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurTotalsUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurTotalsUpdate to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a News. */
    interface INews {

        /** News newsId */
        newsId?: (number|null);

        /** News newsTime */
        newsTime?: (IRIS.IDateTime|null);

        /** News title */
        title?: (string|null);

        /** News lang */
        lang?: (IRIS.Language|null);

        /** News begTime */
        begTime?: (IRIS.IDateTime|null);

        /** News endTime */
        endTime?: (IRIS.IDateTime|null);

        /** News eventplace */
        eventplace?: (string|null);

        /** News sourceId */
        sourceId?: (number|null);

        /** News comments */
        comments?: (string|null);

        /** News version */
        version?: (number|Long|null);

        /** News selected */
        selected?: (boolean|null);
    }

    /** Represents a News. */
    class News implements INews {

        /**
         * Constructs a new News.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.INews);

        /** News newsId. */
        public newsId: number;

        /** News newsTime. */
        public newsTime?: (IRIS.IDateTime|null);

        /** News title. */
        public title: string;

        /** News lang. */
        public lang: IRIS.Language;

        /** News begTime. */
        public begTime?: (IRIS.IDateTime|null);

        /** News endTime. */
        public endTime?: (IRIS.IDateTime|null);

        /** News eventplace. */
        public eventplace: string;

        /** News sourceId. */
        public sourceId: number;

        /** News comments. */
        public comments: string;

        /** News version. */
        public version: (number|Long);

        /** News selected. */
        public selected: boolean;

        /**
         * Creates a new News instance using the specified properties.
         * @param [properties] Properties to set
         * @returns News instance
         */
        public static create(properties?: IRIS.INews): IRIS.News;

        /**
         * Encodes the specified News message. Does not implicitly {@link IRIS.News.verify|verify} messages.
         * @param message News message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.INews, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified News message, length delimited. Does not implicitly {@link IRIS.News.verify|verify} messages.
         * @param message News message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.INews, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a News message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns News
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.News;

        /**
         * Decodes a News message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns News
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.News;

        /**
         * Verifies a News message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a News message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns News
         */
        public static fromObject(object: { [k: string]: any }): IRIS.News;

        /**
         * Creates a plain object from a News message. Also converts values to other types if specified.
         * @param message News
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.News, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this News to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a NewsBody. */
    interface INewsBody {

        /** NewsBody newsId */
        newsId?: (number|null);

        /** NewsBody body */
        body?: (string|null);
    }

    /** Represents a NewsBody. */
    class NewsBody implements INewsBody {

        /**
         * Constructs a new NewsBody.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.INewsBody);

        /** NewsBody newsId. */
        public newsId: number;

        /** NewsBody body. */
        public body: string;

        /**
         * Creates a new NewsBody instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NewsBody instance
         */
        public static create(properties?: IRIS.INewsBody): IRIS.NewsBody;

        /**
         * Encodes the specified NewsBody message. Does not implicitly {@link IRIS.NewsBody.verify|verify} messages.
         * @param message NewsBody message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.INewsBody, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NewsBody message, length delimited. Does not implicitly {@link IRIS.NewsBody.verify|verify} messages.
         * @param message NewsBody message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.INewsBody, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NewsBody message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NewsBody
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.NewsBody;

        /**
         * Decodes a NewsBody message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NewsBody
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.NewsBody;

        /**
         * Verifies a NewsBody message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NewsBody message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NewsBody
         */
        public static fromObject(object: { [k: string]: any }): IRIS.NewsBody;

        /**
         * Creates a plain object from a NewsBody message. Also converts values to other types if specified.
         * @param message NewsBody
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.NewsBody, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NewsBody to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a NewsRefs. */
    interface INewsRefs {

        /** NewsRefs newsId */
        newsId?: (number|null);

        /** NewsRefs newssectionsIds */
        newssectionsIds?: (number[]|null);

        /** NewsRefs secsIds */
        secsIds?: (number[]|null);

        /** NewsRefs issuersIds */
        issuersIds?: (number[]|null);

        /** NewsRefs filesIds */
        filesIds?: (number[]|null);
    }

    /** Represents a NewsRefs. */
    class NewsRefs implements INewsRefs {

        /**
         * Constructs a new NewsRefs.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.INewsRefs);

        /** NewsRefs newsId. */
        public newsId: number;

        /** NewsRefs newssectionsIds. */
        public newssectionsIds: number[];

        /** NewsRefs secsIds. */
        public secsIds: number[];

        /** NewsRefs issuersIds. */
        public issuersIds: number[];

        /** NewsRefs filesIds. */
        public filesIds: number[];

        /**
         * Creates a new NewsRefs instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NewsRefs instance
         */
        public static create(properties?: IRIS.INewsRefs): IRIS.NewsRefs;

        /**
         * Encodes the specified NewsRefs message. Does not implicitly {@link IRIS.NewsRefs.verify|verify} messages.
         * @param message NewsRefs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.INewsRefs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NewsRefs message, length delimited. Does not implicitly {@link IRIS.NewsRefs.verify|verify} messages.
         * @param message NewsRefs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.INewsRefs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NewsRefs message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NewsRefs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.NewsRefs;

        /**
         * Decodes a NewsRefs message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NewsRefs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.NewsRefs;

        /**
         * Verifies a NewsRefs message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NewsRefs message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NewsRefs
         */
        public static fromObject(object: { [k: string]: any }): IRIS.NewsRefs;

        /**
         * Creates a plain object from a NewsRefs message. Also converts values to other types if specified.
         * @param message NewsRefs
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.NewsRefs, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NewsRefs to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** NewsSortField enum. */
    enum NewsSortField {
        NSF_NEWS_TIME = 0,
        NSF_TITLE = 1,
        NSF_LANG = 2,
        NSF_BEG_TIME = 3,
        NSF_END_TIME = 4,
        NSF_SOURCE_ID = 5,
        NSF_VERSION = 6,
        NSF_ID = 7
    }

    /** Properties of a ShortNewsInfo. */
    interface IShortNewsInfo {

        /** ShortNewsInfo newsId */
        newsId?: (number|null);

        /** ShortNewsInfo newsTime */
        newsTime?: (IRIS.IDateTime|null);

        /** ShortNewsInfo lang */
        lang?: (IRIS.Language|null);

        /** ShortNewsInfo eventType */
        eventType?: (IRIS.EventType|null);
    }

    /** Represents a ShortNewsInfo. */
    class ShortNewsInfo implements IShortNewsInfo {

        /**
         * Constructs a new ShortNewsInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IShortNewsInfo);

        /** ShortNewsInfo newsId. */
        public newsId: number;

        /** ShortNewsInfo newsTime. */
        public newsTime?: (IRIS.IDateTime|null);

        /** ShortNewsInfo lang. */
        public lang: IRIS.Language;

        /** ShortNewsInfo eventType. */
        public eventType: IRIS.EventType;

        /**
         * Creates a new ShortNewsInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShortNewsInfo instance
         */
        public static create(properties?: IRIS.IShortNewsInfo): IRIS.ShortNewsInfo;

        /**
         * Encodes the specified ShortNewsInfo message. Does not implicitly {@link IRIS.ShortNewsInfo.verify|verify} messages.
         * @param message ShortNewsInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IShortNewsInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShortNewsInfo message, length delimited. Does not implicitly {@link IRIS.ShortNewsInfo.verify|verify} messages.
         * @param message ShortNewsInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IShortNewsInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShortNewsInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShortNewsInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.ShortNewsInfo;

        /**
         * Decodes a ShortNewsInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShortNewsInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.ShortNewsInfo;

        /**
         * Verifies a ShortNewsInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShortNewsInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShortNewsInfo
         */
        public static fromObject(object: { [k: string]: any }): IRIS.ShortNewsInfo;

        /**
         * Creates a plain object from a ShortNewsInfo message. Also converts values to other types if specified.
         * @param message ShortNewsInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.ShortNewsInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShortNewsInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a File. */
    interface IFile {

        /** File filesId */
        filesId?: (number|null);

        /** File created */
        created?: (IRIS.IDateTime|null);

        /** File filetypesId */
        filetypesId?: (number|null);

        /** File filename */
        filename?: (string|null);

        /** File crc32 */
        crc32?: (number|Long|null);

        /** File size */
        size?: (number|null);

        /** File description */
        description?: (string|null);

        /** File url */
        url?: (string|null);
    }

    /** Represents a File. */
    class File implements IFile {

        /**
         * Constructs a new File.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IFile);

        /** File filesId. */
        public filesId: number;

        /** File created. */
        public created?: (IRIS.IDateTime|null);

        /** File filetypesId. */
        public filetypesId: number;

        /** File filename. */
        public filename: string;

        /** File crc32. */
        public crc32: (number|Long);

        /** File size. */
        public size: number;

        /** File description. */
        public description: string;

        /** File url. */
        public url: string;

        /**
         * Creates a new File instance using the specified properties.
         * @param [properties] Properties to set
         * @returns File instance
         */
        public static create(properties?: IRIS.IFile): IRIS.File;

        /**
         * Encodes the specified File message. Does not implicitly {@link IRIS.File.verify|verify} messages.
         * @param message File message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IFile, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified File message, length delimited. Does not implicitly {@link IRIS.File.verify|verify} messages.
         * @param message File message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IFile, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a File message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns File
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.File;

        /**
         * Decodes a File message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns File
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.File;

        /**
         * Verifies a File message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a File message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns File
         */
        public static fromObject(object: { [k: string]: any }): IRIS.File;

        /**
         * Creates a plain object from a File message. Also converts values to other types if specified.
         * @param message File
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.File, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this File to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a NewsFilter. */
    interface INewsFilter {

        /** NewsFilter period */
        period?: (IRIS.IDatePeriod|null);

        /** NewsFilter newssections */
        newssections?: (number[]|null);

        /** NewsFilter secs */
        secs?: (number[]|null);

        /** NewsFilter issuers */
        issuers?: (number[]|null);

        /** NewsFilter lang */
        lang?: (IRIS.Language[]|null);

        /** NewsFilter ftsCondition */
        ftsCondition?: (string|null);

        /** NewsFilter versionFrom */
        versionFrom?: (number|Long|null);

        /** NewsFilter newsIds */
        newsIds?: (number[]|null);

        /** NewsFilter onlySelected */
        onlySelected?: (boolean|null);
    }

    /** Represents a NewsFilter. */
    class NewsFilter implements INewsFilter {

        /**
         * Constructs a new NewsFilter.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.INewsFilter);

        /** NewsFilter period. */
        public period?: (IRIS.IDatePeriod|null);

        /** NewsFilter newssections. */
        public newssections: number[];

        /** NewsFilter secs. */
        public secs: number[];

        /** NewsFilter issuers. */
        public issuers: number[];

        /** NewsFilter lang. */
        public lang: IRIS.Language[];

        /** NewsFilter ftsCondition. */
        public ftsCondition: string;

        /** NewsFilter versionFrom. */
        public versionFrom: (number|Long);

        /** NewsFilter newsIds. */
        public newsIds: number[];

        /** NewsFilter onlySelected. */
        public onlySelected: boolean;

        /**
         * Creates a new NewsFilter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NewsFilter instance
         */
        public static create(properties?: IRIS.INewsFilter): IRIS.NewsFilter;

        /**
         * Encodes the specified NewsFilter message. Does not implicitly {@link IRIS.NewsFilter.verify|verify} messages.
         * @param message NewsFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.INewsFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NewsFilter message, length delimited. Does not implicitly {@link IRIS.NewsFilter.verify|verify} messages.
         * @param message NewsFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.INewsFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NewsFilter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NewsFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.NewsFilter;

        /**
         * Decodes a NewsFilter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NewsFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.NewsFilter;

        /**
         * Verifies a NewsFilter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NewsFilter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NewsFilter
         */
        public static fromObject(object: { [k: string]: any }): IRIS.NewsFilter;

        /**
         * Creates a plain object from a NewsFilter message. Also converts values to other types if specified.
         * @param message NewsFilter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.NewsFilter, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NewsFilter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a NewsSortRecord. */
    interface INewsSortRecord {

        /** NewsSortRecord field */
        field?: (IRIS.NewsSortField|null);

        /** NewsSortRecord desc */
        desc?: (boolean|null);
    }

    /** Represents a NewsSortRecord. */
    class NewsSortRecord implements INewsSortRecord {

        /**
         * Constructs a new NewsSortRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.INewsSortRecord);

        /** NewsSortRecord field. */
        public field: IRIS.NewsSortField;

        /** NewsSortRecord desc. */
        public desc: boolean;

        /**
         * Creates a new NewsSortRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NewsSortRecord instance
         */
        public static create(properties?: IRIS.INewsSortRecord): IRIS.NewsSortRecord;

        /**
         * Encodes the specified NewsSortRecord message. Does not implicitly {@link IRIS.NewsSortRecord.verify|verify} messages.
         * @param message NewsSortRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.INewsSortRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NewsSortRecord message, length delimited. Does not implicitly {@link IRIS.NewsSortRecord.verify|verify} messages.
         * @param message NewsSortRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.INewsSortRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NewsSortRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NewsSortRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.NewsSortRecord;

        /**
         * Decodes a NewsSortRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NewsSortRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.NewsSortRecord;

        /**
         * Verifies a NewsSortRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NewsSortRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NewsSortRecord
         */
        public static fromObject(object: { [k: string]: any }): IRIS.NewsSortRecord;

        /**
         * Creates a plain object from a NewsSortRecord message. Also converts values to other types if specified.
         * @param message NewsSortRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.NewsSortRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NewsSortRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a NewsCountRequest. */
    interface INewsCountRequest {

        /** NewsCountRequest filter */
        filter?: (IRIS.INewsFilter|null);
    }

    /**
     * Запрос на получение информации о количестве новостных сообщений подходящих под условия фильтрации.
     * Примечание: Возвращаемое количество учитывает не только ограничения заданные в фильтре, но и ограничения наложенные на выполняющего запрос пользователя.
     */
    class NewsCountRequest implements INewsCountRequest {

        /**
         * Constructs a new NewsCountRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.INewsCountRequest);

        /** NewsCountRequest filter. */
        public filter?: (IRIS.INewsFilter|null);

        /**
         * Creates a new NewsCountRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NewsCountRequest instance
         */
        public static create(properties?: IRIS.INewsCountRequest): IRIS.NewsCountRequest;

        /**
         * Encodes the specified NewsCountRequest message. Does not implicitly {@link IRIS.NewsCountRequest.verify|verify} messages.
         * @param message NewsCountRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.INewsCountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NewsCountRequest message, length delimited. Does not implicitly {@link IRIS.NewsCountRequest.verify|verify} messages.
         * @param message NewsCountRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.INewsCountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NewsCountRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NewsCountRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.NewsCountRequest;

        /**
         * Decodes a NewsCountRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NewsCountRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.NewsCountRequest;

        /**
         * Verifies a NewsCountRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NewsCountRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NewsCountRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.NewsCountRequest;

        /**
         * Creates a plain object from a NewsCountRequest message. Also converts values to other types if specified.
         * @param message NewsCountRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.NewsCountRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NewsCountRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a NewsCountReply. */
    interface INewsCountReply {

        /** NewsCountReply count */
        count?: (number|null);
    }

    /** Represents a NewsCountReply. */
    class NewsCountReply implements INewsCountReply {

        /**
         * Constructs a new NewsCountReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.INewsCountReply);

        /** NewsCountReply count. */
        public count: number;

        /**
         * Creates a new NewsCountReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NewsCountReply instance
         */
        public static create(properties?: IRIS.INewsCountReply): IRIS.NewsCountReply;

        /**
         * Encodes the specified NewsCountReply message. Does not implicitly {@link IRIS.NewsCountReply.verify|verify} messages.
         * @param message NewsCountReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.INewsCountReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NewsCountReply message, length delimited. Does not implicitly {@link IRIS.NewsCountReply.verify|verify} messages.
         * @param message NewsCountReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.INewsCountReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NewsCountReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NewsCountReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.NewsCountReply;

        /**
         * Decodes a NewsCountReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NewsCountReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.NewsCountReply;

        /**
         * Verifies a NewsCountReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NewsCountReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NewsCountReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.NewsCountReply;

        /**
         * Creates a plain object from a NewsCountReply message. Also converts values to other types if specified.
         * @param message NewsCountReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.NewsCountReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NewsCountReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a NewsRequest. */
    interface INewsRequest {

        /** NewsRequest filter */
        filter?: (IRIS.INewsFilter|null);

        /** NewsRequest range */
        range?: (IRIS.IRange|null);

        /** NewsRequest bandle */
        bandle?: (number|null);

        /** NewsRequest sorting */
        sorting?: (IRIS.INewsSortRecord[]|null);
    }

    /** Represents a NewsRequest. */
    class NewsRequest implements INewsRequest {

        /**
         * Constructs a new NewsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.INewsRequest);

        /** NewsRequest filter. */
        public filter?: (IRIS.INewsFilter|null);

        /** NewsRequest range. */
        public range?: (IRIS.IRange|null);

        /** NewsRequest bandle. */
        public bandle?: (number|null);

        /** NewsRequest sorting. */
        public sorting: IRIS.INewsSortRecord[];

        /** NewsRequest records. */
        public records?: ("range"|"bandle");

        /**
         * Creates a new NewsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NewsRequest instance
         */
        public static create(properties?: IRIS.INewsRequest): IRIS.NewsRequest;

        /**
         * Encodes the specified NewsRequest message. Does not implicitly {@link IRIS.NewsRequest.verify|verify} messages.
         * @param message NewsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.INewsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NewsRequest message, length delimited. Does not implicitly {@link IRIS.NewsRequest.verify|verify} messages.
         * @param message NewsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.INewsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NewsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NewsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.NewsRequest;

        /**
         * Decodes a NewsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NewsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.NewsRequest;

        /**
         * Verifies a NewsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NewsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NewsRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.NewsRequest;

        /**
         * Creates a plain object from a NewsRequest message. Also converts values to other types if specified.
         * @param message NewsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.NewsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NewsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a NewsReply. */
    interface INewsReply {

        /** NewsReply range */
        range?: (IRIS.IRange|null);

        /** NewsReply news */
        news?: (IRIS.INews[]|null);
    }

    /** Represents a NewsReply. */
    class NewsReply implements INewsReply {

        /**
         * Constructs a new NewsReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.INewsReply);

        /** NewsReply range. */
        public range?: (IRIS.IRange|null);

        /** NewsReply news. */
        public news: IRIS.INews[];

        /**
         * Creates a new NewsReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NewsReply instance
         */
        public static create(properties?: IRIS.INewsReply): IRIS.NewsReply;

        /**
         * Encodes the specified NewsReply message. Does not implicitly {@link IRIS.NewsReply.verify|verify} messages.
         * @param message NewsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.INewsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NewsReply message, length delimited. Does not implicitly {@link IRIS.NewsReply.verify|verify} messages.
         * @param message NewsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.INewsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NewsReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NewsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.NewsReply;

        /**
         * Decodes a NewsReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NewsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.NewsReply;

        /**
         * Verifies a NewsReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NewsReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NewsReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.NewsReply;

        /**
         * Creates a plain object from a NewsReply message. Also converts values to other types if specified.
         * @param message NewsReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.NewsReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NewsReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a NewsBodyRequest. */
    interface INewsBodyRequest {

        /** NewsBodyRequest newsIds */
        newsIds?: (number[]|null);
    }

    /** Represents a NewsBodyRequest. */
    class NewsBodyRequest implements INewsBodyRequest {

        /**
         * Constructs a new NewsBodyRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.INewsBodyRequest);

        /** NewsBodyRequest newsIds. */
        public newsIds: number[];

        /**
         * Creates a new NewsBodyRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NewsBodyRequest instance
         */
        public static create(properties?: IRIS.INewsBodyRequest): IRIS.NewsBodyRequest;

        /**
         * Encodes the specified NewsBodyRequest message. Does not implicitly {@link IRIS.NewsBodyRequest.verify|verify} messages.
         * @param message NewsBodyRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.INewsBodyRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NewsBodyRequest message, length delimited. Does not implicitly {@link IRIS.NewsBodyRequest.verify|verify} messages.
         * @param message NewsBodyRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.INewsBodyRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NewsBodyRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NewsBodyRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.NewsBodyRequest;

        /**
         * Decodes a NewsBodyRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NewsBodyRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.NewsBodyRequest;

        /**
         * Verifies a NewsBodyRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NewsBodyRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NewsBodyRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.NewsBodyRequest;

        /**
         * Creates a plain object from a NewsBodyRequest message. Also converts values to other types if specified.
         * @param message NewsBodyRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.NewsBodyRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NewsBodyRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a NewsBodyReply. */
    interface INewsBodyReply {

        /** NewsBodyReply bodies */
        bodies?: (IRIS.INewsBody[]|null);
    }

    /** Represents a NewsBodyReply. */
    class NewsBodyReply implements INewsBodyReply {

        /**
         * Constructs a new NewsBodyReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.INewsBodyReply);

        /** NewsBodyReply bodies. */
        public bodies: IRIS.INewsBody[];

        /**
         * Creates a new NewsBodyReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NewsBodyReply instance
         */
        public static create(properties?: IRIS.INewsBodyReply): IRIS.NewsBodyReply;

        /**
         * Encodes the specified NewsBodyReply message. Does not implicitly {@link IRIS.NewsBodyReply.verify|verify} messages.
         * @param message NewsBodyReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.INewsBodyReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NewsBodyReply message, length delimited. Does not implicitly {@link IRIS.NewsBodyReply.verify|verify} messages.
         * @param message NewsBodyReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.INewsBodyReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NewsBodyReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NewsBodyReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.NewsBodyReply;

        /**
         * Decodes a NewsBodyReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NewsBodyReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.NewsBodyReply;

        /**
         * Verifies a NewsBodyReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NewsBodyReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NewsBodyReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.NewsBodyReply;

        /**
         * Creates a plain object from a NewsBodyReply message. Also converts values to other types if specified.
         * @param message NewsBodyReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.NewsBodyReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NewsBodyReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a NewsRefsRequest. */
    interface INewsRefsRequest {

        /** NewsRefsRequest newsIds */
        newsIds?: (number[]|null);
    }

    /** Represents a NewsRefsRequest. */
    class NewsRefsRequest implements INewsRefsRequest {

        /**
         * Constructs a new NewsRefsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.INewsRefsRequest);

        /** NewsRefsRequest newsIds. */
        public newsIds: number[];

        /**
         * Creates a new NewsRefsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NewsRefsRequest instance
         */
        public static create(properties?: IRIS.INewsRefsRequest): IRIS.NewsRefsRequest;

        /**
         * Encodes the specified NewsRefsRequest message. Does not implicitly {@link IRIS.NewsRefsRequest.verify|verify} messages.
         * @param message NewsRefsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.INewsRefsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NewsRefsRequest message, length delimited. Does not implicitly {@link IRIS.NewsRefsRequest.verify|verify} messages.
         * @param message NewsRefsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.INewsRefsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NewsRefsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NewsRefsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.NewsRefsRequest;

        /**
         * Decodes a NewsRefsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NewsRefsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.NewsRefsRequest;

        /**
         * Verifies a NewsRefsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NewsRefsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NewsRefsRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.NewsRefsRequest;

        /**
         * Creates a plain object from a NewsRefsRequest message. Also converts values to other types if specified.
         * @param message NewsRefsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.NewsRefsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NewsRefsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a NewsRefsReply. */
    interface INewsRefsReply {

        /** NewsRefsReply refs */
        refs?: (IRIS.INewsRefs[]|null);
    }

    /** Represents a NewsRefsReply. */
    class NewsRefsReply implements INewsRefsReply {

        /**
         * Constructs a new NewsRefsReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.INewsRefsReply);

        /** NewsRefsReply refs. */
        public refs: IRIS.INewsRefs[];

        /**
         * Creates a new NewsRefsReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NewsRefsReply instance
         */
        public static create(properties?: IRIS.INewsRefsReply): IRIS.NewsRefsReply;

        /**
         * Encodes the specified NewsRefsReply message. Does not implicitly {@link IRIS.NewsRefsReply.verify|verify} messages.
         * @param message NewsRefsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.INewsRefsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NewsRefsReply message, length delimited. Does not implicitly {@link IRIS.NewsRefsReply.verify|verify} messages.
         * @param message NewsRefsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.INewsRefsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NewsRefsReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NewsRefsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.NewsRefsReply;

        /**
         * Decodes a NewsRefsReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NewsRefsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.NewsRefsReply;

        /**
         * Verifies a NewsRefsReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NewsRefsReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NewsRefsReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.NewsRefsReply;

        /**
         * Creates a plain object from a NewsRefsReply message. Also converts values to other types if specified.
         * @param message NewsRefsReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.NewsRefsReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NewsRefsReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a NewsUsersAddRequest. */
    interface INewsUsersAddRequest {

        /** NewsUsersAddRequest newsId */
        newsId?: (number[]|null);
    }

    /** Represents a NewsUsersAddRequest. */
    class NewsUsersAddRequest implements INewsUsersAddRequest {

        /**
         * Constructs a new NewsUsersAddRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.INewsUsersAddRequest);

        /** NewsUsersAddRequest newsId. */
        public newsId: number[];

        /**
         * Creates a new NewsUsersAddRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NewsUsersAddRequest instance
         */
        public static create(properties?: IRIS.INewsUsersAddRequest): IRIS.NewsUsersAddRequest;

        /**
         * Encodes the specified NewsUsersAddRequest message. Does not implicitly {@link IRIS.NewsUsersAddRequest.verify|verify} messages.
         * @param message NewsUsersAddRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.INewsUsersAddRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NewsUsersAddRequest message, length delimited. Does not implicitly {@link IRIS.NewsUsersAddRequest.verify|verify} messages.
         * @param message NewsUsersAddRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.INewsUsersAddRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NewsUsersAddRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NewsUsersAddRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.NewsUsersAddRequest;

        /**
         * Decodes a NewsUsersAddRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NewsUsersAddRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.NewsUsersAddRequest;

        /**
         * Verifies a NewsUsersAddRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NewsUsersAddRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NewsUsersAddRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.NewsUsersAddRequest;

        /**
         * Creates a plain object from a NewsUsersAddRequest message. Also converts values to other types if specified.
         * @param message NewsUsersAddRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.NewsUsersAddRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NewsUsersAddRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a NewsUsersAddReply. */
    interface INewsUsersAddReply {

        /** NewsUsersAddReply result */
        result?: (boolean|null);
    }

    /** Represents a NewsUsersAddReply. */
    class NewsUsersAddReply implements INewsUsersAddReply {

        /**
         * Constructs a new NewsUsersAddReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.INewsUsersAddReply);

        /** NewsUsersAddReply result. */
        public result: boolean;

        /**
         * Creates a new NewsUsersAddReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NewsUsersAddReply instance
         */
        public static create(properties?: IRIS.INewsUsersAddReply): IRIS.NewsUsersAddReply;

        /**
         * Encodes the specified NewsUsersAddReply message. Does not implicitly {@link IRIS.NewsUsersAddReply.verify|verify} messages.
         * @param message NewsUsersAddReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.INewsUsersAddReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NewsUsersAddReply message, length delimited. Does not implicitly {@link IRIS.NewsUsersAddReply.verify|verify} messages.
         * @param message NewsUsersAddReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.INewsUsersAddReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NewsUsersAddReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NewsUsersAddReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.NewsUsersAddReply;

        /**
         * Decodes a NewsUsersAddReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NewsUsersAddReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.NewsUsersAddReply;

        /**
         * Verifies a NewsUsersAddReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NewsUsersAddReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NewsUsersAddReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.NewsUsersAddReply;

        /**
         * Creates a plain object from a NewsUsersAddReply message. Also converts values to other types if specified.
         * @param message NewsUsersAddReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.NewsUsersAddReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NewsUsersAddReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a NewsUsersDeleteRequest. */
    interface INewsUsersDeleteRequest {

        /** NewsUsersDeleteRequest newsId */
        newsId?: (number[]|null);
    }

    /** Represents a NewsUsersDeleteRequest. */
    class NewsUsersDeleteRequest implements INewsUsersDeleteRequest {

        /**
         * Constructs a new NewsUsersDeleteRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.INewsUsersDeleteRequest);

        /** NewsUsersDeleteRequest newsId. */
        public newsId: number[];

        /**
         * Creates a new NewsUsersDeleteRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NewsUsersDeleteRequest instance
         */
        public static create(properties?: IRIS.INewsUsersDeleteRequest): IRIS.NewsUsersDeleteRequest;

        /**
         * Encodes the specified NewsUsersDeleteRequest message. Does not implicitly {@link IRIS.NewsUsersDeleteRequest.verify|verify} messages.
         * @param message NewsUsersDeleteRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.INewsUsersDeleteRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NewsUsersDeleteRequest message, length delimited. Does not implicitly {@link IRIS.NewsUsersDeleteRequest.verify|verify} messages.
         * @param message NewsUsersDeleteRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.INewsUsersDeleteRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NewsUsersDeleteRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NewsUsersDeleteRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.NewsUsersDeleteRequest;

        /**
         * Decodes a NewsUsersDeleteRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NewsUsersDeleteRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.NewsUsersDeleteRequest;

        /**
         * Verifies a NewsUsersDeleteRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NewsUsersDeleteRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NewsUsersDeleteRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.NewsUsersDeleteRequest;

        /**
         * Creates a plain object from a NewsUsersDeleteRequest message. Also converts values to other types if specified.
         * @param message NewsUsersDeleteRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.NewsUsersDeleteRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NewsUsersDeleteRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a NewsUsersDeleteReply. */
    interface INewsUsersDeleteReply {

        /** NewsUsersDeleteReply result */
        result?: (boolean|null);
    }

    /** Represents a NewsUsersDeleteReply. */
    class NewsUsersDeleteReply implements INewsUsersDeleteReply {

        /**
         * Constructs a new NewsUsersDeleteReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.INewsUsersDeleteReply);

        /** NewsUsersDeleteReply result. */
        public result: boolean;

        /**
         * Creates a new NewsUsersDeleteReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NewsUsersDeleteReply instance
         */
        public static create(properties?: IRIS.INewsUsersDeleteReply): IRIS.NewsUsersDeleteReply;

        /**
         * Encodes the specified NewsUsersDeleteReply message. Does not implicitly {@link IRIS.NewsUsersDeleteReply.verify|verify} messages.
         * @param message NewsUsersDeleteReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.INewsUsersDeleteReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NewsUsersDeleteReply message, length delimited. Does not implicitly {@link IRIS.NewsUsersDeleteReply.verify|verify} messages.
         * @param message NewsUsersDeleteReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.INewsUsersDeleteReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NewsUsersDeleteReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NewsUsersDeleteReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.NewsUsersDeleteReply;

        /**
         * Decodes a NewsUsersDeleteReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NewsUsersDeleteReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.NewsUsersDeleteReply;

        /**
         * Verifies a NewsUsersDeleteReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NewsUsersDeleteReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NewsUsersDeleteReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.NewsUsersDeleteReply;

        /**
         * Creates a plain object from a NewsUsersDeleteReply message. Also converts values to other types if specified.
         * @param message NewsUsersDeleteReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.NewsUsersDeleteReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NewsUsersDeleteReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FilesRequest. */
    interface IFilesRequest {

        /** FilesRequest newsId */
        newsId?: (number|null);

        /** FilesRequest filesIds */
        filesIds?: (number[]|null);
    }

    /** Represents a FilesRequest. */
    class FilesRequest implements IFilesRequest {

        /**
         * Constructs a new FilesRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IFilesRequest);

        /** FilesRequest newsId. */
        public newsId: number;

        /** FilesRequest filesIds. */
        public filesIds: number[];

        /**
         * Creates a new FilesRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FilesRequest instance
         */
        public static create(properties?: IRIS.IFilesRequest): IRIS.FilesRequest;

        /**
         * Encodes the specified FilesRequest message. Does not implicitly {@link IRIS.FilesRequest.verify|verify} messages.
         * @param message FilesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IFilesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FilesRequest message, length delimited. Does not implicitly {@link IRIS.FilesRequest.verify|verify} messages.
         * @param message FilesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IFilesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FilesRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FilesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.FilesRequest;

        /**
         * Decodes a FilesRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FilesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.FilesRequest;

        /**
         * Verifies a FilesRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FilesRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FilesRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.FilesRequest;

        /**
         * Creates a plain object from a FilesRequest message. Also converts values to other types if specified.
         * @param message FilesRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.FilesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FilesRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FilesReply. */
    interface IFilesReply {

        /** FilesReply files */
        files?: (IRIS.IFile[]|null);
    }

    /** Represents a FilesReply. */
    class FilesReply implements IFilesReply {

        /**
         * Constructs a new FilesReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IFilesReply);

        /** FilesReply files. */
        public files: IRIS.IFile[];

        /**
         * Creates a new FilesReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FilesReply instance
         */
        public static create(properties?: IRIS.IFilesReply): IRIS.FilesReply;

        /**
         * Encodes the specified FilesReply message. Does not implicitly {@link IRIS.FilesReply.verify|verify} messages.
         * @param message FilesReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IFilesReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FilesReply message, length delimited. Does not implicitly {@link IRIS.FilesReply.verify|verify} messages.
         * @param message FilesReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IFilesReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FilesReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FilesReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.FilesReply;

        /**
         * Decodes a FilesReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FilesReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.FilesReply;

        /**
         * Verifies a FilesReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FilesReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FilesReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.FilesReply;

        /**
         * Creates a plain object from a FilesReply message. Also converts values to other types if specified.
         * @param message FilesReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.FilesReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FilesReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FileBodyRequest. */
    interface IFileBodyRequest {

        /** FileBodyRequest filesId */
        filesId?: (number|null);

        /** FileBodyRequest range */
        range?: (IRIS.IRange|null);

        /** FileBodyRequest bandle */
        bandle?: (number|null);
    }

    /** Represents a FileBodyRequest. */
    class FileBodyRequest implements IFileBodyRequest {

        /**
         * Constructs a new FileBodyRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IFileBodyRequest);

        /** FileBodyRequest filesId. */
        public filesId: number;

        /** FileBodyRequest range. */
        public range?: (IRIS.IRange|null);

        /** FileBodyRequest bandle. */
        public bandle?: (number|null);

        /** FileBodyRequest partialLoad. */
        public partialLoad?: ("range"|"bandle");

        /**
         * Creates a new FileBodyRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FileBodyRequest instance
         */
        public static create(properties?: IRIS.IFileBodyRequest): IRIS.FileBodyRequest;

        /**
         * Encodes the specified FileBodyRequest message. Does not implicitly {@link IRIS.FileBodyRequest.verify|verify} messages.
         * @param message FileBodyRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IFileBodyRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FileBodyRequest message, length delimited. Does not implicitly {@link IRIS.FileBodyRequest.verify|verify} messages.
         * @param message FileBodyRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IFileBodyRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FileBodyRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FileBodyRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.FileBodyRequest;

        /**
         * Decodes a FileBodyRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FileBodyRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.FileBodyRequest;

        /**
         * Verifies a FileBodyRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FileBodyRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FileBodyRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.FileBodyRequest;

        /**
         * Creates a plain object from a FileBodyRequest message. Also converts values to other types if specified.
         * @param message FileBodyRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.FileBodyRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FileBodyRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FileBody. */
    interface IFileBody {

        /** FileBody file */
        file?: (IRIS.IFile|null);

        /** FileBody body */
        body?: (Uint8Array|null);
    }

    /** Represents a FileBody. */
    class FileBody implements IFileBody {

        /**
         * Constructs a new FileBody.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IFileBody);

        /** FileBody file. */
        public file?: (IRIS.IFile|null);

        /** FileBody body. */
        public body: Uint8Array;

        /**
         * Creates a new FileBody instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FileBody instance
         */
        public static create(properties?: IRIS.IFileBody): IRIS.FileBody;

        /**
         * Encodes the specified FileBody message. Does not implicitly {@link IRIS.FileBody.verify|verify} messages.
         * @param message FileBody message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IFileBody, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FileBody message, length delimited. Does not implicitly {@link IRIS.FileBody.verify|verify} messages.
         * @param message FileBody message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IFileBody, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FileBody message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FileBody
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.FileBody;

        /**
         * Decodes a FileBody message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FileBody
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.FileBody;

        /**
         * Verifies a FileBody message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FileBody message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FileBody
         */
        public static fromObject(object: { [k: string]: any }): IRIS.FileBody;

        /**
         * Creates a plain object from a FileBody message. Also converts values to other types if specified.
         * @param message FileBody
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.FileBody, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FileBody to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FileBodyReply. */
    interface IFileBodyReply {

        /** FileBodyReply file */
        file?: (IRIS.IFile|null);

        /** FileBodyReply body */
        body?: (Uint8Array|null);

        /** FileBodyReply range */
        range?: (IRIS.IRange|null);
    }

    /** Represents a FileBodyReply. */
    class FileBodyReply implements IFileBodyReply {

        /**
         * Constructs a new FileBodyReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IFileBodyReply);

        /** FileBodyReply file. */
        public file?: (IRIS.IFile|null);

        /** FileBodyReply body. */
        public body: Uint8Array;

        /** FileBodyReply range. */
        public range?: (IRIS.IRange|null);

        /**
         * Creates a new FileBodyReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FileBodyReply instance
         */
        public static create(properties?: IRIS.IFileBodyReply): IRIS.FileBodyReply;

        /**
         * Encodes the specified FileBodyReply message. Does not implicitly {@link IRIS.FileBodyReply.verify|verify} messages.
         * @param message FileBodyReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IFileBodyReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FileBodyReply message, length delimited. Does not implicitly {@link IRIS.FileBodyReply.verify|verify} messages.
         * @param message FileBodyReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IFileBodyReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FileBodyReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FileBodyReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.FileBodyReply;

        /**
         * Decodes a FileBodyReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FileBodyReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.FileBodyReply;

        /**
         * Verifies a FileBodyReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FileBodyReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FileBodyReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.FileBodyReply;

        /**
         * Creates a plain object from a FileBodyReply message. Also converts values to other types if specified.
         * @param message FileBodyReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.FileBodyReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FileBodyReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a NewsUpdate. */
    interface INewsUpdate {

        /** NewsUpdate news */
        news?: (IRIS.IShortNewsInfo[]|null);
    }

    /** Represents a NewsUpdate. */
    class NewsUpdate implements INewsUpdate {

        /**
         * Constructs a new NewsUpdate.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.INewsUpdate);

        /** NewsUpdate news. */
        public news: IRIS.IShortNewsInfo[];

        /**
         * Creates a new NewsUpdate instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NewsUpdate instance
         */
        public static create(properties?: IRIS.INewsUpdate): IRIS.NewsUpdate;

        /**
         * Encodes the specified NewsUpdate message. Does not implicitly {@link IRIS.NewsUpdate.verify|verify} messages.
         * @param message NewsUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.INewsUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NewsUpdate message, length delimited. Does not implicitly {@link IRIS.NewsUpdate.verify|verify} messages.
         * @param message NewsUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.INewsUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NewsUpdate message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NewsUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.NewsUpdate;

        /**
         * Decodes a NewsUpdate message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NewsUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.NewsUpdate;

        /**
         * Verifies a NewsUpdate message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NewsUpdate message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NewsUpdate
         */
        public static fromObject(object: { [k: string]: any }): IRIS.NewsUpdate;

        /**
         * Creates a plain object from a NewsUpdate message. Also converts values to other types if specified.
         * @param message NewsUpdate
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.NewsUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NewsUpdate to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FullNewsInfo. */
    interface IFullNewsInfo {

        /** FullNewsInfo news */
        news?: (IRIS.INews|null);

        /** FullNewsInfo body */
        body?: (string|null);

        /** FullNewsInfo files */
        files?: (IRIS.IFileBody[]|null);
    }

    /** Represents a FullNewsInfo. */
    class FullNewsInfo implements IFullNewsInfo {

        /**
         * Constructs a new FullNewsInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IFullNewsInfo);

        /** FullNewsInfo news. */
        public news?: (IRIS.INews|null);

        /** FullNewsInfo body. */
        public body: string;

        /** FullNewsInfo files. */
        public files: IRIS.IFileBody[];

        /**
         * Creates a new FullNewsInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FullNewsInfo instance
         */
        public static create(properties?: IRIS.IFullNewsInfo): IRIS.FullNewsInfo;

        /**
         * Encodes the specified FullNewsInfo message. Does not implicitly {@link IRIS.FullNewsInfo.verify|verify} messages.
         * @param message FullNewsInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IFullNewsInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FullNewsInfo message, length delimited. Does not implicitly {@link IRIS.FullNewsInfo.verify|verify} messages.
         * @param message FullNewsInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IFullNewsInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FullNewsInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FullNewsInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.FullNewsInfo;

        /**
         * Decodes a FullNewsInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FullNewsInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.FullNewsInfo;

        /**
         * Verifies a FullNewsInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FullNewsInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FullNewsInfo
         */
        public static fromObject(object: { [k: string]: any }): IRIS.FullNewsInfo;

        /**
         * Creates a plain object from a FullNewsInfo message. Also converts values to other types if specified.
         * @param message FullNewsInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.FullNewsInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FullNewsInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FullNewsInfoRequest. */
    interface IFullNewsInfoRequest {

        /** FullNewsInfoRequest filter */
        filter?: (IRIS.INewsFilter|null);

        /** FullNewsInfoRequest sorting */
        sorting?: (IRIS.INewsSortRecord[]|null);
    }

    /** Represents a FullNewsInfoRequest. */
    class FullNewsInfoRequest implements IFullNewsInfoRequest {

        /**
         * Constructs a new FullNewsInfoRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IFullNewsInfoRequest);

        /** FullNewsInfoRequest filter. */
        public filter?: (IRIS.INewsFilter|null);

        /** FullNewsInfoRequest sorting. */
        public sorting: IRIS.INewsSortRecord[];

        /**
         * Creates a new FullNewsInfoRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FullNewsInfoRequest instance
         */
        public static create(properties?: IRIS.IFullNewsInfoRequest): IRIS.FullNewsInfoRequest;

        /**
         * Encodes the specified FullNewsInfoRequest message. Does not implicitly {@link IRIS.FullNewsInfoRequest.verify|verify} messages.
         * @param message FullNewsInfoRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IFullNewsInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FullNewsInfoRequest message, length delimited. Does not implicitly {@link IRIS.FullNewsInfoRequest.verify|verify} messages.
         * @param message FullNewsInfoRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IFullNewsInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FullNewsInfoRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FullNewsInfoRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.FullNewsInfoRequest;

        /**
         * Decodes a FullNewsInfoRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FullNewsInfoRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.FullNewsInfoRequest;

        /**
         * Verifies a FullNewsInfoRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FullNewsInfoRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FullNewsInfoRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.FullNewsInfoRequest;

        /**
         * Creates a plain object from a FullNewsInfoRequest message. Also converts values to other types if specified.
         * @param message FullNewsInfoRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.FullNewsInfoRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FullNewsInfoRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FullNewsInfoReply. */
    interface IFullNewsInfoReply {

        /** FullNewsInfoReply news */
        news?: (IRIS.IFullNewsInfo[]|null);
    }

    /** Represents a FullNewsInfoReply. */
    class FullNewsInfoReply implements IFullNewsInfoReply {

        /**
         * Constructs a new FullNewsInfoReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IFullNewsInfoReply);

        /** FullNewsInfoReply news. */
        public news: IRIS.IFullNewsInfo[];

        /**
         * Creates a new FullNewsInfoReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FullNewsInfoReply instance
         */
        public static create(properties?: IRIS.IFullNewsInfoReply): IRIS.FullNewsInfoReply;

        /**
         * Encodes the specified FullNewsInfoReply message. Does not implicitly {@link IRIS.FullNewsInfoReply.verify|verify} messages.
         * @param message FullNewsInfoReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IFullNewsInfoReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FullNewsInfoReply message, length delimited. Does not implicitly {@link IRIS.FullNewsInfoReply.verify|verify} messages.
         * @param message FullNewsInfoReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IFullNewsInfoReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FullNewsInfoReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FullNewsInfoReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.FullNewsInfoReply;

        /**
         * Decodes a FullNewsInfoReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FullNewsInfoReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.FullNewsInfoReply;

        /**
         * Verifies a FullNewsInfoReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FullNewsInfoReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FullNewsInfoReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.FullNewsInfoReply;

        /**
         * Creates a plain object from a FullNewsInfoReply message. Also converts values to other types if specified.
         * @param message FullNewsInfoReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.FullNewsInfoReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FullNewsInfoReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GraphRequest. */
    interface IGraphRequest {

        /** GraphRequest securityId */
        securityId?: (number|null);

        /** GraphRequest period */
        period?: (IRIS.ITotalsPeriod|null);

        /** GraphRequest needEmptyIntervals */
        needEmptyIntervals?: (boolean|null);
    }

    /** Represents a GraphRequest. */
    class GraphRequest implements IGraphRequest {

        /**
         * Constructs a new GraphRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IGraphRequest);

        /** GraphRequest securityId. */
        public securityId: number;

        /** GraphRequest period. */
        public period?: (IRIS.ITotalsPeriod|null);

        /** GraphRequest needEmptyIntervals. */
        public needEmptyIntervals: boolean;

        /**
         * Creates a new GraphRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GraphRequest instance
         */
        public static create(properties?: IRIS.IGraphRequest): IRIS.GraphRequest;

        /**
         * Encodes the specified GraphRequest message. Does not implicitly {@link IRIS.GraphRequest.verify|verify} messages.
         * @param message GraphRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IGraphRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GraphRequest message, length delimited. Does not implicitly {@link IRIS.GraphRequest.verify|verify} messages.
         * @param message GraphRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IGraphRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GraphRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GraphRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.GraphRequest;

        /**
         * Decodes a GraphRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GraphRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.GraphRequest;

        /**
         * Verifies a GraphRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GraphRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GraphRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.GraphRequest;

        /**
         * Creates a plain object from a GraphRequest message. Also converts values to other types if specified.
         * @param message GraphRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.GraphRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GraphRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GraphReply. */
    interface IGraphReply {

        /** GraphReply securityId */
        securityId?: (number|null);

        /** GraphReply period */
        period?: (IRIS.ITotalsPeriod|null);

        /** GraphReply interval */
        interval?: (IRIS.GraphIntervalType|null);

        /** GraphReply ohlc */
        ohlc?: (IRIS.IGraphOhlc[]|null);
    }

    /** Represents a GraphReply. */
    class GraphReply implements IGraphReply {

        /**
         * Constructs a new GraphReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IGraphReply);

        /** GraphReply securityId. */
        public securityId: number;

        /** GraphReply period. */
        public period?: (IRIS.ITotalsPeriod|null);

        /** GraphReply interval. */
        public interval: IRIS.GraphIntervalType;

        /** GraphReply ohlc. */
        public ohlc: IRIS.IGraphOhlc[];

        /**
         * Creates a new GraphReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GraphReply instance
         */
        public static create(properties?: IRIS.IGraphReply): IRIS.GraphReply;

        /**
         * Encodes the specified GraphReply message. Does not implicitly {@link IRIS.GraphReply.verify|verify} messages.
         * @param message GraphReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IGraphReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GraphReply message, length delimited. Does not implicitly {@link IRIS.GraphReply.verify|verify} messages.
         * @param message GraphReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IGraphReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GraphReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GraphReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.GraphReply;

        /**
         * Decodes a GraphReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GraphReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.GraphReply;

        /**
         * Verifies a GraphReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GraphReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GraphReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.GraphReply;

        /**
         * Creates a plain object from a GraphReply message. Also converts values to other types if specified.
         * @param message GraphReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.GraphReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GraphReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** HeatmapType enum. */
    enum HeatmapType {
        HT_INDEX_KASE = 0,
        HT_KASE_GLOBAL = 1
    }

    /** HeatmapDepth enum. */
    enum HeatmapDepth {
        HD_DAY = 0,
        HD_MONTH = 1,
        HD_QUARTER = 2,
        HD_YEAR = 3
    }

    /** Properties of a HeatmapRecord. */
    interface IHeatmapRecord {

        /** HeatmapRecord securityId */
        securityId?: (number|null);

        /** HeatmapRecord code */
        code?: (string|null);

        /** HeatmapRecord capitalization */
        capitalization?: (IRIS.IDecimal|null);

        /** HeatmapRecord trend */
        trend?: (IRIS.IDecimal|null);

        /** HeatmapRecord lastPrice */
        lastPrice?: (IRIS.IDecimal|null);

        /** HeatmapRecord lastTime */
        lastTime?: (IRIS.IDateTime|null);
    }

    /** Represents a HeatmapRecord. */
    class HeatmapRecord implements IHeatmapRecord {

        /**
         * Constructs a new HeatmapRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IHeatmapRecord);

        /** HeatmapRecord securityId. */
        public securityId: number;

        /** HeatmapRecord code. */
        public code: string;

        /** HeatmapRecord capitalization. */
        public capitalization?: (IRIS.IDecimal|null);

        /** HeatmapRecord trend. */
        public trend?: (IRIS.IDecimal|null);

        /** HeatmapRecord lastPrice. */
        public lastPrice?: (IRIS.IDecimal|null);

        /** HeatmapRecord lastTime. */
        public lastTime?: (IRIS.IDateTime|null);

        /**
         * Creates a new HeatmapRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HeatmapRecord instance
         */
        public static create(properties?: IRIS.IHeatmapRecord): IRIS.HeatmapRecord;

        /**
         * Encodes the specified HeatmapRecord message. Does not implicitly {@link IRIS.HeatmapRecord.verify|verify} messages.
         * @param message HeatmapRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IHeatmapRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified HeatmapRecord message, length delimited. Does not implicitly {@link IRIS.HeatmapRecord.verify|verify} messages.
         * @param message HeatmapRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IHeatmapRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a HeatmapRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HeatmapRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.HeatmapRecord;

        /**
         * Decodes a HeatmapRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HeatmapRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.HeatmapRecord;

        /**
         * Verifies a HeatmapRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a HeatmapRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns HeatmapRecord
         */
        public static fromObject(object: { [k: string]: any }): IRIS.HeatmapRecord;

        /**
         * Creates a plain object from a HeatmapRecord message. Also converts values to other types if specified.
         * @param message HeatmapRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.HeatmapRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this HeatmapRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a HeatmapRequest. */
    interface IHeatmapRequest {

        /** HeatmapRequest type */
        type?: (IRIS.HeatmapType|null);

        /** HeatmapRequest depth */
        depth?: (IRIS.HeatmapDepth|null);
    }

    /** Represents a HeatmapRequest. */
    class HeatmapRequest implements IHeatmapRequest {

        /**
         * Constructs a new HeatmapRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IHeatmapRequest);

        /** HeatmapRequest type. */
        public type: IRIS.HeatmapType;

        /** HeatmapRequest depth. */
        public depth: IRIS.HeatmapDepth;

        /**
         * Creates a new HeatmapRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HeatmapRequest instance
         */
        public static create(properties?: IRIS.IHeatmapRequest): IRIS.HeatmapRequest;

        /**
         * Encodes the specified HeatmapRequest message. Does not implicitly {@link IRIS.HeatmapRequest.verify|verify} messages.
         * @param message HeatmapRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IHeatmapRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified HeatmapRequest message, length delimited. Does not implicitly {@link IRIS.HeatmapRequest.verify|verify} messages.
         * @param message HeatmapRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IHeatmapRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a HeatmapRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HeatmapRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.HeatmapRequest;

        /**
         * Decodes a HeatmapRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HeatmapRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.HeatmapRequest;

        /**
         * Verifies a HeatmapRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a HeatmapRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns HeatmapRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.HeatmapRequest;

        /**
         * Creates a plain object from a HeatmapRequest message. Also converts values to other types if specified.
         * @param message HeatmapRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.HeatmapRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this HeatmapRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a HeatmapReply. */
    interface IHeatmapReply {

        /** HeatmapReply type */
        type?: (IRIS.HeatmapType|null);

        /** HeatmapReply records */
        records?: (IRIS.IHeatmapRecord[]|null);
    }

    /** Represents a HeatmapReply. */
    class HeatmapReply implements IHeatmapReply {

        /**
         * Constructs a new HeatmapReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IHeatmapReply);

        /** HeatmapReply type. */
        public type: IRIS.HeatmapType;

        /** HeatmapReply records. */
        public records: IRIS.IHeatmapRecord[];

        /**
         * Creates a new HeatmapReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HeatmapReply instance
         */
        public static create(properties?: IRIS.IHeatmapReply): IRIS.HeatmapReply;

        /**
         * Encodes the specified HeatmapReply message. Does not implicitly {@link IRIS.HeatmapReply.verify|verify} messages.
         * @param message HeatmapReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IHeatmapReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified HeatmapReply message, length delimited. Does not implicitly {@link IRIS.HeatmapReply.verify|verify} messages.
         * @param message HeatmapReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IHeatmapReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a HeatmapReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HeatmapReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.HeatmapReply;

        /**
         * Decodes a HeatmapReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HeatmapReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.HeatmapReply;

        /**
         * Verifies a HeatmapReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a HeatmapReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns HeatmapReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.HeatmapReply;

        /**
         * Creates a plain object from a HeatmapReply message. Also converts values to other types if specified.
         * @param message HeatmapReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.HeatmapReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this HeatmapReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurGraphRequest. */
    interface ICurGraphRequest {

        /** CurGraphRequest instrumentId */
        instrumentId?: (number|null);

        /** CurGraphRequest period */
        period?: (IRIS.ITotalsPeriod|null);

        /** CurGraphRequest needEmptyIntervals */
        needEmptyIntervals?: (boolean|null);
    }

    /** Represents a CurGraphRequest. */
    class CurGraphRequest implements ICurGraphRequest {

        /**
         * Constructs a new CurGraphRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurGraphRequest);

        /** CurGraphRequest instrumentId. */
        public instrumentId: number;

        /** CurGraphRequest period. */
        public period?: (IRIS.ITotalsPeriod|null);

        /** CurGraphRequest needEmptyIntervals. */
        public needEmptyIntervals: boolean;

        /**
         * Creates a new CurGraphRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurGraphRequest instance
         */
        public static create(properties?: IRIS.ICurGraphRequest): IRIS.CurGraphRequest;

        /**
         * Encodes the specified CurGraphRequest message. Does not implicitly {@link IRIS.CurGraphRequest.verify|verify} messages.
         * @param message CurGraphRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurGraphRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurGraphRequest message, length delimited. Does not implicitly {@link IRIS.CurGraphRequest.verify|verify} messages.
         * @param message CurGraphRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurGraphRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurGraphRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurGraphRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurGraphRequest;

        /**
         * Decodes a CurGraphRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurGraphRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurGraphRequest;

        /**
         * Verifies a CurGraphRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurGraphRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurGraphRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurGraphRequest;

        /**
         * Creates a plain object from a CurGraphRequest message. Also converts values to other types if specified.
         * @param message CurGraphRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurGraphRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurGraphRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CurGraphReply. */
    interface ICurGraphReply {

        /** CurGraphReply securityId */
        securityId?: (number|null);

        /** CurGraphReply period */
        period?: (IRIS.ITotalsPeriod|null);

        /** CurGraphReply interval */
        interval?: (IRIS.GraphIntervalType|null);

        /** CurGraphReply ohlc */
        ohlc?: (IRIS.IGraphOhlc[]|null);
    }

    /** Represents a CurGraphReply. */
    class CurGraphReply implements ICurGraphReply {

        /**
         * Constructs a new CurGraphReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.ICurGraphReply);

        /** CurGraphReply securityId. */
        public securityId: number;

        /** CurGraphReply period. */
        public period?: (IRIS.ITotalsPeriod|null);

        /** CurGraphReply interval. */
        public interval: IRIS.GraphIntervalType;

        /** CurGraphReply ohlc. */
        public ohlc: IRIS.IGraphOhlc[];

        /**
         * Creates a new CurGraphReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CurGraphReply instance
         */
        public static create(properties?: IRIS.ICurGraphReply): IRIS.CurGraphReply;

        /**
         * Encodes the specified CurGraphReply message. Does not implicitly {@link IRIS.CurGraphReply.verify|verify} messages.
         * @param message CurGraphReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.ICurGraphReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CurGraphReply message, length delimited. Does not implicitly {@link IRIS.CurGraphReply.verify|verify} messages.
         * @param message CurGraphReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.ICurGraphReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CurGraphReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CurGraphReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.CurGraphReply;

        /**
         * Decodes a CurGraphReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CurGraphReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.CurGraphReply;

        /**
         * Verifies a CurGraphReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CurGraphReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CurGraphReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.CurGraphReply;

        /**
         * Creates a plain object from a CurGraphReply message. Also converts values to other types if specified.
         * @param message CurGraphReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.CurGraphReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CurGraphReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Repo. */
    interface IRepo {

        /** Repo repoId */
        repoId?: (number|null);

        /** Repo openTime */
        openTime?: (IRIS.IDateTime|null);

        /** Repo closeTime */
        closeTime?: (IRIS.IDateTime|null);

        /** Repo prolongDate */
        prolongDate?: (IRIS.IDate|null);

        /** Repo kredDays */
        kredDays?: (number|null);

        /** Repo secId */
        secId?: (number|null);

        /** Repo secCode */
        secCode?: (string|null);

        /** Repo autorepo */
        autorepo?: (boolean|null);

        /** Repo autoId */
        autoId?: (number|null);

        /** Repo autoCode */
        autoCode?: (string|null);

        /** Repo openPrice */
        openPrice?: (IRIS.IDecimal|null);

        /** Repo closePrice */
        closePrice?: (IRIS.IDecimal|null);

        /** Repo volume */
        volume?: (number|Long|null);

        /** Repo openVolKzt */
        openVolKzt?: (IRIS.IDecimal|null);

        /** Repo openVolUsd */
        openVolUsd?: (IRIS.IDecimal|null);

        /** Repo closeVolKzt */
        closeVolKzt?: (IRIS.IDecimal|null);

        /** Repo closeVolUsd */
        closeVolUsd?: (IRIS.IDecimal|null);

        /** Repo yield */
        "yield"?: (IRIS.IDecimal|null);

        /** Repo version */
        version?: (number|Long|null);

        /** Repo board */
        board?: (string|null);

        /** Repo nonKase */
        nonKase?: (boolean|null);

        /** Repo secType */
        secType?: (IRIS.SecType|null);

        /** Repo priceType */
        priceType?: (IRIS.PriceType|null);

        /** Repo actualSin */
        actualSin?: (string|null);
    }

    /** Represents a Repo. */
    class Repo implements IRepo {

        /**
         * Constructs a new Repo.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IRepo);

        /** Repo repoId. */
        public repoId: number;

        /** Repo openTime. */
        public openTime?: (IRIS.IDateTime|null);

        /** Repo closeTime. */
        public closeTime?: (IRIS.IDateTime|null);

        /** Repo prolongDate. */
        public prolongDate?: (IRIS.IDate|null);

        /** Repo kredDays. */
        public kredDays: number;

        /** Repo secId. */
        public secId: number;

        /** Repo secCode. */
        public secCode: string;

        /** Repo autorepo. */
        public autorepo: boolean;

        /** Repo autoId. */
        public autoId: number;

        /** Repo autoCode. */
        public autoCode: string;

        /** Repo openPrice. */
        public openPrice?: (IRIS.IDecimal|null);

        /** Repo closePrice. */
        public closePrice?: (IRIS.IDecimal|null);

        /** Repo volume. */
        public volume: (number|Long);

        /** Repo openVolKzt. */
        public openVolKzt?: (IRIS.IDecimal|null);

        /** Repo openVolUsd. */
        public openVolUsd?: (IRIS.IDecimal|null);

        /** Repo closeVolKzt. */
        public closeVolKzt?: (IRIS.IDecimal|null);

        /** Repo closeVolUsd. */
        public closeVolUsd?: (IRIS.IDecimal|null);

        /** Repo yield. */
        public yield?: (IRIS.IDecimal|null);

        /** Repo version. */
        public version: (number|Long);

        /** Repo board. */
        public board: string;

        /** Repo nonKase. */
        public nonKase: boolean;

        /** Repo secType. */
        public secType: IRIS.SecType;

        /** Repo priceType. */
        public priceType: IRIS.PriceType;

        /** Repo actualSin. */
        public actualSin: string;

        /**
         * Creates a new Repo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Repo instance
         */
        public static create(properties?: IRIS.IRepo): IRIS.Repo;

        /**
         * Encodes the specified Repo message. Does not implicitly {@link IRIS.Repo.verify|verify} messages.
         * @param message Repo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IRepo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Repo message, length delimited. Does not implicitly {@link IRIS.Repo.verify|verify} messages.
         * @param message Repo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IRepo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Repo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Repo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.Repo;

        /**
         * Decodes a Repo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Repo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.Repo;

        /**
         * Verifies a Repo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Repo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Repo
         */
        public static fromObject(object: { [k: string]: any }): IRIS.Repo;

        /**
         * Creates a plain object from a Repo message. Also converts values to other types if specified.
         * @param message Repo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.Repo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Repo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** RepoSortField enum. */
    enum RepoSortField {
        RSF_OPEN_TIME = 0,
        RSF_CLOSE_TIME = 1,
        RSF_PROLONG_DATE = 2,
        RSF_KRED_DAYS = 3,
        RSF_SEC_CODE = 4,
        RSF_AUTO_CODE = 5,
        RSF_OPEN_PRICE = 6,
        RSF_CLOSE_PRICE = 7,
        RSF_VOLUME = 8,
        RSF_OPEN_VOL_KZT = 9,
        RSF_OPEN_VOL_USD = 10,
        RSF_CLOSE_VOL_KZT = 11,
        RSF_CLOSE_VOL_USD = 12,
        RSF_YIELD = 13,
        RSF_VERSION = 14,
        RSF_ID = 15,
        RSF_EXTID = 16
    }

    /** Properties of a ShortRepoInfo. */
    interface IShortRepoInfo {

        /** ShortRepoInfo repoId */
        repoId?: (number|null);

        /** ShortRepoInfo openTime */
        openTime?: (IRIS.IDateTime|null);

        /** ShortRepoInfo closeTime */
        closeTime?: (IRIS.IDateTime|null);

        /** ShortRepoInfo eventType */
        eventType?: (IRIS.EventType|null);
    }

    /** Represents a ShortRepoInfo. */
    class ShortRepoInfo implements IShortRepoInfo {

        /**
         * Constructs a new ShortRepoInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IShortRepoInfo);

        /** ShortRepoInfo repoId. */
        public repoId: number;

        /** ShortRepoInfo openTime. */
        public openTime?: (IRIS.IDateTime|null);

        /** ShortRepoInfo closeTime. */
        public closeTime?: (IRIS.IDateTime|null);

        /** ShortRepoInfo eventType. */
        public eventType: IRIS.EventType;

        /**
         * Creates a new ShortRepoInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShortRepoInfo instance
         */
        public static create(properties?: IRIS.IShortRepoInfo): IRIS.ShortRepoInfo;

        /**
         * Encodes the specified ShortRepoInfo message. Does not implicitly {@link IRIS.ShortRepoInfo.verify|verify} messages.
         * @param message ShortRepoInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IShortRepoInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShortRepoInfo message, length delimited. Does not implicitly {@link IRIS.ShortRepoInfo.verify|verify} messages.
         * @param message ShortRepoInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IShortRepoInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShortRepoInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShortRepoInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.ShortRepoInfo;

        /**
         * Decodes a ShortRepoInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShortRepoInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.ShortRepoInfo;

        /**
         * Verifies a ShortRepoInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShortRepoInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShortRepoInfo
         */
        public static fromObject(object: { [k: string]: any }): IRIS.ShortRepoInfo;

        /**
         * Creates a plain object from a ShortRepoInfo message. Also converts values to other types if specified.
         * @param message ShortRepoInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.ShortRepoInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShortRepoInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RepoFilter. */
    interface IRepoFilter {

        /** RepoFilter period */
        period?: (IRIS.IDatePeriod|null);

        /** RepoFilter instrumentsFilter */
        instrumentsFilter?: (IRIS.IInstrumentsFilter|null);

        /** RepoFilter versionFrom */
        versionFrom?: (number|Long|null);

        /** RepoFilter repoIds */
        repoIds?: ((number|Long)[]|null);
    }

    /** Represents a RepoFilter. */
    class RepoFilter implements IRepoFilter {

        /**
         * Constructs a new RepoFilter.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IRepoFilter);

        /** RepoFilter period. */
        public period?: (IRIS.IDatePeriod|null);

        /** RepoFilter instrumentsFilter. */
        public instrumentsFilter?: (IRIS.IInstrumentsFilter|null);

        /** RepoFilter versionFrom. */
        public versionFrom: (number|Long);

        /** RepoFilter repoIds. */
        public repoIds: (number|Long)[];

        /**
         * Creates a new RepoFilter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RepoFilter instance
         */
        public static create(properties?: IRIS.IRepoFilter): IRIS.RepoFilter;

        /**
         * Encodes the specified RepoFilter message. Does not implicitly {@link IRIS.RepoFilter.verify|verify} messages.
         * @param message RepoFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IRepoFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RepoFilter message, length delimited. Does not implicitly {@link IRIS.RepoFilter.verify|verify} messages.
         * @param message RepoFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IRepoFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RepoFilter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RepoFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.RepoFilter;

        /**
         * Decodes a RepoFilter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RepoFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.RepoFilter;

        /**
         * Verifies a RepoFilter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RepoFilter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RepoFilter
         */
        public static fromObject(object: { [k: string]: any }): IRIS.RepoFilter;

        /**
         * Creates a plain object from a RepoFilter message. Also converts values to other types if specified.
         * @param message RepoFilter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.RepoFilter, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RepoFilter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RepoSortRecord. */
    interface IRepoSortRecord {

        /** RepoSortRecord field */
        field?: (IRIS.RepoSortField|null);

        /** RepoSortRecord desc */
        desc?: (boolean|null);
    }

    /** Represents a RepoSortRecord. */
    class RepoSortRecord implements IRepoSortRecord {

        /**
         * Constructs a new RepoSortRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IRepoSortRecord);

        /** RepoSortRecord field. */
        public field: IRIS.RepoSortField;

        /** RepoSortRecord desc. */
        public desc: boolean;

        /**
         * Creates a new RepoSortRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RepoSortRecord instance
         */
        public static create(properties?: IRIS.IRepoSortRecord): IRIS.RepoSortRecord;

        /**
         * Encodes the specified RepoSortRecord message. Does not implicitly {@link IRIS.RepoSortRecord.verify|verify} messages.
         * @param message RepoSortRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IRepoSortRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RepoSortRecord message, length delimited. Does not implicitly {@link IRIS.RepoSortRecord.verify|verify} messages.
         * @param message RepoSortRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IRepoSortRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RepoSortRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RepoSortRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.RepoSortRecord;

        /**
         * Decodes a RepoSortRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RepoSortRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.RepoSortRecord;

        /**
         * Verifies a RepoSortRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RepoSortRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RepoSortRecord
         */
        public static fromObject(object: { [k: string]: any }): IRIS.RepoSortRecord;

        /**
         * Creates a plain object from a RepoSortRecord message. Also converts values to other types if specified.
         * @param message RepoSortRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.RepoSortRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RepoSortRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RepoCountRequest. */
    interface IRepoCountRequest {

        /** RepoCountRequest filter */
        filter?: (IRIS.IRepoFilter|null);
    }

    /**
     * Запрос на получение информации о количестве сделок на рынке операций репо подходящих под условия фильтрации.
     * Примечание: Возвращаемое количество учитывает не только ограничения заданные в фильтре, но и ограничения наложенные на выполняющего запрос пользователя.
     */
    class RepoCountRequest implements IRepoCountRequest {

        /**
         * Constructs a new RepoCountRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IRepoCountRequest);

        /** RepoCountRequest filter. */
        public filter?: (IRIS.IRepoFilter|null);

        /**
         * Creates a new RepoCountRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RepoCountRequest instance
         */
        public static create(properties?: IRIS.IRepoCountRequest): IRIS.RepoCountRequest;

        /**
         * Encodes the specified RepoCountRequest message. Does not implicitly {@link IRIS.RepoCountRequest.verify|verify} messages.
         * @param message RepoCountRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IRepoCountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RepoCountRequest message, length delimited. Does not implicitly {@link IRIS.RepoCountRequest.verify|verify} messages.
         * @param message RepoCountRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IRepoCountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RepoCountRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RepoCountRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.RepoCountRequest;

        /**
         * Decodes a RepoCountRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RepoCountRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.RepoCountRequest;

        /**
         * Verifies a RepoCountRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RepoCountRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RepoCountRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.RepoCountRequest;

        /**
         * Creates a plain object from a RepoCountRequest message. Also converts values to other types if specified.
         * @param message RepoCountRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.RepoCountRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RepoCountRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RepoCountReply. */
    interface IRepoCountReply {

        /** RepoCountReply count */
        count?: (number|null);
    }

    /** Represents a RepoCountReply. */
    class RepoCountReply implements IRepoCountReply {

        /**
         * Constructs a new RepoCountReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IRepoCountReply);

        /** RepoCountReply count. */
        public count: number;

        /**
         * Creates a new RepoCountReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RepoCountReply instance
         */
        public static create(properties?: IRIS.IRepoCountReply): IRIS.RepoCountReply;

        /**
         * Encodes the specified RepoCountReply message. Does not implicitly {@link IRIS.RepoCountReply.verify|verify} messages.
         * @param message RepoCountReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IRepoCountReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RepoCountReply message, length delimited. Does not implicitly {@link IRIS.RepoCountReply.verify|verify} messages.
         * @param message RepoCountReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IRepoCountReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RepoCountReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RepoCountReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.RepoCountReply;

        /**
         * Decodes a RepoCountReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RepoCountReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.RepoCountReply;

        /**
         * Verifies a RepoCountReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RepoCountReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RepoCountReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.RepoCountReply;

        /**
         * Creates a plain object from a RepoCountReply message. Also converts values to other types if specified.
         * @param message RepoCountReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.RepoCountReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RepoCountReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RepoRequest. */
    interface IRepoRequest {

        /** RepoRequest filter */
        filter?: (IRIS.IRepoFilter|null);

        /** RepoRequest range */
        range?: (IRIS.IRange|null);

        /** RepoRequest bandle */
        bandle?: (number|null);

        /** RepoRequest sorting */
        sorting?: (IRIS.IRepoSortRecord[]|null);
    }

    /** Represents a RepoRequest. */
    class RepoRequest implements IRepoRequest {

        /**
         * Constructs a new RepoRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IRepoRequest);

        /** RepoRequest filter. */
        public filter?: (IRIS.IRepoFilter|null);

        /** RepoRequest range. */
        public range?: (IRIS.IRange|null);

        /** RepoRequest bandle. */
        public bandle?: (number|null);

        /** RepoRequest sorting. */
        public sorting: IRIS.IRepoSortRecord[];

        /** RepoRequest records. */
        public records?: ("range"|"bandle");

        /**
         * Creates a new RepoRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RepoRequest instance
         */
        public static create(properties?: IRIS.IRepoRequest): IRIS.RepoRequest;

        /**
         * Encodes the specified RepoRequest message. Does not implicitly {@link IRIS.RepoRequest.verify|verify} messages.
         * @param message RepoRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IRepoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RepoRequest message, length delimited. Does not implicitly {@link IRIS.RepoRequest.verify|verify} messages.
         * @param message RepoRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IRepoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RepoRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RepoRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.RepoRequest;

        /**
         * Decodes a RepoRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RepoRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.RepoRequest;

        /**
         * Verifies a RepoRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RepoRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RepoRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.RepoRequest;

        /**
         * Creates a plain object from a RepoRequest message. Also converts values to other types if specified.
         * @param message RepoRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.RepoRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RepoRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RepoReply. */
    interface IRepoReply {

        /** RepoReply range */
        range?: (IRIS.IRange|null);

        /** RepoReply deals */
        deals?: (IRIS.IRepo[]|null);
    }

    /** Represents a RepoReply. */
    class RepoReply implements IRepoReply {

        /**
         * Constructs a new RepoReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IRepoReply);

        /** RepoReply range. */
        public range?: (IRIS.IRange|null);

        /** RepoReply deals. */
        public deals: IRIS.IRepo[];

        /**
         * Creates a new RepoReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RepoReply instance
         */
        public static create(properties?: IRIS.IRepoReply): IRIS.RepoReply;

        /**
         * Encodes the specified RepoReply message. Does not implicitly {@link IRIS.RepoReply.verify|verify} messages.
         * @param message RepoReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IRepoReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RepoReply message, length delimited. Does not implicitly {@link IRIS.RepoReply.verify|verify} messages.
         * @param message RepoReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IRepoReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RepoReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RepoReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.RepoReply;

        /**
         * Decodes a RepoReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RepoReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.RepoReply;

        /**
         * Verifies a RepoReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RepoReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RepoReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.RepoReply;

        /**
         * Creates a plain object from a RepoReply message. Also converts values to other types if specified.
         * @param message RepoReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.RepoReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RepoReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RepoUpdate. */
    interface IRepoUpdate {

        /** RepoUpdate deals */
        deals?: (IRIS.IShortRepoInfo[]|null);
    }

    /** Represents a RepoUpdate. */
    class RepoUpdate implements IRepoUpdate {

        /**
         * Constructs a new RepoUpdate.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IRepoUpdate);

        /** RepoUpdate deals. */
        public deals: IRIS.IShortRepoInfo[];

        /**
         * Creates a new RepoUpdate instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RepoUpdate instance
         */
        public static create(properties?: IRIS.IRepoUpdate): IRIS.RepoUpdate;

        /**
         * Encodes the specified RepoUpdate message. Does not implicitly {@link IRIS.RepoUpdate.verify|verify} messages.
         * @param message RepoUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IRepoUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RepoUpdate message, length delimited. Does not implicitly {@link IRIS.RepoUpdate.verify|verify} messages.
         * @param message RepoUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IRepoUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RepoUpdate message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RepoUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.RepoUpdate;

        /**
         * Decodes a RepoUpdate message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RepoUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.RepoUpdate;

        /**
         * Verifies a RepoUpdate message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RepoUpdate message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RepoUpdate
         */
        public static fromObject(object: { [k: string]: any }): IRIS.RepoUpdate;

        /**
         * Creates a plain object from a RepoUpdate message. Also converts values to other types if specified.
         * @param message RepoUpdate
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.RepoUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RepoUpdate to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RepoExportRequest. */
    interface IRepoExportRequest {

        /** RepoExportRequest filter */
        filter?: (IRIS.IRepoFilter|null);

        /** RepoExportRequest sorting */
        sorting?: (IRIS.IRepoSortRecord[]|null);

        /** RepoExportRequest format */
        format?: (IRIS.ExportFileFormat|null);

        /** RepoExportRequest lang */
        lang?: (IRIS.Language|null);
    }

    /** Represents a RepoExportRequest. */
    class RepoExportRequest implements IRepoExportRequest {

        /**
         * Constructs a new RepoExportRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IRepoExportRequest);

        /** RepoExportRequest filter. */
        public filter?: (IRIS.IRepoFilter|null);

        /** RepoExportRequest sorting. */
        public sorting: IRIS.IRepoSortRecord[];

        /** RepoExportRequest format. */
        public format: IRIS.ExportFileFormat;

        /** RepoExportRequest lang. */
        public lang: IRIS.Language;

        /**
         * Creates a new RepoExportRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RepoExportRequest instance
         */
        public static create(properties?: IRIS.IRepoExportRequest): IRIS.RepoExportRequest;

        /**
         * Encodes the specified RepoExportRequest message. Does not implicitly {@link IRIS.RepoExportRequest.verify|verify} messages.
         * @param message RepoExportRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IRepoExportRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RepoExportRequest message, length delimited. Does not implicitly {@link IRIS.RepoExportRequest.verify|verify} messages.
         * @param message RepoExportRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IRepoExportRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RepoExportRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RepoExportRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.RepoExportRequest;

        /**
         * Decodes a RepoExportRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RepoExportRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.RepoExportRequest;

        /**
         * Verifies a RepoExportRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RepoExportRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RepoExportRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.RepoExportRequest;

        /**
         * Creates a plain object from a RepoExportRequest message. Also converts values to other types if specified.
         * @param message RepoExportRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.RepoExportRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RepoExportRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RepoExportReply. */
    interface IRepoExportReply {

        /** RepoExportReply url */
        url?: (string|null);
    }

    /** Represents a RepoExportReply. */
    class RepoExportReply implements IRepoExportReply {

        /**
         * Constructs a new RepoExportReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IRepoExportReply);

        /** RepoExportReply url. */
        public url: string;

        /**
         * Creates a new RepoExportReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RepoExportReply instance
         */
        public static create(properties?: IRIS.IRepoExportReply): IRIS.RepoExportReply;

        /**
         * Encodes the specified RepoExportReply message. Does not implicitly {@link IRIS.RepoExportReply.verify|verify} messages.
         * @param message RepoExportReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IRepoExportReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RepoExportReply message, length delimited. Does not implicitly {@link IRIS.RepoExportReply.verify|verify} messages.
         * @param message RepoExportReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IRepoExportReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RepoExportReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RepoExportReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.RepoExportReply;

        /**
         * Decodes a RepoExportReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RepoExportReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.RepoExportReply;

        /**
         * Verifies a RepoExportReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RepoExportReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RepoExportReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.RepoExportReply;

        /**
         * Creates a plain object from a RepoExportReply message. Also converts values to other types if specified.
         * @param message RepoExportReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.RepoExportReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RepoExportReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RepoOrder. */
    interface IRepoOrder {

        /** RepoOrder repoordersId */
        repoordersId?: (number|Long|null);

        /** RepoOrder serial */
        serial?: (number|Long|null);

        /** RepoOrder orderTime */
        orderTime?: (IRIS.IDateTime|null);

        /** RepoOrder deltime */
        deltime?: (IRIS.IDateTime|null);

        /** RepoOrder direction */
        direction?: (IRIS.OrderDirection|null);

        /** RepoOrder status */
        status?: (IRIS.OrderStatus|null);

        /** RepoOrder instrumentId */
        instrumentId?: (number|null);

        /** RepoOrder instrumentCode */
        instrumentCode?: (string|null);

        /** RepoOrder actualSin */
        actualSin?: (string|null);

        /** RepoOrder currenciesId */
        currenciesId?: (number|null);

        /** RepoOrder price */
        price?: (IRIS.IDecimal|null);

        /** RepoOrder yield */
        "yield"?: (IRIS.IDecimal|null);

        /** RepoOrder volume */
        volume?: (number|Long|null);

        /** RepoOrder volrest */
        volrest?: (number|Long|null);

        /** RepoOrder version */
        version?: (number|Long|null);

        /** RepoOrder board */
        board?: (string|null);

        /** RepoOrder volKzt */
        volKzt?: (IRIS.IDecimal|null);

        /** RepoOrder volUsd */
        volUsd?: (IRIS.IDecimal|null);

        /** RepoOrder volcontr */
        volcontr?: (IRIS.IDecimal|null);

        /** RepoOrder secType */
        secType?: (IRIS.SecType|null);
    }

    /** Represents a RepoOrder. */
    class RepoOrder implements IRepoOrder {

        /**
         * Constructs a new RepoOrder.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IRepoOrder);

        /** RepoOrder repoordersId. */
        public repoordersId: (number|Long);

        /** RepoOrder serial. */
        public serial: (number|Long);

        /** RepoOrder orderTime. */
        public orderTime?: (IRIS.IDateTime|null);

        /** RepoOrder deltime. */
        public deltime?: (IRIS.IDateTime|null);

        /** RepoOrder direction. */
        public direction: IRIS.OrderDirection;

        /** RepoOrder status. */
        public status: IRIS.OrderStatus;

        /** RepoOrder instrumentId. */
        public instrumentId: number;

        /** RepoOrder instrumentCode. */
        public instrumentCode: string;

        /** RepoOrder actualSin. */
        public actualSin: string;

        /** RepoOrder currenciesId. */
        public currenciesId: number;

        /** RepoOrder price. */
        public price?: (IRIS.IDecimal|null);

        /** RepoOrder yield. */
        public yield?: (IRIS.IDecimal|null);

        /** RepoOrder volume. */
        public volume: (number|Long);

        /** RepoOrder volrest. */
        public volrest: (number|Long);

        /** RepoOrder version. */
        public version: (number|Long);

        /** RepoOrder board. */
        public board: string;

        /** RepoOrder volKzt. */
        public volKzt?: (IRIS.IDecimal|null);

        /** RepoOrder volUsd. */
        public volUsd?: (IRIS.IDecimal|null);

        /** RepoOrder volcontr. */
        public volcontr?: (IRIS.IDecimal|null);

        /** RepoOrder secType. */
        public secType: IRIS.SecType;

        /**
         * Creates a new RepoOrder instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RepoOrder instance
         */
        public static create(properties?: IRIS.IRepoOrder): IRIS.RepoOrder;

        /**
         * Encodes the specified RepoOrder message. Does not implicitly {@link IRIS.RepoOrder.verify|verify} messages.
         * @param message RepoOrder message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IRepoOrder, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RepoOrder message, length delimited. Does not implicitly {@link IRIS.RepoOrder.verify|verify} messages.
         * @param message RepoOrder message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IRepoOrder, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RepoOrder message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RepoOrder
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.RepoOrder;

        /**
         * Decodes a RepoOrder message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RepoOrder
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.RepoOrder;

        /**
         * Verifies a RepoOrder message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RepoOrder message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RepoOrder
         */
        public static fromObject(object: { [k: string]: any }): IRIS.RepoOrder;

        /**
         * Creates a plain object from a RepoOrder message. Also converts values to other types if specified.
         * @param message RepoOrder
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.RepoOrder, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RepoOrder to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** RepoOrdersSortField enum. */
    enum RepoOrdersSortField {
        ROSF_ORDER_TIME = 0,
        ROSF_INSTRUMENT = 1,
        ROSF_PRICE = 2,
        ROSF_VOLUME = 4,
        ROSF_YIELD = 5,
        ROSF_VERSION = 6,
        ROSF_ID = 7,
        ROSF_EXTID = 8
    }

    /** Properties of a ShortRepoOrderInfo. */
    interface IShortRepoOrderInfo {

        /** ShortRepoOrderInfo repoorderId */
        repoorderId?: (number|Long|null);

        /** ShortRepoOrderInfo orderTime */
        orderTime?: (IRIS.IDateTime|null);

        /** ShortRepoOrderInfo eventType */
        eventType?: (IRIS.EventType|null);
    }

    /** Represents a ShortRepoOrderInfo. */
    class ShortRepoOrderInfo implements IShortRepoOrderInfo {

        /**
         * Constructs a new ShortRepoOrderInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IShortRepoOrderInfo);

        /** ShortRepoOrderInfo repoorderId. */
        public repoorderId: (number|Long);

        /** ShortRepoOrderInfo orderTime. */
        public orderTime?: (IRIS.IDateTime|null);

        /** ShortRepoOrderInfo eventType. */
        public eventType: IRIS.EventType;

        /**
         * Creates a new ShortRepoOrderInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShortRepoOrderInfo instance
         */
        public static create(properties?: IRIS.IShortRepoOrderInfo): IRIS.ShortRepoOrderInfo;

        /**
         * Encodes the specified ShortRepoOrderInfo message. Does not implicitly {@link IRIS.ShortRepoOrderInfo.verify|verify} messages.
         * @param message ShortRepoOrderInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IShortRepoOrderInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShortRepoOrderInfo message, length delimited. Does not implicitly {@link IRIS.ShortRepoOrderInfo.verify|verify} messages.
         * @param message ShortRepoOrderInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IShortRepoOrderInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShortRepoOrderInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShortRepoOrderInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.ShortRepoOrderInfo;

        /**
         * Decodes a ShortRepoOrderInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShortRepoOrderInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.ShortRepoOrderInfo;

        /**
         * Verifies a ShortRepoOrderInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShortRepoOrderInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShortRepoOrderInfo
         */
        public static fromObject(object: { [k: string]: any }): IRIS.ShortRepoOrderInfo;

        /**
         * Creates a plain object from a ShortRepoOrderInfo message. Also converts values to other types if specified.
         * @param message ShortRepoOrderInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.ShortRepoOrderInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShortRepoOrderInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RepoOrdersFilter. */
    interface IRepoOrdersFilter {

        /** RepoOrdersFilter period */
        period?: (IRIS.IDatePeriod|null);

        /** RepoOrdersFilter codes */
        codes?: (string[]|null);

        /** RepoOrdersFilter instrumentIds */
        instrumentIds?: (number[]|null);

        /** RepoOrdersFilter direction */
        direction?: (IRIS.OrderDirection[]|null);

        /** RepoOrdersFilter versionFrom */
        versionFrom?: (number|Long|null);

        /** RepoOrdersFilter repoordersIds */
        repoordersIds?: ((number|Long)[]|null);
    }

    /** Represents a RepoOrdersFilter. */
    class RepoOrdersFilter implements IRepoOrdersFilter {

        /**
         * Constructs a new RepoOrdersFilter.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IRepoOrdersFilter);

        /** RepoOrdersFilter period. */
        public period?: (IRIS.IDatePeriod|null);

        /** RepoOrdersFilter codes. */
        public codes: string[];

        /** RepoOrdersFilter instrumentIds. */
        public instrumentIds: number[];

        /** RepoOrdersFilter direction. */
        public direction: IRIS.OrderDirection[];

        /** RepoOrdersFilter versionFrom. */
        public versionFrom: (number|Long);

        /** RepoOrdersFilter repoordersIds. */
        public repoordersIds: (number|Long)[];

        /**
         * Creates a new RepoOrdersFilter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RepoOrdersFilter instance
         */
        public static create(properties?: IRIS.IRepoOrdersFilter): IRIS.RepoOrdersFilter;

        /**
         * Encodes the specified RepoOrdersFilter message. Does not implicitly {@link IRIS.RepoOrdersFilter.verify|verify} messages.
         * @param message RepoOrdersFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IRepoOrdersFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RepoOrdersFilter message, length delimited. Does not implicitly {@link IRIS.RepoOrdersFilter.verify|verify} messages.
         * @param message RepoOrdersFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IRepoOrdersFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RepoOrdersFilter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RepoOrdersFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.RepoOrdersFilter;

        /**
         * Decodes a RepoOrdersFilter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RepoOrdersFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.RepoOrdersFilter;

        /**
         * Verifies a RepoOrdersFilter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RepoOrdersFilter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RepoOrdersFilter
         */
        public static fromObject(object: { [k: string]: any }): IRIS.RepoOrdersFilter;

        /**
         * Creates a plain object from a RepoOrdersFilter message. Also converts values to other types if specified.
         * @param message RepoOrdersFilter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.RepoOrdersFilter, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RepoOrdersFilter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RepoOrdersSortRecord. */
    interface IRepoOrdersSortRecord {

        /** RepoOrdersSortRecord field */
        field?: (IRIS.RepoOrdersSortField|null);

        /** RepoOrdersSortRecord desc */
        desc?: (boolean|null);
    }

    /** Represents a RepoOrdersSortRecord. */
    class RepoOrdersSortRecord implements IRepoOrdersSortRecord {

        /**
         * Constructs a new RepoOrdersSortRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IRepoOrdersSortRecord);

        /** RepoOrdersSortRecord field. */
        public field: IRIS.RepoOrdersSortField;

        /** RepoOrdersSortRecord desc. */
        public desc: boolean;

        /**
         * Creates a new RepoOrdersSortRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RepoOrdersSortRecord instance
         */
        public static create(properties?: IRIS.IRepoOrdersSortRecord): IRIS.RepoOrdersSortRecord;

        /**
         * Encodes the specified RepoOrdersSortRecord message. Does not implicitly {@link IRIS.RepoOrdersSortRecord.verify|verify} messages.
         * @param message RepoOrdersSortRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IRepoOrdersSortRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RepoOrdersSortRecord message, length delimited. Does not implicitly {@link IRIS.RepoOrdersSortRecord.verify|verify} messages.
         * @param message RepoOrdersSortRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IRepoOrdersSortRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RepoOrdersSortRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RepoOrdersSortRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.RepoOrdersSortRecord;

        /**
         * Decodes a RepoOrdersSortRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RepoOrdersSortRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.RepoOrdersSortRecord;

        /**
         * Verifies a RepoOrdersSortRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RepoOrdersSortRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RepoOrdersSortRecord
         */
        public static fromObject(object: { [k: string]: any }): IRIS.RepoOrdersSortRecord;

        /**
         * Creates a plain object from a RepoOrdersSortRecord message. Also converts values to other types if specified.
         * @param message RepoOrdersSortRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.RepoOrdersSortRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RepoOrdersSortRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RepoOrdersCountRequest. */
    interface IRepoOrdersCountRequest {

        /** RepoOrdersCountRequest filter */
        filter?: (IRIS.IRepoOrdersFilter|null);
    }

    /** Represents a RepoOrdersCountRequest. */
    class RepoOrdersCountRequest implements IRepoOrdersCountRequest {

        /**
         * Constructs a new RepoOrdersCountRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IRepoOrdersCountRequest);

        /** RepoOrdersCountRequest filter. */
        public filter?: (IRIS.IRepoOrdersFilter|null);

        /**
         * Creates a new RepoOrdersCountRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RepoOrdersCountRequest instance
         */
        public static create(properties?: IRIS.IRepoOrdersCountRequest): IRIS.RepoOrdersCountRequest;

        /**
         * Encodes the specified RepoOrdersCountRequest message. Does not implicitly {@link IRIS.RepoOrdersCountRequest.verify|verify} messages.
         * @param message RepoOrdersCountRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IRepoOrdersCountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RepoOrdersCountRequest message, length delimited. Does not implicitly {@link IRIS.RepoOrdersCountRequest.verify|verify} messages.
         * @param message RepoOrdersCountRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IRepoOrdersCountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RepoOrdersCountRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RepoOrdersCountRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.RepoOrdersCountRequest;

        /**
         * Decodes a RepoOrdersCountRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RepoOrdersCountRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.RepoOrdersCountRequest;

        /**
         * Verifies a RepoOrdersCountRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RepoOrdersCountRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RepoOrdersCountRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.RepoOrdersCountRequest;

        /**
         * Creates a plain object from a RepoOrdersCountRequest message. Also converts values to other types if specified.
         * @param message RepoOrdersCountRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.RepoOrdersCountRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RepoOrdersCountRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RepoOrdersCountReply. */
    interface IRepoOrdersCountReply {

        /** RepoOrdersCountReply count */
        count?: (number|null);
    }

    /** Represents a RepoOrdersCountReply. */
    class RepoOrdersCountReply implements IRepoOrdersCountReply {

        /**
         * Constructs a new RepoOrdersCountReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IRepoOrdersCountReply);

        /** RepoOrdersCountReply count. */
        public count: number;

        /**
         * Creates a new RepoOrdersCountReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RepoOrdersCountReply instance
         */
        public static create(properties?: IRIS.IRepoOrdersCountReply): IRIS.RepoOrdersCountReply;

        /**
         * Encodes the specified RepoOrdersCountReply message. Does not implicitly {@link IRIS.RepoOrdersCountReply.verify|verify} messages.
         * @param message RepoOrdersCountReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IRepoOrdersCountReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RepoOrdersCountReply message, length delimited. Does not implicitly {@link IRIS.RepoOrdersCountReply.verify|verify} messages.
         * @param message RepoOrdersCountReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IRepoOrdersCountReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RepoOrdersCountReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RepoOrdersCountReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.RepoOrdersCountReply;

        /**
         * Decodes a RepoOrdersCountReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RepoOrdersCountReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.RepoOrdersCountReply;

        /**
         * Verifies a RepoOrdersCountReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RepoOrdersCountReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RepoOrdersCountReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.RepoOrdersCountReply;

        /**
         * Creates a plain object from a RepoOrdersCountReply message. Also converts values to other types if specified.
         * @param message RepoOrdersCountReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.RepoOrdersCountReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RepoOrdersCountReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RepoOrdersRequest. */
    interface IRepoOrdersRequest {

        /** RepoOrdersRequest filter */
        filter?: (IRIS.IRepoOrdersFilter|null);

        /** RepoOrdersRequest range */
        range?: (IRIS.IRange|null);

        /** RepoOrdersRequest bandle */
        bandle?: (number|null);

        /** RepoOrdersRequest sorting */
        sorting?: (IRIS.IRepoOrdersSortRecord[]|null);
    }

    /** Represents a RepoOrdersRequest. */
    class RepoOrdersRequest implements IRepoOrdersRequest {

        /**
         * Constructs a new RepoOrdersRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IRepoOrdersRequest);

        /** RepoOrdersRequest filter. */
        public filter?: (IRIS.IRepoOrdersFilter|null);

        /** RepoOrdersRequest range. */
        public range?: (IRIS.IRange|null);

        /** RepoOrdersRequest bandle. */
        public bandle?: (number|null);

        /** RepoOrdersRequest sorting. */
        public sorting: IRIS.IRepoOrdersSortRecord[];

        /** RepoOrdersRequest records. */
        public records?: ("range"|"bandle");

        /**
         * Creates a new RepoOrdersRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RepoOrdersRequest instance
         */
        public static create(properties?: IRIS.IRepoOrdersRequest): IRIS.RepoOrdersRequest;

        /**
         * Encodes the specified RepoOrdersRequest message. Does not implicitly {@link IRIS.RepoOrdersRequest.verify|verify} messages.
         * @param message RepoOrdersRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IRepoOrdersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RepoOrdersRequest message, length delimited. Does not implicitly {@link IRIS.RepoOrdersRequest.verify|verify} messages.
         * @param message RepoOrdersRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IRepoOrdersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RepoOrdersRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RepoOrdersRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.RepoOrdersRequest;

        /**
         * Decodes a RepoOrdersRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RepoOrdersRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.RepoOrdersRequest;

        /**
         * Verifies a RepoOrdersRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RepoOrdersRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RepoOrdersRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.RepoOrdersRequest;

        /**
         * Creates a plain object from a RepoOrdersRequest message. Also converts values to other types if specified.
         * @param message RepoOrdersRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.RepoOrdersRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RepoOrdersRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RepoOrdersReply. */
    interface IRepoOrdersReply {

        /** RepoOrdersReply range */
        range?: (IRIS.IRange|null);

        /** RepoOrdersReply repoorders */
        repoorders?: (IRIS.IRepoOrder[]|null);
    }

    /** Represents a RepoOrdersReply. */
    class RepoOrdersReply implements IRepoOrdersReply {

        /**
         * Constructs a new RepoOrdersReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IRepoOrdersReply);

        /** RepoOrdersReply range. */
        public range?: (IRIS.IRange|null);

        /** RepoOrdersReply repoorders. */
        public repoorders: IRIS.IRepoOrder[];

        /**
         * Creates a new RepoOrdersReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RepoOrdersReply instance
         */
        public static create(properties?: IRIS.IRepoOrdersReply): IRIS.RepoOrdersReply;

        /**
         * Encodes the specified RepoOrdersReply message. Does not implicitly {@link IRIS.RepoOrdersReply.verify|verify} messages.
         * @param message RepoOrdersReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IRepoOrdersReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RepoOrdersReply message, length delimited. Does not implicitly {@link IRIS.RepoOrdersReply.verify|verify} messages.
         * @param message RepoOrdersReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IRepoOrdersReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RepoOrdersReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RepoOrdersReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.RepoOrdersReply;

        /**
         * Decodes a RepoOrdersReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RepoOrdersReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.RepoOrdersReply;

        /**
         * Verifies a RepoOrdersReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RepoOrdersReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RepoOrdersReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.RepoOrdersReply;

        /**
         * Creates a plain object from a RepoOrdersReply message. Also converts values to other types if specified.
         * @param message RepoOrdersReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.RepoOrdersReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RepoOrdersReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RepoOrdersUpdate. */
    interface IRepoOrdersUpdate {

        /** RepoOrdersUpdate repoorders */
        repoorders?: (IRIS.IShortRepoOrderInfo[]|null);
    }

    /** Represents a RepoOrdersUpdate. */
    class RepoOrdersUpdate implements IRepoOrdersUpdate {

        /**
         * Constructs a new RepoOrdersUpdate.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IRepoOrdersUpdate);

        /** RepoOrdersUpdate repoorders. */
        public repoorders: IRIS.IShortRepoOrderInfo[];

        /**
         * Creates a new RepoOrdersUpdate instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RepoOrdersUpdate instance
         */
        public static create(properties?: IRIS.IRepoOrdersUpdate): IRIS.RepoOrdersUpdate;

        /**
         * Encodes the specified RepoOrdersUpdate message. Does not implicitly {@link IRIS.RepoOrdersUpdate.verify|verify} messages.
         * @param message RepoOrdersUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IRepoOrdersUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RepoOrdersUpdate message, length delimited. Does not implicitly {@link IRIS.RepoOrdersUpdate.verify|verify} messages.
         * @param message RepoOrdersUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IRepoOrdersUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RepoOrdersUpdate message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RepoOrdersUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.RepoOrdersUpdate;

        /**
         * Decodes a RepoOrdersUpdate message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RepoOrdersUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.RepoOrdersUpdate;

        /**
         * Verifies a RepoOrdersUpdate message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RepoOrdersUpdate message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RepoOrdersUpdate
         */
        public static fromObject(object: { [k: string]: any }): IRIS.RepoOrdersUpdate;

        /**
         * Creates a plain object from a RepoOrdersUpdate message. Also converts values to other types if specified.
         * @param message RepoOrdersUpdate
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.RepoOrdersUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RepoOrdersUpdate to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RepoOrdersExportRequest. */
    interface IRepoOrdersExportRequest {

        /** RepoOrdersExportRequest filter */
        filter?: (IRIS.IRepoOrdersFilter|null);

        /** RepoOrdersExportRequest sorting */
        sorting?: (IRIS.IRepoOrdersSortRecord[]|null);

        /** RepoOrdersExportRequest format */
        format?: (IRIS.ExportFileFormat|null);

        /** RepoOrdersExportRequest lang */
        lang?: (IRIS.Language|null);
    }

    /** Represents a RepoOrdersExportRequest. */
    class RepoOrdersExportRequest implements IRepoOrdersExportRequest {

        /**
         * Constructs a new RepoOrdersExportRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IRepoOrdersExportRequest);

        /** RepoOrdersExportRequest filter. */
        public filter?: (IRIS.IRepoOrdersFilter|null);

        /** RepoOrdersExportRequest sorting. */
        public sorting: IRIS.IRepoOrdersSortRecord[];

        /** RepoOrdersExportRequest format. */
        public format: IRIS.ExportFileFormat;

        /** RepoOrdersExportRequest lang. */
        public lang: IRIS.Language;

        /**
         * Creates a new RepoOrdersExportRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RepoOrdersExportRequest instance
         */
        public static create(properties?: IRIS.IRepoOrdersExportRequest): IRIS.RepoOrdersExportRequest;

        /**
         * Encodes the specified RepoOrdersExportRequest message. Does not implicitly {@link IRIS.RepoOrdersExportRequest.verify|verify} messages.
         * @param message RepoOrdersExportRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IRepoOrdersExportRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RepoOrdersExportRequest message, length delimited. Does not implicitly {@link IRIS.RepoOrdersExportRequest.verify|verify} messages.
         * @param message RepoOrdersExportRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IRepoOrdersExportRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RepoOrdersExportRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RepoOrdersExportRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.RepoOrdersExportRequest;

        /**
         * Decodes a RepoOrdersExportRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RepoOrdersExportRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.RepoOrdersExportRequest;

        /**
         * Verifies a RepoOrdersExportRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RepoOrdersExportRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RepoOrdersExportRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.RepoOrdersExportRequest;

        /**
         * Creates a plain object from a RepoOrdersExportRequest message. Also converts values to other types if specified.
         * @param message RepoOrdersExportRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.RepoOrdersExportRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RepoOrdersExportRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RepoOrdersExportReply. */
    interface IRepoOrdersExportReply {

        /** RepoOrdersExportReply url */
        url?: (string|null);
    }

    /** Represents a RepoOrdersExportReply. */
    class RepoOrdersExportReply implements IRepoOrdersExportReply {

        /**
         * Constructs a new RepoOrdersExportReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IRepoOrdersExportReply);

        /** RepoOrdersExportReply url. */
        public url: string;

        /**
         * Creates a new RepoOrdersExportReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RepoOrdersExportReply instance
         */
        public static create(properties?: IRIS.IRepoOrdersExportReply): IRIS.RepoOrdersExportReply;

        /**
         * Encodes the specified RepoOrdersExportReply message. Does not implicitly {@link IRIS.RepoOrdersExportReply.verify|verify} messages.
         * @param message RepoOrdersExportReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IRepoOrdersExportReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RepoOrdersExportReply message, length delimited. Does not implicitly {@link IRIS.RepoOrdersExportReply.verify|verify} messages.
         * @param message RepoOrdersExportReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IRepoOrdersExportReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RepoOrdersExportReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RepoOrdersExportReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.RepoOrdersExportReply;

        /**
         * Decodes a RepoOrdersExportReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RepoOrdersExportReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.RepoOrdersExportReply;

        /**
         * Verifies a RepoOrdersExportReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RepoOrdersExportReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RepoOrdersExportReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.RepoOrdersExportReply;

        /**
         * Creates a plain object from a RepoOrdersExportReply message. Also converts values to other types if specified.
         * @param message RepoOrdersExportReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.RepoOrdersExportReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RepoOrdersExportReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Тип инструмента в списке наблюдения пользователя. */
    enum WatchlistInstrumentType {
        WIT_SECURITIES = 0,
        WIT_CURRENCIES = 1,
        WIT_INDICATORS = 2
    }

    /** Properties of a WatchlistInstrument. */
    interface IWatchlistInstrument {

        /** WatchlistInstrument instrumentId */
        instrumentId?: (number|null);

        /** WatchlistInstrument type */
        type?: (IRIS.WatchlistInstrumentType|null);

        /** WatchlistInstrument code */
        code?: (string|null);
    }

    /** Инструмент в списке наблюдения пользователя. */
    class WatchlistInstrument implements IWatchlistInstrument {

        /**
         * Constructs a new WatchlistInstrument.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IWatchlistInstrument);

        /** WatchlistInstrument instrumentId. */
        public instrumentId: number;

        /** WatchlistInstrument type. */
        public type: IRIS.WatchlistInstrumentType;

        /** WatchlistInstrument code. */
        public code: string;

        /**
         * Creates a new WatchlistInstrument instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WatchlistInstrument instance
         */
        public static create(properties?: IRIS.IWatchlistInstrument): IRIS.WatchlistInstrument;

        /**
         * Encodes the specified WatchlistInstrument message. Does not implicitly {@link IRIS.WatchlistInstrument.verify|verify} messages.
         * @param message WatchlistInstrument message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IWatchlistInstrument, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified WatchlistInstrument message, length delimited. Does not implicitly {@link IRIS.WatchlistInstrument.verify|verify} messages.
         * @param message WatchlistInstrument message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IWatchlistInstrument, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a WatchlistInstrument message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WatchlistInstrument
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.WatchlistInstrument;

        /**
         * Decodes a WatchlistInstrument message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WatchlistInstrument
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.WatchlistInstrument;

        /**
         * Verifies a WatchlistInstrument message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WatchlistInstrument message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WatchlistInstrument
         */
        public static fromObject(object: { [k: string]: any }): IRIS.WatchlistInstrument;

        /**
         * Creates a plain object from a WatchlistInstrument message. Also converts values to other types if specified.
         * @param message WatchlistInstrument
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.WatchlistInstrument, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WatchlistInstrument to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WatchlistSearchRequest. */
    interface IWatchlistSearchRequest {

        /** WatchlistSearchRequest code */
        code?: (string|null);

        /** WatchlistSearchRequest lang */
        lang?: (IRIS.Language|null);
    }

    /**
     * Запрос на поиск инструментов при добавлении в список наблюдения пользователя.
     * В ответе на запрос возвращается не более 100 инструментов каждого типа.
     */
    class WatchlistSearchRequest implements IWatchlistSearchRequest {

        /**
         * Constructs a new WatchlistSearchRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IWatchlistSearchRequest);

        /** WatchlistSearchRequest code. */
        public code: string;

        /** WatchlistSearchRequest lang. */
        public lang: IRIS.Language;

        /**
         * Creates a new WatchlistSearchRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WatchlistSearchRequest instance
         */
        public static create(properties?: IRIS.IWatchlistSearchRequest): IRIS.WatchlistSearchRequest;

        /**
         * Encodes the specified WatchlistSearchRequest message. Does not implicitly {@link IRIS.WatchlistSearchRequest.verify|verify} messages.
         * @param message WatchlistSearchRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IWatchlistSearchRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified WatchlistSearchRequest message, length delimited. Does not implicitly {@link IRIS.WatchlistSearchRequest.verify|verify} messages.
         * @param message WatchlistSearchRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IWatchlistSearchRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a WatchlistSearchRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WatchlistSearchRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.WatchlistSearchRequest;

        /**
         * Decodes a WatchlistSearchRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WatchlistSearchRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.WatchlistSearchRequest;

        /**
         * Verifies a WatchlistSearchRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WatchlistSearchRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WatchlistSearchRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.WatchlistSearchRequest;

        /**
         * Creates a plain object from a WatchlistSearchRequest message. Also converts values to other types if specified.
         * @param message WatchlistSearchRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.WatchlistSearchRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WatchlistSearchRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WatchlistSearchReply. */
    interface IWatchlistSearchReply {

        /** WatchlistSearchReply instruments */
        instruments?: (IRIS.IWatchlistInstrument[]|null);
    }

    /** Ответ с информацией о инструментах при добавлении в список наблюдения пользователя. */
    class WatchlistSearchReply implements IWatchlistSearchReply {

        /**
         * Constructs a new WatchlistSearchReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IWatchlistSearchReply);

        /** WatchlistSearchReply instruments. */
        public instruments: IRIS.IWatchlistInstrument[];

        /**
         * Creates a new WatchlistSearchReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WatchlistSearchReply instance
         */
        public static create(properties?: IRIS.IWatchlistSearchReply): IRIS.WatchlistSearchReply;

        /**
         * Encodes the specified WatchlistSearchReply message. Does not implicitly {@link IRIS.WatchlistSearchReply.verify|verify} messages.
         * @param message WatchlistSearchReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IWatchlistSearchReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified WatchlistSearchReply message, length delimited. Does not implicitly {@link IRIS.WatchlistSearchReply.verify|verify} messages.
         * @param message WatchlistSearchReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IWatchlistSearchReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a WatchlistSearchReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WatchlistSearchReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.WatchlistSearchReply;

        /**
         * Decodes a WatchlistSearchReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WatchlistSearchReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.WatchlistSearchReply;

        /**
         * Verifies a WatchlistSearchReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WatchlistSearchReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WatchlistSearchReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.WatchlistSearchReply;

        /**
         * Creates a plain object from a WatchlistSearchReply message. Also converts values to other types if specified.
         * @param message WatchlistSearchReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.WatchlistSearchReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WatchlistSearchReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WatchlistAddRequest. */
    interface IWatchlistAddRequest {

        /** WatchlistAddRequest instruments */
        instruments?: (IRIS.IWatchlistInstrument[]|null);
    }

    /** Запрос на добавление инструментов в список наблюдения пользователя. */
    class WatchlistAddRequest implements IWatchlistAddRequest {

        /**
         * Constructs a new WatchlistAddRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IWatchlistAddRequest);

        /** WatchlistAddRequest instruments. */
        public instruments: IRIS.IWatchlistInstrument[];

        /**
         * Creates a new WatchlistAddRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WatchlistAddRequest instance
         */
        public static create(properties?: IRIS.IWatchlistAddRequest): IRIS.WatchlistAddRequest;

        /**
         * Encodes the specified WatchlistAddRequest message. Does not implicitly {@link IRIS.WatchlistAddRequest.verify|verify} messages.
         * @param message WatchlistAddRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IWatchlistAddRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified WatchlistAddRequest message, length delimited. Does not implicitly {@link IRIS.WatchlistAddRequest.verify|verify} messages.
         * @param message WatchlistAddRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IWatchlistAddRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a WatchlistAddRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WatchlistAddRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.WatchlistAddRequest;

        /**
         * Decodes a WatchlistAddRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WatchlistAddRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.WatchlistAddRequest;

        /**
         * Verifies a WatchlistAddRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WatchlistAddRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WatchlistAddRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.WatchlistAddRequest;

        /**
         * Creates a plain object from a WatchlistAddRequest message. Also converts values to other types if specified.
         * @param message WatchlistAddRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.WatchlistAddRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WatchlistAddRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WatchlistAddReply. */
    interface IWatchlistAddReply {

        /** WatchlistAddReply ok */
        ok?: (boolean|null);
    }

    /** Ответ с информацией о результатах добавления инструментов в список наблюдения пользователя. */
    class WatchlistAddReply implements IWatchlistAddReply {

        /**
         * Constructs a new WatchlistAddReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IWatchlistAddReply);

        /** WatchlistAddReply ok. */
        public ok: boolean;

        /**
         * Creates a new WatchlistAddReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WatchlistAddReply instance
         */
        public static create(properties?: IRIS.IWatchlistAddReply): IRIS.WatchlistAddReply;

        /**
         * Encodes the specified WatchlistAddReply message. Does not implicitly {@link IRIS.WatchlistAddReply.verify|verify} messages.
         * @param message WatchlistAddReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IWatchlistAddReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified WatchlistAddReply message, length delimited. Does not implicitly {@link IRIS.WatchlistAddReply.verify|verify} messages.
         * @param message WatchlistAddReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IWatchlistAddReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a WatchlistAddReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WatchlistAddReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.WatchlistAddReply;

        /**
         * Decodes a WatchlistAddReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WatchlistAddReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.WatchlistAddReply;

        /**
         * Verifies a WatchlistAddReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WatchlistAddReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WatchlistAddReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.WatchlistAddReply;

        /**
         * Creates a plain object from a WatchlistAddReply message. Also converts values to other types if specified.
         * @param message WatchlistAddReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.WatchlistAddReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WatchlistAddReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WatchlistDelRequest. */
    interface IWatchlistDelRequest {

        /** WatchlistDelRequest instruments */
        instruments?: (IRIS.IWatchlistInstrument[]|null);
    }

    /** Запрос на удаление инструментов из списка наблюдения пользователя. */
    class WatchlistDelRequest implements IWatchlistDelRequest {

        /**
         * Constructs a new WatchlistDelRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IWatchlistDelRequest);

        /** WatchlistDelRequest instruments. */
        public instruments: IRIS.IWatchlistInstrument[];

        /**
         * Creates a new WatchlistDelRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WatchlistDelRequest instance
         */
        public static create(properties?: IRIS.IWatchlistDelRequest): IRIS.WatchlistDelRequest;

        /**
         * Encodes the specified WatchlistDelRequest message. Does not implicitly {@link IRIS.WatchlistDelRequest.verify|verify} messages.
         * @param message WatchlistDelRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IWatchlistDelRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified WatchlistDelRequest message, length delimited. Does not implicitly {@link IRIS.WatchlistDelRequest.verify|verify} messages.
         * @param message WatchlistDelRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IWatchlistDelRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a WatchlistDelRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WatchlistDelRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.WatchlistDelRequest;

        /**
         * Decodes a WatchlistDelRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WatchlistDelRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.WatchlistDelRequest;

        /**
         * Verifies a WatchlistDelRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WatchlistDelRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WatchlistDelRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.WatchlistDelRequest;

        /**
         * Creates a plain object from a WatchlistDelRequest message. Also converts values to other types if specified.
         * @param message WatchlistDelRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.WatchlistDelRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WatchlistDelRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WatchlistDelReply. */
    interface IWatchlistDelReply {

        /** WatchlistDelReply ok */
        ok?: (boolean|null);
    }

    /** Ответ с информацией о результатах удаления инструментов из списка наблюдения пользователя. */
    class WatchlistDelReply implements IWatchlistDelReply {

        /**
         * Constructs a new WatchlistDelReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IWatchlistDelReply);

        /** WatchlistDelReply ok. */
        public ok: boolean;

        /**
         * Creates a new WatchlistDelReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WatchlistDelReply instance
         */
        public static create(properties?: IRIS.IWatchlistDelReply): IRIS.WatchlistDelReply;

        /**
         * Encodes the specified WatchlistDelReply message. Does not implicitly {@link IRIS.WatchlistDelReply.verify|verify} messages.
         * @param message WatchlistDelReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IWatchlistDelReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified WatchlistDelReply message, length delimited. Does not implicitly {@link IRIS.WatchlistDelReply.verify|verify} messages.
         * @param message WatchlistDelReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IWatchlistDelReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a WatchlistDelReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WatchlistDelReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.WatchlistDelReply;

        /**
         * Decodes a WatchlistDelReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WatchlistDelReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.WatchlistDelReply;

        /**
         * Verifies a WatchlistDelReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WatchlistDelReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WatchlistDelReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.WatchlistDelReply;

        /**
         * Creates a plain object from a WatchlistDelReply message. Also converts values to other types if specified.
         * @param message WatchlistDelReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.WatchlistDelReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WatchlistDelReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WatchlistRequest. */
    interface IWatchlistRequest {

        /** WatchlistRequest types */
        types?: (IRIS.WatchlistInstrumentType[]|null);
    }

    /** Запрос на получение котировок для инструментов входящих в список наблюдения пользователя. */
    class WatchlistRequest implements IWatchlistRequest {

        /**
         * Constructs a new WatchlistRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IWatchlistRequest);

        /** WatchlistRequest types. */
        public types: IRIS.WatchlistInstrumentType[];

        /**
         * Creates a new WatchlistRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WatchlistRequest instance
         */
        public static create(properties?: IRIS.IWatchlistRequest): IRIS.WatchlistRequest;

        /**
         * Encodes the specified WatchlistRequest message. Does not implicitly {@link IRIS.WatchlistRequest.verify|verify} messages.
         * @param message WatchlistRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IWatchlistRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified WatchlistRequest message, length delimited. Does not implicitly {@link IRIS.WatchlistRequest.verify|verify} messages.
         * @param message WatchlistRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IWatchlistRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a WatchlistRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WatchlistRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.WatchlistRequest;

        /**
         * Decodes a WatchlistRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WatchlistRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.WatchlistRequest;

        /**
         * Verifies a WatchlistRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WatchlistRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WatchlistRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.WatchlistRequest;

        /**
         * Creates a plain object from a WatchlistRequest message. Also converts values to other types if specified.
         * @param message WatchlistRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.WatchlistRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WatchlistRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WatchlistReply. */
    interface IWatchlistReply {

        /** WatchlistReply secQuotes */
        secQuotes?: (IRIS.ITotal[]|null);

        /** WatchlistReply curQuotes */
        curQuotes?: (IRIS.ICurTotal[]|null);

        /** WatchlistReply indQuotes */
        indQuotes?: (IRIS.IIndicator[]|null);
    }

    /**
     * Ответ с информацией о котировках для инструментов входящих в список наблюдения пользователя.
     * Для котировок в сообщении Total заполняются следующие поля: instrument_id, instrument_code, sec_type, price.open, price.high, price.low, price.close, price.close_time, price.wa, price.trend, price.trend_ps, volume.close, kzt_sum, usd_sum, deal_count.
     * Для котировок в сообщении CurTotal заполняются следующие поля: instrument_id, instrument_code, session_id, price.open, price.high, price.low, price.close, price.close_time, price.wa, price.trend, price.trend_ps, volume.close, sum, kzt_sum, usd_sum, deal_count.
     */
    class WatchlistReply implements IWatchlistReply {

        /**
         * Constructs a new WatchlistReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IWatchlistReply);

        /** WatchlistReply secQuotes. */
        public secQuotes: IRIS.ITotal[];

        /** WatchlistReply curQuotes. */
        public curQuotes: IRIS.ICurTotal[];

        /** WatchlistReply indQuotes. */
        public indQuotes: IRIS.IIndicator[];

        /**
         * Creates a new WatchlistReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WatchlistReply instance
         */
        public static create(properties?: IRIS.IWatchlistReply): IRIS.WatchlistReply;

        /**
         * Encodes the specified WatchlistReply message. Does not implicitly {@link IRIS.WatchlistReply.verify|verify} messages.
         * @param message WatchlistReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IWatchlistReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified WatchlistReply message, length delimited. Does not implicitly {@link IRIS.WatchlistReply.verify|verify} messages.
         * @param message WatchlistReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IWatchlistReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a WatchlistReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WatchlistReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.WatchlistReply;

        /**
         * Decodes a WatchlistReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WatchlistReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.WatchlistReply;

        /**
         * Verifies a WatchlistReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WatchlistReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WatchlistReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.WatchlistReply;

        /**
         * Creates a plain object from a WatchlistReply message. Also converts values to other types if specified.
         * @param message WatchlistReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.WatchlistReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WatchlistReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WatchlistUpdate. */
    interface IWatchlistUpdate {

        /** WatchlistUpdate userNames */
        userNames?: (string[]|null);
    }

    /**
     * Оповещение о пользователях, чьи списки наблюдения подлежат обновлению.
     * Пользователи должны обновить список наблюдения в двух случаях: если они получили сообщение WatchlistUpdate с пустым списком имен в параметре user_names или в случае присутствия своего имени в user_names.
     */
    class WatchlistUpdate implements IWatchlistUpdate {

        /**
         * Constructs a new WatchlistUpdate.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IWatchlistUpdate);

        /** WatchlistUpdate userNames. */
        public userNames: string[];

        /**
         * Creates a new WatchlistUpdate instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WatchlistUpdate instance
         */
        public static create(properties?: IRIS.IWatchlistUpdate): IRIS.WatchlistUpdate;

        /**
         * Encodes the specified WatchlistUpdate message. Does not implicitly {@link IRIS.WatchlistUpdate.verify|verify} messages.
         * @param message WatchlistUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IWatchlistUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified WatchlistUpdate message, length delimited. Does not implicitly {@link IRIS.WatchlistUpdate.verify|verify} messages.
         * @param message WatchlistUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IWatchlistUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a WatchlistUpdate message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WatchlistUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.WatchlistUpdate;

        /**
         * Decodes a WatchlistUpdate message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WatchlistUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.WatchlistUpdate;

        /**
         * Verifies a WatchlistUpdate message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WatchlistUpdate message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WatchlistUpdate
         */
        public static fromObject(object: { [k: string]: any }): IRIS.WatchlistUpdate;

        /**
         * Creates a plain object from a WatchlistUpdate message. Also converts values to other types if specified.
         * @param message WatchlistUpdate
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.WatchlistUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WatchlistUpdate to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a User. */
    interface IUser {

        /** User firstname */
        firstname?: (string|null);

        /** User lastname */
        lastname?: (string|null);

        /** User middlename */
        middlename?: (string|null);

        /** User email */
        email?: (string|null);

        /** User userName */
        userName?: (string|null);

        /** User password */
        password?: (string|null);

        /** User tel */
        tel?: (string|null);

        /** User address */
        address?: (string|null);

        /** User comments */
        comments?: (string|null);
    }

    /** Represents a User. */
    class User implements IUser {

        /**
         * Constructs a new User.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IUser);

        /** User firstname. */
        public firstname: string;

        /** User lastname. */
        public lastname: string;

        /** User middlename. */
        public middlename: string;

        /** User email. */
        public email: string;

        /** User userName. */
        public userName: string;

        /** User password. */
        public password: string;

        /** User tel. */
        public tel: string;

        /** User address. */
        public address: string;

        /** User comments. */
        public comments: string;

        /**
         * Creates a new User instance using the specified properties.
         * @param [properties] Properties to set
         * @returns User instance
         */
        public static create(properties?: IRIS.IUser): IRIS.User;

        /**
         * Encodes the specified User message. Does not implicitly {@link IRIS.User.verify|verify} messages.
         * @param message User message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified User message, length delimited. Does not implicitly {@link IRIS.User.verify|verify} messages.
         * @param message User message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a User message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns User
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.User;

        /**
         * Decodes a User message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns User
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.User;

        /**
         * Verifies a User message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a User message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns User
         */
        public static fromObject(object: { [k: string]: any }): IRIS.User;

        /**
         * Creates a plain object from a User message. Also converts values to other types if specified.
         * @param message User
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.User, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this User to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserRegRequest. */
    interface IUserRegRequest {

        /** UserRegRequest user */
        user?: (IRIS.IUser|null);

        /** UserRegRequest lang */
        lang?: (IRIS.Language|null);

        /** UserRegRequest guid */
        guid?: (string|null);

        /** UserRegRequest reCaptcha */
        reCaptcha?: (string|null);
    }

    /** Запрос на регистрацию пользователя. */
    class UserRegRequest implements IUserRegRequest {

        /**
         * Constructs a new UserRegRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IUserRegRequest);

        /** UserRegRequest user. */
        public user?: (IRIS.IUser|null);

        /** UserRegRequest lang. */
        public lang: IRIS.Language;

        /** UserRegRequest guid. */
        public guid: string;

        /** UserRegRequest reCaptcha. */
        public reCaptcha: string;

        /**
         * Creates a new UserRegRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserRegRequest instance
         */
        public static create(properties?: IRIS.IUserRegRequest): IRIS.UserRegRequest;

        /**
         * Encodes the specified UserRegRequest message. Does not implicitly {@link IRIS.UserRegRequest.verify|verify} messages.
         * @param message UserRegRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IUserRegRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserRegRequest message, length delimited. Does not implicitly {@link IRIS.UserRegRequest.verify|verify} messages.
         * @param message UserRegRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IUserRegRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserRegRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserRegRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.UserRegRequest;

        /**
         * Decodes a UserRegRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserRegRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.UserRegRequest;

        /**
         * Verifies a UserRegRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserRegRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserRegRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.UserRegRequest;

        /**
         * Creates a plain object from a UserRegRequest message. Also converts values to other types if specified.
         * @param message UserRegRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.UserRegRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserRegRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RegError. */
    interface IRegError {

        /** RegError id */
        id?: (string|null);

        /** RegError message */
        message?: (string|null);
    }

    /** Сообщение о неправильном заполнении поля при регистрации. */
    class RegError implements IRegError {

        /**
         * Constructs a new RegError.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IRegError);

        /** RegError id. */
        public id: string;

        /** RegError message. */
        public message: string;

        /**
         * Creates a new RegError instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RegError instance
         */
        public static create(properties?: IRIS.IRegError): IRIS.RegError;

        /**
         * Encodes the specified RegError message. Does not implicitly {@link IRIS.RegError.verify|verify} messages.
         * @param message RegError message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IRegError, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RegError message, length delimited. Does not implicitly {@link IRIS.RegError.verify|verify} messages.
         * @param message RegError message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IRegError, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RegError message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RegError
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.RegError;

        /**
         * Decodes a RegError message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RegError
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.RegError;

        /**
         * Verifies a RegError message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RegError message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RegError
         */
        public static fromObject(object: { [k: string]: any }): IRIS.RegError;

        /**
         * Creates a plain object from a RegError message. Also converts values to other types if specified.
         * @param message RegError
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.RegError, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RegError to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserRegReply. */
    interface IUserRegReply {

        /** UserRegReply ok */
        ok?: (boolean|null);

        /** UserRegReply messages */
        messages?: (IRIS.IRegError[]|null);
    }

    /** Ответ с результатом регистрации пользователя. */
    class UserRegReply implements IUserRegReply {

        /**
         * Constructs a new UserRegReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IUserRegReply);

        /** UserRegReply ok. */
        public ok: boolean;

        /** UserRegReply messages. */
        public messages: IRIS.IRegError[];

        /**
         * Creates a new UserRegReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserRegReply instance
         */
        public static create(properties?: IRIS.IUserRegReply): IRIS.UserRegReply;

        /**
         * Encodes the specified UserRegReply message. Does not implicitly {@link IRIS.UserRegReply.verify|verify} messages.
         * @param message UserRegReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IUserRegReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserRegReply message, length delimited. Does not implicitly {@link IRIS.UserRegReply.verify|verify} messages.
         * @param message UserRegReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IUserRegReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserRegReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserRegReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.UserRegReply;

        /**
         * Decodes a UserRegReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserRegReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.UserRegReply;

        /**
         * Verifies a UserRegReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserRegReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserRegReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.UserRegReply;

        /**
         * Creates a plain object from a UserRegReply message. Also converts values to other types if specified.
         * @param message UserRegReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.UserRegReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserRegReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ResetPwdRequest. */
    interface IResetPwdRequest {

        /** ResetPwdRequest lang */
        lang?: (IRIS.Language|null);

        /** ResetPwdRequest userName */
        userName?: (string|null);
    }

    /**
     * Запрос на сброс пароля пользователя.
     * Пароль меняется на новый, созданный случайным образом и высылается на e-mail пользователя.
     */
    class ResetPwdRequest implements IResetPwdRequest {

        /**
         * Constructs a new ResetPwdRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IResetPwdRequest);

        /** ResetPwdRequest lang. */
        public lang: IRIS.Language;

        /** ResetPwdRequest userName. */
        public userName: string;

        /**
         * Creates a new ResetPwdRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ResetPwdRequest instance
         */
        public static create(properties?: IRIS.IResetPwdRequest): IRIS.ResetPwdRequest;

        /**
         * Encodes the specified ResetPwdRequest message. Does not implicitly {@link IRIS.ResetPwdRequest.verify|verify} messages.
         * @param message ResetPwdRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IResetPwdRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ResetPwdRequest message, length delimited. Does not implicitly {@link IRIS.ResetPwdRequest.verify|verify} messages.
         * @param message ResetPwdRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IResetPwdRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ResetPwdRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ResetPwdRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.ResetPwdRequest;

        /**
         * Decodes a ResetPwdRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ResetPwdRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.ResetPwdRequest;

        /**
         * Verifies a ResetPwdRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ResetPwdRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ResetPwdRequest
         */
        public static fromObject(object: { [k: string]: any }): IRIS.ResetPwdRequest;

        /**
         * Creates a plain object from a ResetPwdRequest message. Also converts values to other types if specified.
         * @param message ResetPwdRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.ResetPwdRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ResetPwdRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ResetPwdReply. */
    interface IResetPwdReply {

        /** ResetPwdReply ok */
        ok?: (boolean|null);

        /** ResetPwdReply message */
        message?: (string|null);
    }

    /** Ответ с результатом сброса пароля. */
    class ResetPwdReply implements IResetPwdReply {

        /**
         * Constructs a new ResetPwdReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: IRIS.IResetPwdReply);

        /** ResetPwdReply ok. */
        public ok: boolean;

        /** ResetPwdReply message. */
        public message: string;

        /**
         * Creates a new ResetPwdReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ResetPwdReply instance
         */
        public static create(properties?: IRIS.IResetPwdReply): IRIS.ResetPwdReply;

        /**
         * Encodes the specified ResetPwdReply message. Does not implicitly {@link IRIS.ResetPwdReply.verify|verify} messages.
         * @param message ResetPwdReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IRIS.IResetPwdReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ResetPwdReply message, length delimited. Does not implicitly {@link IRIS.ResetPwdReply.verify|verify} messages.
         * @param message ResetPwdReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IRIS.IResetPwdReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ResetPwdReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ResetPwdReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IRIS.ResetPwdReply;

        /**
         * Decodes a ResetPwdReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ResetPwdReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IRIS.ResetPwdReply;

        /**
         * Verifies a ResetPwdReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ResetPwdReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ResetPwdReply
         */
        public static fromObject(object: { [k: string]: any }): IRIS.ResetPwdReply;

        /**
         * Creates a plain object from a ResetPwdReply message. Also converts values to other types if specified.
         * @param message ResetPwdReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: IRIS.ResetPwdReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ResetPwdReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}
